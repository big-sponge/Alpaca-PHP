!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
APP_PATH	.\Source\public\index.php	/^define("APP_PATH",  realpath(dirname(__FILE__) . '\/..\/')); $/;"	d
AbstractAdapter	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^abstract class AbstractAdapter implements AdapterInterface$/;"	c
AbstractConnection	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^abstract class AbstractConnection implements ConnectionInterface, ProfilerAwareInterface$/;"	c
AbstractConstraint	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^abstract class AbstractConstraint implements ConstraintInterface$/;"	c
AbstractContainer	.\Source\application\library\Zend\Session\AbstractContainer.php	/^abstract class AbstractContainer extends ArrayObject$/;"	c
AbstractController	.\Source\application\library\Alpaca\MVC\Controller\AbstractController.php	/^class AbstractController extends \\Yaf_Controller_Abstract $/;"	c
AbstractDb	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^abstract class AbstractDb extends AbstractValidator$/;"	c
AbstractExpression	.\Source\application\library\Zend\Db\Sql\AbstractExpression.php	/^abstract class AbstractExpression implements ExpressionInterface$/;"	c
AbstractFeature	.\Source\application\library\Zend\Db\Adapter\Driver\Feature\AbstractFeature.php	/^abstract class AbstractFeature$/;"	c
AbstractFeature	.\Source\application\library\Zend\Db\RowGateway\Feature\AbstractFeature.php	/^abstract class AbstractFeature extends AbstractRowGateway$/;"	c
AbstractFeature	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^abstract class AbstractFeature extends AbstractTableGateway$/;"	c
AbstractFileExtractor	.\Source\application\library\vendor\symfony\translation\Extractor\AbstractFileExtractor.php	/^abstract class AbstractFileExtractor$/;"	c
AbstractHydrator	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^abstract class AbstractHydrator implements$/;"	c
AbstractIndex	.\Source\application\library\Zend\Db\Sql\Ddl\Index\AbstractIndex.php	/^abstract class AbstractIndex extends AbstractConstraint$/;"	c
AbstractLengthColumn	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractLengthColumn.php	/^abstract class AbstractLengthColumn extends Column$/;"	c
AbstractManager	.\Source\application\library\Zend\Session\AbstractManager.php	/^abstract class AbstractManager implements Manager$/;"	c
AbstractOperation	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^abstract class AbstractOperation implements OperationInterface$/;"	c
AbstractOperationTest	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php	/^abstract class AbstractOperationTest extends \\PHPUnit_Framework_TestCase$/;"	c
AbstractOptions	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^abstract class AbstractOptions implements ParameterObjectInterface$/;"	c
AbstractPlatform	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^abstract class AbstractPlatform implements PlatformInterface$/;"	c
AbstractPlatform	.\Source\application\library\Zend\Db\Sql\Platform\AbstractPlatform.php	/^class AbstractPlatform implements PlatformDecoratorInterface, PreparableSqlInterface, SqlInterface$/;"	c
AbstractPrecisionColumn	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractPrecisionColumn.php	/^abstract class AbstractPrecisionColumn extends AbstractLengthColumn$/;"	c
AbstractPreparableSql	.\Source\application\library\Zend\Db\Sql\AbstractPreparableSql.php	/^abstract class AbstractPreparableSql extends AbstractSql implements PreparableSqlInterface$/;"	c
AbstractResultSet	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^abstract class AbstractResultSet implements Iterator, ResultSetInterface$/;"	c
AbstractRowGateway	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^abstract class AbstractRowGateway implements ArrayAccess, Countable, RowGatewayInterface$/;"	c
AbstractSessionArrayStorage	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^abstract class AbstractSessionArrayStorage implements$/;"	c
AbstractSource	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^abstract class AbstractSource implements MetadataInterface$/;"	c
AbstractSql	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^abstract class AbstractSql implements SqlInterface$/;"	c
AbstractStringWrapper	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^abstract class AbstractStringWrapper implements StringWrapperInterface$/;"	c
AbstractTable	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^class AbstractTable$/;"	c
AbstractTableGateway	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^abstract class AbstractTableGateway implements TableGatewayInterface$/;"	c
AbstractTableObject	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^abstract class AbstractTableObject$/;"	c
AbstractTimestampColumn	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractTimestampColumn.php	/^abstract class AbstractTimestampColumn extends Column$/;"	c
AbstractValidator	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^abstract class AbstractValidator implements$/;"	c
Action	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $this->Action = $segments[3];$/;"	v
Action	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $Action = null;$/;"	v
ActionName	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $this->ActionName = $this->Action.$this->ActionPostfix;$/;"	v
ActionName	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $ActionName = null;$/;"	v
ActionPostfix	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $ActionPostfix = 'Action';$/;"	v
Adapter	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^class Adapter implements AdapterInterface, Profiler\\ProfilerAwareInterface$/;"	c
AdapterAbstractServiceFactory	.\Source\application\library\Zend\Db\Adapter\AdapterAbstractServiceFactory.php	/^class AdapterAbstractServiceFactory implements AbstractFactoryInterface$/;"	c
AdapterAwareInterface	.\Source\application\library\Zend\Db\Adapter\AdapterAwareInterface.php	/^interface AdapterAwareInterface$/;"	i
AdapterInterface	.\Source\application\library\Zend\Db\Adapter\AdapterInterface.php	/^interface AdapterInterface$/;"	i
AdapterInterface	.\Source\application\library\Zend\Validator\Barcode\AdapterInterface.php	/^interface AdapterInterface$/;"	i
AdapterServiceFactory	.\Source\application\library\Zend\Db\Adapter\AdapterServiceFactory.php	/^class AdapterServiceFactory implements FactoryInterface$/;"	c
AggregateHydrator	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\AggregateHydrator.php	/^class AggregateHydrator implements HydratorInterface, EventManagerAwareInterface$/;"	c
AlpacaController	.\Source\application\library\Alpaca\MVC\Controller\AlpacaController.php	/^class AlpacaController$/;"	c
AlterTable	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^class AlterTable extends AbstractSql implements SqlInterface$/;"	c
AlterTableDecorator	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^class AlterTableDecorator extends AlterTable implements PlatformDecoratorInterface$/;"	c
App	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static $App;$/;"	v
App	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\App.php	/^class App extends Facade {$/;"	c
Application	.\Source\application\library\Alpaca\MVC\Application.php	/^class Application$/;"	c
Arr	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^class Arr {$/;"	c
ArrayConverter	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^class ArrayConverter$/;"	c
ArrayConverterTest	.\Source\application\library\vendor\symfony\translation\Tests\Util\ArrayConverterTest.php	/^class ArrayConverterTest extends \\PHPUnit_Framework_TestCase$/;"	c
ArrayLoader	.\Source\application\library\vendor\symfony\translation\Loader\ArrayLoader.php	/^class ArrayLoader implements LoaderInterface$/;"	c
ArrayMapNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\ArrayMapNamingStrategy.php	/^final class ArrayMapNamingStrategy implements NamingStrategyInterface$/;"	c
ArrayObject	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^class ArrayObject implements IteratorAggregate, ArrayAccess, Serializable, Countable$/;"	c
ArraySerializable	.\Source\application\library\Zend\Stdlib\Hydrator\ArraySerializable.php	/^class ArraySerializable extends AbstractHydrator$/;"	c
ArraySerializableInterface	.\Source\application\library\Zend\Stdlib\ArraySerializableInterface.php	/^interface ArraySerializableInterface$/;"	i
ArrayStack	.\Source\application\library\Zend\Stdlib\ArrayStack.php	/^class ArrayStack extends PhpArrayObject$/;"	c
ArrayStorage	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^class ArrayStorage extends ArrayObject implements StorageInterface$/;"	c
ArrayUtils	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^abstract class ArrayUtils$/;"	c
ArrayableInterface	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Contracts\ArrayableInterface.php	/^interface ArrayableInterface {$/;"	i
Artisan	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Artisan.php	/^class Artisan extends Facade {$/;"	c
Auth	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Auth.php	/^class Auth extends Facade {$/;"	c
BackupDumper	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^class BackupDumper implements DumperInterface$/;"	c
BadMethodCallException	.\Source\application\library\Zend\Session\Exception\BadMethodCallException.php	/^class BadMethodCallException extends \\BadMethodCallException implements$/;"	c
BadMethodCallException	.\Source\application\library\Zend\Stdlib\Exception\BadMethodCallException.php	/^class BadMethodCallException extends \\BadMethodCallException implements ExceptionInterface$/;"	c
BadMethodCallException	.\Source\application\library\Zend\Validator\Exception\BadMethodCallException.php	/^class BadMethodCallException extends \\BadMethodCallException implements ExceptionInterface$/;"	c
Barcode	.\Source\application\library\Zend\Validator\Barcode.php	/^class Barcode extends AbstractValidator$/;"	c
BaseCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\BaseCommand.php	/^class BaseCommand extends Command {$/;"	c
BaseSigner	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\BaseSigner.php	/^abstract class BaseSigner implements Signer$/;"	c
BaseSignerTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\BaseSignerTest.php	/^class BaseSignerTest extends \\PHPUnit_Framework_TestCase$/;"	c
Basic	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Basic.php	/^class Basic implements Claim$/;"	c
BasicTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\BasicTest.php	/^class BasicTest extends \\PHPUnit_Framework_TestCase$/;"	c
BelongsTo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^class BelongsTo extends Relation {$/;"	c
BelongsToMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^class BelongsToMany extends Relation {$/;"	c
Between	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^class Between extends AbstractExpression implements PredicateInterface$/;"	c
Between	.\Source\application\library\Zend\Validator\Between.php	/^class Between extends AbstractValidator$/;"	c
BigInteger	.\Source\application\library\Zend\Db\Sql\Ddl\Column\BigInteger.php	/^class BigInteger extends Integer$/;"	c
Binary	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Binary.php	/^class Binary extends AbstractLengthColumn$/;"	c
BindingResolutionException	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\BindingResolutionException.php	/^class BindingResolutionException extends \\Exception {}$/;"	c
Bitwise	.\Source\application\library\Zend\Validator\Bitwise.php	/^class Bitwise extends AbstractValidator$/;"	c
Blade	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Blade.php	/^class Blade extends Facade {$/;"	c
Blob	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Blob.php	/^class Blob extends AbstractLengthColumn$/;"	c
Blueprint	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^class Blueprint {$/;"	c
Boolean	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Boolean.php	/^class Boolean extends Column$/;"	c
BooleanStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\BooleanStrategy.php	/^final class BooleanStrategy implements StrategyInterface$/;"	c
Bootstrap	.\Source\application\Bootstrap.php	/^class Bootstrap$/;"	c
Builder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^class Builder {$/;"	c
Builder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^class Builder {$/;"	c
Builder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^class Builder {$/;"	c
Builder	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^class Builder$/;"	c
BuilderTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^class BuilderTest extends \\PHPUnit_Framework_TestCase$/;"	c
CONFIG	.\Source\public\index.php	/^$CONFIG = $config;$/;"	v
Cache	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^class Cache implements SaveHandlerInterface$/;"	c
Cache	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Cache.php	/^class Cache extends Facade {$/;"	c
Callback	.\Source\application\library\Zend\Validator\Callback.php	/^class Callback extends AbstractValidator$/;"	c
CallbackHandler	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^class CallbackHandler$/;"	c
CaptureTo	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^        $this->CaptureTo = (string) $capture;$/;"	v
CaptureTo	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $CaptureTo = 'content';$/;"	v
Carbon	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^class Carbon extends DateTime$/;"	c
CarbonInterval	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^class CarbonInterval extends DateInterval$/;"	c
ChainExtractor	.\Source\application\library\vendor\symfony\translation\Extractor\ChainExtractor.php	/^class ChainExtractor implements ExtractorInterface$/;"	c
Changefreq	.\Source\application\library\Zend\Validator\Sitemap\Changefreq.php	/^class Changefreq extends AbstractValidator$/;"	c
Char	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Char.php	/^class Char extends AbstractLengthColumn$/;"	c
Check	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\Check.php	/^class Check extends AbstractConstraint$/;"	c
Children	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $Children = array();$/;"	v
ChildrenData	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $ChildrenData = array();$/;"	v
Claim	.\Source\application\library\vendor\lcobucci\jwt\src\Claim.php	/^interface Claim extends JsonSerializable$/;"	i
ClassLoader	.\Source\application\library\vendor\composer\ClassLoader.php	/^class ClassLoader$/;"	c
ClassLoader	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^class ClassLoader {$/;"	c
ClassMethods	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^class ClassMethods extends AbstractHydrator implements HydratorOptionsInterface$/;"	c
ClosureStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^class ClosureStrategy implements StrategyInterface$/;"	c
Codabar	.\Source\application\library\Zend\Validator\Barcode\Codabar.php	/^class Codabar extends AbstractAdapter$/;"	c
Code128	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^class Code128 extends AbstractAdapter$/;"	c
Code25	.\Source\application\library\Zend\Validator\Barcode\Code25.php	/^class Code25 extends AbstractAdapter$/;"	c
Code25interleaved	.\Source\application\library\Zend\Validator\Barcode\Code25interleaved.php	/^class Code25interleaved extends AbstractAdapter$/;"	c
Code39	.\Source\application\library\Zend\Validator\Barcode\Code39.php	/^class Code39 extends AbstractAdapter$/;"	c
Code39ext	.\Source\application\library\Zend\Validator\Barcode\Code39ext.php	/^class Code39ext extends AbstractAdapter$/;"	c
Code93	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^class Code93 extends AbstractAdapter$/;"	c
Code93ext	.\Source\application\library\Zend\Validator\Barcode\Code93ext.php	/^class Code93ext extends AbstractAdapter$/;"	c
Collection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^class Collection extends BaseCollection {$/;"	c
Collection	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^class Collection implements ArrayAccess, ArrayableInterface, Countable, IteratorAggregate, JsonableInterface, JsonSerializable {$/;"	c
Column	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^class Column implements ColumnInterface$/;"	c
ColumnInterface	.\Source\application\library\Zend\Db\Sql\Ddl\Column\ColumnInterface.php	/^interface ColumnInterface extends ExpressionInterface$/;"	i
ColumnObject	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^class ColumnObject$/;"	c
Combine	.\Source\application\library\Zend\Db\Sql\Combine.php	/^class Combine extends AbstractPreparableSql$/;"	c
ComposerAutoloaderInit9ce445a4f92bda8f8ef4d37e4296111f	.\Source\application\library\vendor\composer\autoload_real.php	/^class ComposerAutoloaderInit9ce445a4f92bda8f8ef4d37e4296111f$/;"	c
ComposerStaticInit9ce445a4f92bda8f8ef4d37e4296111f	.\Source\application\library\vendor\composer\autoload_static.php	/^class ComposerStaticInit9ce445a4f92bda8f8ef4d37e4296111f$/;"	c
CompositeNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\CompositeNamingStrategy.php	/^final class CompositeNamingStrategy implements NamingStrategyInterface$/;"	c
ConcreteFileDumper	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^class ConcreteFileDumper extends FileDumper$/;"	c
Config	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Config.php	/^class Config extends Facade {$/;"	c
ConfigInterface	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^interface ConfigInterface$/;"	i
Connection	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^class Connection extends AbstractConnection$/;"	c
Connection	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^class Connection extends AbstractConnection$/;"	c
Connection	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^class Connection extends AbstractConnection$/;"	c
Connection	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^class Connection extends AbstractConnection$/;"	c
Connection	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^class Connection extends AbstractConnection$/;"	c
Connection	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^class Connection extends AbstractConnection$/;"	c
Connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^class Connection implements ConnectionInterface {$/;"	c
ConnectionFactory	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^class ConnectionFactory {$/;"	c
ConnectionInterface	.\Source\application\library\Zend\Db\Adapter\Driver\ConnectionInterface.php	/^interface ConnectionInterface$/;"	i
ConnectionInterface	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^interface ConnectionInterface {$/;"	i
ConnectionResolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^class ConnectionResolver implements ConnectionResolverInterface {$/;"	c
ConnectionResolverInterface	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolverInterface.php	/^interface ConnectionResolverInterface {$/;"	i
Connector	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\Connector.php	/^class Connector {$/;"	c
ConnectorInterface	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectorInterface.php	/^interface ConnectorInterface {$/;"	i
ConstraintInterface	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ConstraintInterface.php	/^interface ConstraintInterface extends ExpressionInterface$/;"	i
ConstraintKeyObject	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^class ConstraintKeyObject$/;"	c
ConstraintObject	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^class ConstraintObject$/;"	c
Container	.\Source\application\library\Zend\Session\Container.php	/^class Container extends AbstractContainer$/;"	c
Container	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^class Container implements ArrayAccess {$/;"	c
ContainerAbstractServiceFactory	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^class ContainerAbstractServiceFactory implements AbstractFactoryInterface$/;"	c
Controller	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $this->Controller = ucfirst($segments[2]);$/;"	v
Controller	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $Controller = null;$/;"	v
ControllerClassName	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $this->ControllerClassName = $this->Module.'\\\\Controller\\\\'.$this->ControllerName;$/;"	v
ControllerClassName	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $ControllerClassName = null;$/;"	v
ControllerName	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $this->ControllerName = $this->Controller.$this->ControllerPostfix;$/;"	v
ControllerName	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $ControllerName = null;$/;"	v
ControllerPostfix	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $ControllerPostfix = 'Controller';$/;"	v
Cookie	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Cookie.php	/^class Cookie extends Facade {$/;"	c
Count	.\Source\application\library\Zend\Validator\File\Count.php	/^class Count extends AbstractValidator$/;"	c
Crc32	.\Source\application\library\Zend\Validator\File\Crc32.php	/^class Crc32 extends Hash$/;"	c
CreateTable	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^class CreateTable extends AbstractSql implements SqlInterface$/;"	c
CreateTableDecorator	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^class CreateTableDecorator extends CreateTable implements PlatformDecoratorInterface$/;"	c
CreateTableDecorator	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\Ddl\CreateTableDecorator.php	/^class CreateTableDecorator extends CreateTable implements PlatformDecoratorInterface$/;"	c
CreditCard	.\Source\application\library\Zend\Validator\CreditCard.php	/^class CreditCard extends AbstractValidator$/;"	c
Crypt	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Crypt.php	/^class Crypt extends Facade {$/;"	c
Csrf	.\Source\application\library\Zend\Validator\Csrf.php	/^class Csrf extends AbstractValidator$/;"	c
CsvFileDumper	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^class CsvFileDumper extends FileDumper$/;"	c
CsvFileDumperTest	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\CsvFileDumperTest.php	/^class CsvFileDumperTest extends \\PHPUnit_Framework_TestCase$/;"	c
CsvFileLoader	.\Source\application\library\vendor\symfony\translation\Loader\CsvFileLoader.php	/^class CsvFileLoader extends FileLoader$/;"	c
CsvFileLoaderTest	.\Source\application\library\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php	/^class CsvFileLoaderTest extends \\PHPUnit_Framework_TestCase$/;"	c
DB	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\DB.php	/^class DB extends Facade {$/;"	c
Data	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^            $this->Data = $data;$/;"	v
Data	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $Data = array();$/;"	v
DataCollectorTranslator	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^class DataCollectorTranslator implements TranslatorInterface, TranslatorBagInterface$/;"	c
DataCollectorTranslatorTest	.\Source\application\library\vendor\symfony\translation\Tests\DataCollectorTranslatorTest.php	/^class DataCollectorTranslatorTest extends \\PHPUnit_Framework_TestCase$/;"	c
DatabaseManager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^class DatabaseManager implements ConnectionResolverInterface {$/;"	c
DatabaseMigrationRepository	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^class DatabaseMigrationRepository implements MigrationRepositoryInterface {$/;"	c
DatabaseServiceProvider	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseServiceProvider.php	/^class DatabaseServiceProvider extends ServiceProvider {$/;"	c
Date	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Date.php	/^class Date extends Column$/;"	c
Date	.\Source\application\library\Zend\Validator\Date.php	/^class Date extends AbstractValidator$/;"	c
DateStep	.\Source\application\library\Zend\Validator\DateStep.php	/^class DateStep extends Date$/;"	c
DateTime	.\Source\application\library\Zend\Stdlib\DateTime.php	/^class DateTime extends \\DateTime$/;"	c
DateTimeFormatterStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DateTimeFormatterStrategy.php	/^final class DateTimeFormatterStrategy implements StrategyInterface$/;"	c
Datetime	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Datetime.php	/^class Datetime extends Column$/;"	c
DbTableGateway	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^class DbTableGateway implements SaveHandlerInterface$/;"	c
DbTableGatewayOptions	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^class DbTableGatewayOptions extends AbstractOptions$/;"	c
Decimal	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Decimal.php	/^class Decimal extends AbstractPrecisionColumn$/;"	c
Decoder	.\Source\application\library\vendor\lcobucci\jwt\src\Parsing\Decoder.php	/^class Decoder$/;"	c
DecoderTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Parsing\DecoderTest.php	/^class DecoderTest extends \\PHPUnit_Framework_TestCase$/;"	c
DefaultAction	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $DefaultAction = 'index';$/;"	v
DefaultController	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $DefaultController = 'index';$/;"	v
DefaultModule	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $DefaultModule = 'index';$/;"	v
DefaultStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DefaultStrategy.php	/^class DefaultStrategy implements StrategyInterface$/;"	c
DefaultViewCaptureTo	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static $DefaultViewCaptureTo = "content";$/;"	v
DelegatingHydrator	.\Source\application\library\Zend\Stdlib\Hydrator\DelegatingHydrator.php	/^class DelegatingHydrator implements HydratorInterface$/;"	c
DelegatingHydratorFactory	.\Source\application\library\Zend\Stdlib\Hydrator\DelegatingHydratorFactory.php	/^class DelegatingHydratorFactory implements FactoryInterface$/;"	c
Delete	.\Source\application\library\Zend\Db\Sql\Delete.php	/^class Delete extends AbstractPreparableSql$/;"	c
Digits	.\Source\application\library\Zend\Validator\Digits.php	/^class Digits extends AbstractValidator$/;"	c
DispatchableInterface	.\Source\application\library\Zend\Stdlib\DispatchableInterface.php	/^interface DispatchableInterface$/;"	i
Dispatcher	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^class Dispatcher {$/;"	c
DomainException	.\Source\application\library\Zend\Stdlib\Exception\DomainException.php	/^class DomainException extends \\DomainException implements ExceptionInterface$/;"	c
DriverFeatureInterface	.\Source\application\library\Zend\Db\Adapter\Driver\Feature\DriverFeatureInterface.php	/^interface DriverFeatureInterface$/;"	i
DriverInterface	.\Source\application\library\Zend\Db\Adapter\Driver\DriverInterface.php	/^interface DriverInterface$/;"	i
DropTable	.\Source\application\library\Zend\Db\Sql\Ddl\DropTable.php	/^class DropTable extends AbstractSql implements SqlInterface$/;"	c
DumperInterface	.\Source\application\library\vendor\symfony\translation\Dumper\DumperInterface.php	/^interface DumperInterface$/;"	i
Ean12	.\Source\application\library\Zend\Validator\Barcode\Ean12.php	/^class Ean12 extends AbstractAdapter$/;"	c
Ean13	.\Source\application\library\Zend\Validator\Barcode\Ean13.php	/^class Ean13 extends AbstractAdapter$/;"	c
Ean14	.\Source\application\library\Zend\Validator\Barcode\Ean14.php	/^class Ean14 extends AbstractAdapter$/;"	c
Ean18	.\Source\application\library\Zend\Validator\Barcode\Ean18.php	/^class Ean18 extends AbstractAdapter$/;"	c
Ean2	.\Source\application\library\Zend\Validator\Barcode\Ean2.php	/^class Ean2 extends AbstractAdapter$/;"	c
Ean5	.\Source\application\library\Zend\Validator\Barcode\Ean5.php	/^class Ean5 extends AbstractAdapter$/;"	c
Ean8	.\Source\application\library\Zend\Validator\Barcode\Ean8.php	/^class Ean8 extends AbstractAdapter$/;"	c
Ecdsa	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^abstract class Ecdsa extends BaseSigner$/;"	c
EcdsaTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^class EcdsaTest extends \\PHPUnit_Framework_TestCase$/;"	c
EcdsaTokenTest	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^class EcdsaTokenTest extends \\PHPUnit_Framework_TestCase$/;"	c
EmailAddress	.\Source\application\library\Zend\Validator\EmailAddress.php	/^class EmailAddress extends AbstractValidator$/;"	c
EnableView	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $EnableView = true;$/;"	v
Encoder	.\Source\application\library\vendor\lcobucci\jwt\src\Parsing\Encoder.php	/^class Encoder$/;"	c
EncoderTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Parsing\EncoderTest.php	/^class EncoderTest extends \\PHPUnit_Framework_TestCase$/;"	c
EqualsTo	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\EqualsTo.php	/^class EqualsTo extends Basic implements Claim, Validatable$/;"	c
EqualsToTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\EqualsToTest.php	/^class EqualsToTest extends \\PHPUnit_Framework_TestCase$/;"	c
ErrorException	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Exception\ErrorException.php	/^class ErrorException extends Exception\\ErrorException implements ExceptionInterface$/;"	c
ErrorException	.\Source\application\library\Zend\Db\Adapter\Exception\ErrorException.php	/^class ErrorException extends Exception\\ErrorException implements ExceptionInterface$/;"	c
ErrorException	.\Source\application\library\Zend\Db\Exception\ErrorException.php	/^class ErrorException extends \\Exception implements ExceptionInterface$/;"	c
ErrorHandler	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^abstract class ErrorHandler$/;"	c
Event	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Event.php	/^class Event extends Facade {$/;"	c
EventFeature	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^class EventFeature extends AbstractFeature implements EventsCapableInterface$/;"	c
EventServiceProvider	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\EventServiceProvider.php	/^class EventServiceProvider extends ServiceProvider {$/;"	c
ExceptionInterface	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Exception\ExceptionInterface.php	/^interface ExceptionInterface extends Exception\\ExceptionInterface$/;"	i
ExceptionInterface	.\Source\application\library\Zend\Db\Adapter\Exception\ExceptionInterface.php	/^interface ExceptionInterface extends Exception\\ExceptionInterface$/;"	i
ExceptionInterface	.\Source\application\library\Zend\Db\Exception\ExceptionInterface.php	/^interface ExceptionInterface$/;"	i
ExceptionInterface	.\Source\application\library\Zend\Db\ResultSet\Exception\ExceptionInterface.php	/^interface ExceptionInterface extends Exception\\ExceptionInterface$/;"	i
ExceptionInterface	.\Source\application\library\Zend\Db\RowGateway\Exception\ExceptionInterface.php	/^interface ExceptionInterface extends Exception\\ExceptionInterface$/;"	i
ExceptionInterface	.\Source\application\library\Zend\Db\Sql\Exception\ExceptionInterface.php	/^interface ExceptionInterface extends Exception\\ExceptionInterface$/;"	i
ExceptionInterface	.\Source\application\library\Zend\Db\TableGateway\Exception\ExceptionInterface.php	/^interface ExceptionInterface extends Exception\\ExceptionInterface$/;"	i
ExceptionInterface	.\Source\application\library\Zend\Session\Exception\ExceptionInterface.php	/^interface ExceptionInterface$/;"	i
ExceptionInterface	.\Source\application\library\Zend\Stdlib\Exception\ExceptionInterface.php	/^interface ExceptionInterface$/;"	i
ExceptionInterface	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\Exception\ExceptionInterface.php	/^interface ExceptionInterface$/;"	i
ExceptionInterface	.\Source\application\library\Zend\Validator\Exception\ExceptionInterface.php	/^interface ExceptionInterface$/;"	i
ExceptionInterface	.\Source\application\library\vendor\symfony\translation\Exception\ExceptionInterface.php	/^interface ExceptionInterface$/;"	i
ExceptionInterface	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Exception\ExceptionInterface.php	/^interface ExceptionInterface$/;"	i
ExcludeExtension	.\Source\application\library\Zend\Validator\File\ExcludeExtension.php	/^class ExcludeExtension extends Extension$/;"	c
ExcludeMimeType	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^class ExcludeMimeType extends MimeType$/;"	c
Exists	.\Source\application\library\Zend\Validator\File\Exists.php	/^class Exists extends AbstractValidator$/;"	c
Explode	.\Source\application\library\Zend\Validator\Explode.php	/^class Explode extends AbstractValidator implements ValidatorPluginManagerAwareInterface$/;"	c
ExplodeStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ExplodeStrategy.php	/^final class ExplodeStrategy implements StrategyInterface$/;"	c
Expression	.\Source\application\library\Zend\Db\Sql\Expression.php	/^class Expression extends AbstractExpression$/;"	c
Expression	.\Source\application\library\Zend\Db\Sql\Predicate\Expression.php	/^class Expression extends BaseExpression implements PredicateInterface$/;"	c
Expression	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Expression.php	/^class Expression {$/;"	c
ExpressionInterface	.\Source\application\library\Zend\Db\Sql\ExpressionInterface.php	/^interface ExpressionInterface$/;"	i
Extension	.\Source\application\library\Zend\Validator\File\Extension.php	/^class Extension extends AbstractValidator$/;"	c
ExtensionNotLoadedException	.\Source\application\library\Zend\Stdlib\Exception\ExtensionNotLoadedException.php	/^class ExtensionNotLoadedException extends RuntimeException$/;"	c
ExtensionNotLoadedException	.\Source\application\library\Zend\Validator\Exception\ExtensionNotLoadedException.php	/^class ExtensionNotLoadedException extends RuntimeException$/;"	c
ExtractEvent	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^class ExtractEvent extends Event$/;"	c
ExtractionInterface	.\Source\application\library\Zend\Stdlib\Extractor\ExtractionInterface.php	/^interface ExtractionInterface$/;"	i
ExtractorInterface	.\Source\application\library\vendor\symfony\translation\Extractor\ExtractorInterface.php	/^interface ExtractorInterface$/;"	i
Facade	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^abstract class Facade {$/;"	c
Factory	.\Source\application\library\Zend\Session\Storage\Factory.php	/^abstract class Factory$/;"	c
Factory	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Factory.php	/^class Factory$/;"	c
FactoryTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^class FactoryTest extends \\PHPUnit_Framework_TestCase$/;"	c
FeatureSet	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^class FeatureSet$/;"	c
FeatureSet	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^class FeatureSet$/;"	c
File	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\File.php	/^class File extends Facade {$/;"	c
FileDumper	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^abstract class FileDumper implements DumperInterface$/;"	c
FileDumperTest	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^class FileDumperTest extends \\PHPUnit_Framework_TestCase$/;"	c
FileLoader	.\Source\application\library\vendor\symfony\translation\Loader\FileLoader.php	/^abstract class FileLoader extends ArrayLoader$/;"	c
FilesSize	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^class FilesSize extends Size$/;"	c
FilterComposite	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^class FilterComposite implements FilterInterface$/;"	c
FilterEnabledInterface	.\Source\application\library\Zend\Stdlib\Hydrator\FilterEnabledInterface.php	/^interface FilterEnabledInterface extends FilterProviderInterface$/;"	i
FilterInterface	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterInterface.php	/^interface FilterInterface$/;"	i
FilterProviderInterface	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterProviderInterface.php	/^interface FilterProviderInterface$/;"	i
Float	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Float.php	/^class Float extends Floating$/;"	c
Floating	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Floating.php	/^class Floating extends AbstractPrecisionColumn$/;"	c
Fluent	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^class Fluent implements ArrayAccess, ArrayableInterface, JsonableInterface, JsonSerializable {$/;"	c
ForeignKey	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^class ForeignKey extends AbstractConstraint$/;"	c
Form	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Form.php	/^class Form extends Facade {$/;"	c
GetFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\GetFilter.php	/^class GetFilter implements FilterInterface$/;"	c
Glob	.\Source\application\library\Zend\Stdlib\Glob.php	/^abstract class Glob$/;"	c
GlobalAdapterFeature	.\Source\application\library\Zend\Db\TableGateway\Feature\GlobalAdapterFeature.php	/^class GlobalAdapterFeature extends AbstractFeature$/;"	c
Grammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^abstract class Grammar {$/;"	c
Grammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^class Grammar extends BaseGrammar {$/;"	c
Grammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^abstract class Grammar extends BaseGrammar {$/;"	c
GreaterOrEqualsTo	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\GreaterOrEqualsTo.php	/^class GreaterOrEqualsTo extends Basic implements Claim, Validatable$/;"	c
GreaterOrEqualsToTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\GreaterOrEqualsToTest.php	/^class GreaterOrEqualsToTest extends \\PHPUnit_Framework_TestCase$/;"	c
GreaterThan	.\Source\application\library\Zend\Validator\GreaterThan.php	/^class GreaterThan extends AbstractValidator$/;"	c
Gtin12	.\Source\application\library\Zend\Validator\Barcode\Gtin12.php	/^class Gtin12 extends AbstractAdapter$/;"	c
Gtin13	.\Source\application\library\Zend\Validator\Barcode\Gtin13.php	/^class Gtin13 extends AbstractAdapter$/;"	c
Gtin14	.\Source\application\library\Zend\Validator\Barcode\Gtin14.php	/^class Gtin14 extends AbstractAdapter$/;"	c
GuardUtils	.\Source\application\library\Zend\Stdlib\Guard\GuardUtils.php	/^abstract class GuardUtils$/;"	c
HTML	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\HTML.php	/^class HTML extends Facade {$/;"	c
HasFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\HasFilter.php	/^class HasFilter implements FilterInterface$/;"	c
HasMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasMany.php	/^class HasMany extends HasOneOrMany {$/;"	c
HasManyThrough	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^class HasManyThrough extends Relation {$/;"	c
HasOne	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOne.php	/^class HasOne extends HasOneOrMany {$/;"	c
HasOneOrMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^abstract class HasOneOrMany extends Relation {$/;"	c
Hash	.\Source\application\library\Zend\Validator\File\Hash.php	/^class Hash extends AbstractValidator$/;"	c
Hash	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Hash.php	/^class Hash extends Facade {$/;"	c
Having	.\Source\application\library\Zend\Db\Sql\Having.php	/^class Having extends Predicate\\Predicate$/;"	c
Hex	.\Source\application\library\Zend\Validator\Hex.php	/^class Hex extends AbstractValidator$/;"	c
Hmac	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac.php	/^abstract class Hmac extends BaseSigner$/;"	c
HmacTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\HmacTest.php	/^class HmacTest extends \\PHPUnit_Framework_TestCase$/;"	c
HmacTokenTest	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^class HmacTokenTest extends \\PHPUnit_Framework_TestCase$/;"	c
Hostname	.\Source\application\library\Zend\Validator\Hostname.php	/^class Hostname extends AbstractValidator$/;"	c
Html	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^            $this->Html = ob_get_clean();$/;"	v
Html	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $Html = null;$/;"	v
HttpUserAgent	.\Source\application\library\Zend\Session\Validator\HttpUserAgent.php	/^class HttpUserAgent implements ValidatorInterface$/;"	c
HydrateEvent	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^class HydrateEvent extends Event$/;"	c
HydratingResultSet	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^class HydratingResultSet extends AbstractResultSet$/;"	c
HydrationInterface	.\Source\application\library\Zend\Stdlib\Hydrator\HydrationInterface.php	/^interface HydrationInterface$/;"	i
HydratorAwareInterface	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorAwareInterface.php	/^interface HydratorAwareInterface$/;"	i
HydratorInterface	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorInterface.php	/^interface HydratorInterface extends HydrationInterface, ExtractionInterface$/;"	i
HydratorListener	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydratorListener.php	/^class HydratorListener extends AbstractListenerAggregate$/;"	c
HydratorOptionsInterface	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorOptionsInterface.php	/^interface HydratorOptionsInterface$/;"	i
HydratorPluginManager	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorPluginManager.php	/^class HydratorPluginManager extends AbstractPluginManager$/;"	c
Iban	.\Source\application\library\Zend\Validator\Iban.php	/^class Iban extends AbstractValidator$/;"	c
IbmDb2	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^class IbmDb2 implements DriverInterface, Profiler\\ProfilerAwareInterface$/;"	c
IbmDb2	.\Source\application\library\Zend\Db\Adapter\Platform\IbmDb2.php	/^class IbmDb2 extends AbstractPlatform$/;"	c
IbmDb2	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\IbmDb2.php	/^class IbmDb2 extends AbstractPlatform$/;"	c
Iconv	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^class Iconv extends AbstractStringWrapper$/;"	c
IcuDatFileLoader	.\Source\application\library\vendor\symfony\translation\Loader\IcuDatFileLoader.php	/^class IcuDatFileLoader extends IcuResFileLoader$/;"	c
IcuDatFileLoaderTest	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php	/^class IcuDatFileLoaderTest extends LocalizedTestCase$/;"	c
IcuResFileDumper	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^class IcuResFileDumper extends FileDumper$/;"	c
IcuResFileDumperTest	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\IcuResFileDumperTest.php	/^class IcuResFileDumperTest extends \\PHPUnit_Framework_TestCase$/;"	c
IcuResFileLoader	.\Source\application\library\vendor\symfony\translation\Loader\IcuResFileLoader.php	/^class IcuResFileLoader implements LoaderInterface$/;"	c
IcuResFileLoaderTest	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuResFileLoaderTest.php	/^class IcuResFileLoaderTest extends LocalizedTestCase$/;"	c
Identcode	.\Source\application\library\Zend\Validator\Barcode\Identcode.php	/^class Identcode extends AbstractAdapter$/;"	c
Identical	.\Source\application\library\Zend\Validator\Identical.php	/^class Identical extends AbstractValidator$/;"	c
IdentityNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\IdentityNamingStrategy.php	/^final class IdentityNamingStrategy implements NamingStrategyInterface$/;"	c
IdentityTranslator	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^class IdentityTranslator implements TranslatorInterface$/;"	c
IdentityTranslatorTest	.\Source\application\library\vendor\symfony\translation\Tests\IdentityTranslatorTest.php	/^class IdentityTranslatorTest extends \\PHPUnit_Framework_TestCase$/;"	c
ImageSize	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^class ImageSize extends AbstractValidator$/;"	c
In	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^class In extends AbstractExpression implements PredicateInterface$/;"	c
InArray	.\Source\application\library\Zend\Validator\InArray.php	/^class InArray extends AbstractValidator$/;"	c
Index	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^class Index extends AbstractIndex$/;"	c
IndexController	.\Source\application\module\Index\Controller\IndexController.php	/^class IndexController$/;"	c
IniFileDumper	.\Source\application\library\vendor\symfony\translation\Dumper\IniFileDumper.php	/^class IniFileDumper extends FileDumper$/;"	c
IniFileDumperTest	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\IniFileDumperTest.php	/^class IniFileDumperTest extends \\PHPUnit_Framework_TestCase$/;"	c
IniFileLoader	.\Source\application\library\vendor\symfony\translation\Loader\IniFileLoader.php	/^class IniFileLoader extends FileLoader$/;"	c
IniFileLoaderTest	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php	/^class IniFileLoaderTest extends \\PHPUnit_Framework_TestCase$/;"	c
InitializableInterface	.\Source\application\library\Zend\Stdlib\InitializableInterface.php	/^interface InitializableInterface$/;"	i
Input	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Input.php	/^class Input extends Facade {$/;"	c
Insert	.\Source\application\library\Zend\Db\Sql\Insert.php	/^class Insert extends AbstractPreparableSql$/;"	c
InstallCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\InstallCommand.php	/^class InstallCommand extends Command {$/;"	c
Integer	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Integer.php	/^class Integer extends Column$/;"	c
Intelligentmail	.\Source\application\library\Zend\Validator\Barcode\Intelligentmail.php	/^class Intelligentmail extends AbstractAdapter$/;"	c
Interval	.\Source\application\library\vendor\symfony\translation\Interval.php	/^class Interval$/;"	c
IntervalTest	.\Source\application\library\vendor\symfony\translation\Tests\IntervalTest.php	/^class IntervalTest extends \\PHPUnit_Framework_TestCase$/;"	c
Intl	.\Source\application\library\Zend\Stdlib\StringWrapper\Intl.php	/^class Intl extends AbstractStringWrapper$/;"	c
InvalidArgumentException	.\Source\application\library\Zend\Db\Adapter\Exception\InvalidArgumentException.php	/^class InvalidArgumentException extends Exception\\InvalidArgumentException implements ExceptionInterface$/;"	c
InvalidArgumentException	.\Source\application\library\Zend\Db\Exception\InvalidArgumentException.php	/^class InvalidArgumentException extends \\InvalidArgumentException implements ExceptionInterface$/;"	c
InvalidArgumentException	.\Source\application\library\Zend\Db\ResultSet\Exception\InvalidArgumentException.php	/^class InvalidArgumentException extends Exception\\InvalidArgumentException implements ExceptionInterface$/;"	c
InvalidArgumentException	.\Source\application\library\Zend\Db\RowGateway\Exception\InvalidArgumentException.php	/^class InvalidArgumentException extends Exception\\InvalidArgumentException implements ExceptionInterface$/;"	c
InvalidArgumentException	.\Source\application\library\Zend\Db\Sql\Exception\InvalidArgumentException.php	/^class InvalidArgumentException extends Exception\\InvalidArgumentException implements ExceptionInterface$/;"	c
InvalidArgumentException	.\Source\application\library\Zend\Db\TableGateway\Exception\InvalidArgumentException.php	/^class InvalidArgumentException extends Exception\\InvalidArgumentException implements ExceptionInterface$/;"	c
InvalidArgumentException	.\Source\application\library\Zend\Session\Exception\InvalidArgumentException.php	/^class InvalidArgumentException extends \\InvalidArgumentException implements$/;"	c
InvalidArgumentException	.\Source\application\library\Zend\Stdlib\Exception\InvalidArgumentException.php	/^class InvalidArgumentException extends \\InvalidArgumentException implements ExceptionInterface$/;"	c
InvalidArgumentException	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\Exception\InvalidArgumentException.php	/^class InvalidArgumentException extends \\InvalidArgumentException implements ExceptionInterface$/;"	c
InvalidArgumentException	.\Source\application\library\Zend\Validator\Exception\InvalidArgumentException.php	/^class InvalidArgumentException extends \\InvalidArgumentException implements ExceptionInterface$/;"	c
InvalidArgumentException	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Exception\InvalidArgumentException.php	/^class InvalidArgumentException extends \\InvalidArgumentException implements ExceptionInterface$/;"	c
InvalidCallbackException	.\Source\application\library\Zend\Stdlib\Exception\InvalidCallbackException.php	/^class InvalidCallbackException extends DomainException implements ExceptionInterface$/;"	c
InvalidConnectionParametersException	.\Source\application\library\Zend\Db\Adapter\Exception\InvalidConnectionParametersException.php	/^class InvalidConnectionParametersException extends RuntimeException implements ExceptionInterface$/;"	c
InvalidMagicMimeFileException	.\Source\application\library\Zend\Validator\Exception\InvalidMagicMimeFileException.php	/^class InvalidMagicMimeFileException extends InvalidArgumentException$/;"	c
InvalidQueryException	.\Source\application\library\Zend\Db\Adapter\Exception\InvalidQueryException.php	/^class InvalidQueryException extends UnexpectedValueException implements ExceptionInterface$/;"	c
InvalidResourceException	.\Source\application\library\vendor\symfony\translation\Exception\InvalidResourceException.php	/^class InvalidResourceException extends \\InvalidArgumentException implements ExceptionInterface$/;"	c
Ip	.\Source\application\library\Zend\Validator\Ip.php	/^class Ip extends AbstractValidator$/;"	c
IsCompressed	.\Source\application\library\Zend\Validator\File\IsCompressed.php	/^class IsCompressed extends MimeType$/;"	c
IsFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\IsFilter.php	/^class IsFilter implements FilterInterface$/;"	c
IsImage	.\Source\application\library\Zend\Validator\File\IsImage.php	/^class IsImage extends MimeType$/;"	c
IsInstanceOf	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^class IsInstanceOf extends AbstractValidator$/;"	c
IsJsonp	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^        $this->IsJsonp = $value;$/;"	v
IsJsonp	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $IsJsonp = true;$/;"	v
IsNotNull	.\Source\application\library\Zend\Db\Sql\Predicate\IsNotNull.php	/^class IsNotNull extends IsNull$/;"	c
IsNull	.\Source\application\library\Zend\Db\Sql\Predicate\IsNull.php	/^class IsNull extends AbstractExpression implements PredicateInterface$/;"	c
Isbn	.\Source\application\library\Zend\Validator\Isbn.php	/^class Isbn extends AbstractValidator$/;"	c
Issn	.\Source\application\library\Zend\Validator\Barcode\Issn.php	/^class Issn extends AbstractAdapter$/;"	c
Itf14	.\Source\application\library\Zend\Validator\Barcode\Itf14.php	/^class Itf14 extends AbstractAdapter$/;"	c
JoinClause	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^class JoinClause {$/;"	c
JsonFileDumper	.\Source\application\library\vendor\symfony\translation\Dumper\JsonFileDumper.php	/^class JsonFileDumper extends FileDumper$/;"	c
JsonFileDumperTest	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\JsonFileDumperTest.php	/^class JsonFileDumperTest extends \\PHPUnit_Framework_TestCase$/;"	c
JsonFileLoader	.\Source\application\library\vendor\symfony\translation\Loader\JsonFileLoader.php	/^class JsonFileLoader extends FileLoader$/;"	c
JsonFileLoaderTest	.\Source\application\library\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php	/^class JsonFileLoaderTest extends \\PHPUnit_Framework_TestCase$/;"	c
JsonSerializable	.\Source\application\library\Zend\Stdlib\JsonSerializable.php	/^interface JsonSerializable extends \\JsonSerializable$/;"	i
JsonableInterface	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Contracts\JsonableInterface.php	/^interface JsonableInterface {$/;"	i
JwtManager	.\Source\application\service\JwtAuth\JwtManager.php	/^class JwtManager$/;"	c
Key	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^final class Key$/;"	c
KeyParser	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^class KeyParser$/;"	c
KeyParserTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^class KeyParserTest extends \\PHPUnit_Framework_TestCase$/;"	c
KeyTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeyTest.php	/^class KeyTest extends \\PHPUnit_Framework_TestCase$/;"	c
Keychain	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Keychain.php	/^class Keychain$/;"	c
KeychainTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeychainTest.php	/^class KeychainTest extends \\PHPUnit_Framework_TestCase$/;"	c
Lang	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Lang.php	/^class Lang extends Facade {$/;"	c
Lastmod	.\Source\application\library\Zend\Validator\Sitemap\Lastmod.php	/^class Lastmod extends AbstractValidator$/;"	c
Layout	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^        $this->Layout= $layout;$/;"	v
Layout	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $Layout = null;$/;"	v
LayoutData	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $LayoutData = null;$/;"	v
Leitcode	.\Source\application\library\Zend\Validator\Barcode\Leitcode.php	/^class Leitcode extends AbstractAdapter$/;"	c
LessThan	.\Source\application\library\Zend\Validator\LessThan.php	/^class LessThan extends AbstractValidator$/;"	c
LesserOrEqualsTo	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\LesserOrEqualsTo.php	/^class LesserOrEqualsTo extends Basic implements Claim, Validatable$/;"	c
LesserOrEqualsToTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\LesserOrEqualsToTest.php	/^class LesserOrEqualsToTest extends \\PHPUnit_Framework_TestCase$/;"	c
Like	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^class Like extends AbstractExpression implements PredicateInterface$/;"	c
Literal	.\Source\application\library\Zend\Db\Sql\Literal.php	/^class Literal implements ExpressionInterface$/;"	c
Literal	.\Source\application\library\Zend\Db\Sql\Predicate\Literal.php	/^class Literal extends BaseLiteral implements PredicateInterface$/;"	c
LoaderInterface	.\Source\application\library\vendor\symfony\translation\Loader\LoaderInterface.php	/^interface LoaderInterface$/;"	i
Loc	.\Source\application\library\Zend\Validator\Sitemap\Loc.php	/^class Loc extends AbstractValidator$/;"	c
LocalizedTestCase	.\Source\application\library\vendor\symfony\translation\Tests\Loader\LocalizedTestCase.php	/^abstract class LocalizedTestCase extends \\PHPUnit_Framework_TestCase$/;"	c
Log	.\Source\application\library\Alpaca\Log\Log.php	/^class Log$/;"	c
Log	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Log.php	/^class Log extends Facade {$/;"	c
LoggingTranslator	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^class LoggingTranslator implements TranslatorInterface, TranslatorBagInterface$/;"	c
LoggingTranslatorTest	.\Source\application\library\vendor\symfony\translation\Tests\LoggingTranslatorTest.php	/^class LoggingTranslatorTest extends \\PHPUnit_Framework_TestCase$/;"	c
LogicException	.\Source\application\library\Zend\Stdlib\Exception\LogicException.php	/^class LogicException extends \\LogicException implements ExceptionInterface$/;"	c
MB_CASE_LOWER	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    define('MB_CASE_LOWER', 1);$/;"	d
MB_CASE_TITLE	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    define('MB_CASE_TITLE', 2);$/;"	d
MB_CASE_UPPER	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    define('MB_CASE_UPPER', 0);$/;"	d
Mail	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Mail.php	/^class Mail extends Facade {$/;"	c
Manager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^class Manager {$/;"	c
Manager	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^abstract class Manager {$/;"	c
ManagerInterface	.\Source\application\library\Zend\Session\ManagerInterface.php	/^interface ManagerInterface$/;"	i
MapNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\MapNamingStrategy.php	/^class MapNamingStrategy implements NamingStrategyInterface$/;"	c
MassAssignmentException	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\MassAssignmentException.php	/^class MassAssignmentException extends \\RuntimeException {}$/;"	c
MasterSlaveFeature	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^class MasterSlaveFeature extends AbstractFeature$/;"	c
MbString	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^class MbString extends AbstractStringWrapper$/;"	c
Mbstring	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^final class Mbstring$/;"	c
Md5	.\Source\application\library\Zend\Validator\File\Md5.php	/^class Md5 extends Hash$/;"	c
MergeOperation	.\Source\application\library\vendor\symfony\translation\Catalogue\MergeOperation.php	/^class MergeOperation extends AbstractOperation$/;"	c
MergeOperationTest	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php	/^class MergeOperationTest extends AbstractOperationTest$/;"	c
MergeRemoveKey	.\Source\application\library\Zend\Stdlib\ArrayUtils\MergeRemoveKey.php	/^final class MergeRemoveKey$/;"	c
MergeReplaceKey	.\Source\application\library\Zend\Stdlib\ArrayUtils\MergeReplaceKey.php	/^final class MergeReplaceKey implements MergeReplaceKeyInterface$/;"	c
MergeReplaceKeyInterface	.\Source\application\library\Zend\Stdlib\ArrayUtils\MergeReplaceKeyInterface.php	/^interface MergeReplaceKeyInterface$/;"	i
Message	.\Source\application\library\Zend\Stdlib\Message.php	/^class Message implements MessageInterface$/;"	c
MessageBag	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^class MessageBag implements ArrayableInterface, Countable, JsonableInterface, MessageProviderInterface, JsonSerializable {$/;"	c
MessageCatalogue	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^class MessageCatalogue implements MessageCatalogueInterface, MetadataAwareInterface$/;"	c
MessageCatalogueInterface	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^interface MessageCatalogueInterface$/;"	i
MessageCatalogueTest	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^class MessageCatalogueTest extends \\PHPUnit_Framework_TestCase$/;"	c
MessageInterface	.\Source\application\library\Zend\Stdlib\MessageInterface.php	/^interface MessageInterface$/;"	i
MessageProviderInterface	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Contracts\MessageProviderInterface.php	/^interface MessageProviderInterface {$/;"	i
MessageSelector	.\Source\application\library\vendor\symfony\translation\MessageSelector.php	/^class MessageSelector$/;"	c
MessageSelectorTest	.\Source\application\library\vendor\symfony\translation\Tests\MessageSelectorTest.php	/^class MessageSelectorTest extends \\PHPUnit_Framework_TestCase$/;"	c
Metadata	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^class Metadata implements MetadataInterface$/;"	c
MetadataAwareInterface	.\Source\application\library\vendor\symfony\translation\MetadataAwareInterface.php	/^interface MetadataAwareInterface$/;"	i
MetadataFeature	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^class MetadataFeature extends AbstractFeature$/;"	c
MetadataInterface	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^interface MetadataInterface$/;"	i
MethodMatchFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\MethodMatchFilter.php	/^class MethodMatchFilter implements FilterInterface$/;"	c
MigrateCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^class MigrateCommand extends BaseCommand {$/;"	c
MigrateMakeCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^class MigrateMakeCommand extends BaseCommand {$/;"	c
Migration	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migration.php	/^abstract class Migration {$/;"	c
MigrationCreator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^class MigrationCreator {$/;"	c
MigrationRepositoryInterface	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationRepositoryInterface.php	/^interface MigrationRepositoryInterface {$/;"	i
MigrationServiceProvider	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^class MigrationServiceProvider extends ServiceProvider {$/;"	c
Migrator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^class Migrator {$/;"	c
MimeType	.\Source\application\library\Zend\Validator\File\MimeType.php	/^class MimeType extends AbstractValidator$/;"	c
MoFileDumper	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^class MoFileDumper extends FileDumper$/;"	c
MoFileDumperTest	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\MoFileDumperTest.php	/^class MoFileDumperTest extends \\PHPUnit_Framework_TestCase$/;"	c
MoFileLoader	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^class MoFileLoader extends FileLoader$/;"	c
MoFileLoaderTest	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^class MoFileLoaderTest extends \\PHPUnit_Framework_TestCase$/;"	c
Model	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^abstract class Model implements ArrayAccess, ArrayableInterface, JsonableInterface, JsonSerializable {$/;"	c
ModelNotFoundException	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\ModelNotFoundException.php	/^class ModelNotFoundException extends \\RuntimeException {$/;"	c
Module	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $this->Module =  ucfirst($segments[1]);$/;"	v
Module	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $Module = null;$/;"	v
Module	.\Source\application\module\Index\Module.php	/^class Module$/;"	c
ModuleClassName	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $this->ModuleClassName = $this->Module.'\\\\Module';$/;"	v
ModuleClassName	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $ModuleClassName = null;$/;"	v
ModuleName	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $this->ModuleName = $this->Module.$this->ModulePostfix;$/;"	v
ModuleName	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $ModuleName = null;$/;"	v
ModulePostfix	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $ModulePostfix = 'Module';$/;"	v
MongoDB	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^class MongoDB implements SaveHandlerInterface$/;"	c
MongoDBOptions	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^class MongoDBOptions extends AbstractOptions$/;"	c
MorphMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphMany.php	/^class MorphMany extends MorphOneOrMany {$/;"	c
MorphOne	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOne.php	/^class MorphOne extends MorphOneOrMany {$/;"	c
MorphOneOrMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^abstract class MorphOneOrMany extends HasOneOrMany {$/;"	c
MorphPivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphPivot.php	/^class MorphPivot extends Pivot {$/;"	c
MorphTo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^class MorphTo extends BelongsTo {$/;"	c
MorphToMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^class MorphToMany extends BelongsToMany {$/;"	c
MultibyteTest	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^class MultibyteTest extends \\PHPUnit_Framework_TestCase$/;"	c
MySqlBuilder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\MySqlBuilder.php	/^class MySqlBuilder extends Builder {$/;"	c
MySqlConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MySqlConnection.php	/^class MySqlConnection extends Connection {$/;"	c
MySqlConnector	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\MySqlConnector.php	/^class MySqlConnector extends Connector implements ConnectorInterface {$/;"	c
MySqlGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^class MySqlGrammar extends Grammar {$/;"	c
MySqlGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^class MySqlGrammar extends Grammar {$/;"	c
MySqlProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\MySqlProcessor.php	/^class MySqlProcessor extends Processor {$/;"	c
Mysql	.\Source\application\library\Zend\Db\Adapter\Platform\Mysql.php	/^class Mysql extends AbstractPlatform$/;"	c
Mysql	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Mysql.php	/^class Mysql extends AbstractPlatform$/;"	c
MysqlMetadata	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^class MysqlMetadata extends AbstractSource$/;"	c
Mysqli	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^class Mysqli implements DriverInterface, Profiler\\ProfilerAwareInterface$/;"	c
NamespacedItemResolver	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^class NamespacedItemResolver {$/;"	c
NamingStrategyEnabledInterface	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategyEnabledInterface.php	/^interface NamingStrategyEnabledInterface$/;"	i
NamingStrategyInterface	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\NamingStrategyInterface.php	/^interface NamingStrategyInterface$/;"	i
Native	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^class Native extends AbstractStringWrapper$/;"	c
NoRecordExists	.\Source\application\library\Zend\Validator\Db\NoRecordExists.php	/^class NoRecordExists extends AbstractDb$/;"	c
NonBackupDumper	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^class NonBackupDumper implements DumperInterface$/;"	c
NotEmpty	.\Source\application\library\Zend\Validator\NotEmpty.php	/^class NotEmpty extends AbstractValidator$/;"	c
NotExists	.\Source\application\library\Zend\Validator\File\NotExists.php	/^class NotExists extends Exists$/;"	c
NotFoundResourceException	.\Source\application\library\vendor\symfony\translation\Exception\NotFoundResourceException.php	/^class NotFoundResourceException extends \\InvalidArgumentException implements ExceptionInterface$/;"	c
NotIn	.\Source\application\library\Zend\Db\Sql\Predicate\NotIn.php	/^class NotIn extends In$/;"	c
NotLike	.\Source\application\library\Zend\Db\Sql\Predicate\NotLike.php	/^class NotLike extends Like$/;"	c
NumberOfParameterFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\NumberOfParameterFilter.php	/^class NumberOfParameterFilter implements FilterInterface$/;"	c
ObjectProperty	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^class ObjectProperty extends AbstractHydrator$/;"	c
Oci8	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^class Oci8 implements DriverInterface, Profiler\\ProfilerAwareInterface$/;"	c
OperationInterface	.\Source\application\library\vendor\symfony\translation\Catalogue\OperationInterface.php	/^interface OperationInterface$/;"	i
Operator	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^class Operator extends AbstractExpression implements PredicateInterface$/;"	c
OptionalParametersFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\OptionalParametersFilter.php	/^class OptionalParametersFilter implements FilterInterface$/;"	c
Oracle	.\Source\application\library\Zend\Db\Adapter\Platform\Oracle.php	/^class Oracle extends AbstractPlatform$/;"	c
Oracle	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\Oracle.php	/^class Oracle extends AbstractPlatform$/;"	c
OracleMetadata	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^class OracleMetadata extends AbstractSource$/;"	c
OracleRowCounter	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^class OracleRowCounter extends AbstractFeature$/;"	c
Paginator	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Paginator.php	/^class Paginator extends Facade {$/;"	c
ParameterContainer	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^class ParameterContainer implements Iterator, ArrayAccess, Countable$/;"	c
ParameterObjectInterface	.\Source\application\library\Zend\Stdlib\ParameterObjectInterface.php	/^interface ParameterObjectInterface$/;"	i
Parameters	.\Source\application\library\Zend\Stdlib\Parameters.php	/^class Parameters extends PhpArrayObject implements ParametersInterface$/;"	c
ParametersInterface	.\Source\application\library\Zend\Stdlib\ParametersInterface.php	/^interface ParametersInterface extends ArrayAccess, Countable, Serializable, Traversable$/;"	i
Params	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $this->Params = array_slice($segments, 4);$/;"	v
Params	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public $Params = Array();$/;"	v
Parser	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^class Parser$/;"	c
ParserTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^class ParserTest extends \\PHPUnit_Framework_TestCase$/;"	c
PassportController	.\Source\application\module\Index\Controller\PassportController.php	/^class PassportController$/;"	c
Password	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Password.php	/^class Password extends Facade {$/;"	c
Pdo	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^class Pdo implements DriverInterface, DriverFeatureInterface, Profiler\\ProfilerAwareInterface$/;"	c
Pgsql	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^class Pgsql implements DriverInterface, Profiler\\ProfilerAwareInterface$/;"	c
PhpFileDumper	.\Source\application\library\vendor\symfony\translation\Dumper\PhpFileDumper.php	/^class PhpFileDumper extends FileDumper$/;"	c
PhpFileDumperTest	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\PhpFileDumperTest.php	/^class PhpFileDumperTest extends \\PHPUnit_Framework_TestCase$/;"	c
PhpFileLoader	.\Source\application\library\vendor\symfony\translation\Loader\PhpFileLoader.php	/^class PhpFileLoader extends FileLoader$/;"	c
PhpFileLoaderTest	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php	/^class PhpFileLoaderTest extends \\PHPUnit_Framework_TestCase$/;"	c
PhpLegacyCompatibility	.\Source\application\library\Zend\Stdlib\JsonSerializable\PhpLegacyCompatibility.php	/^interface PhpLegacyCompatibility$/;"	i
Pivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^class Pivot extends Model {$/;"	c
Planet	.\Source\application\library\Zend\Validator\Barcode\Planet.php	/^class Planet extends AbstractAdapter$/;"	c
Platform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^class Platform extends AbstractPlatform$/;"	c
PlatformDecoratorInterface	.\Source\application\library\Zend\Db\Sql\Platform\PlatformDecoratorInterface.php	/^interface PlatformDecoratorInterface$/;"	i
PlatformInterface	.\Source\application\library\Zend\Db\Adapter\Platform\PlatformInterface.php	/^interface PlatformInterface$/;"	i
PluralizationRules	.\Source\application\library\vendor\symfony\translation\PluralizationRules.php	/^class PluralizationRules$/;"	c
PluralizationRulesTest	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^class PluralizationRulesTest extends \\PHPUnit_Framework_TestCase$/;"	c
Pluralizer	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^class Pluralizer {$/;"	c
PoFileDumper	.\Source\application\library\vendor\symfony\translation\Dumper\PoFileDumper.php	/^class PoFileDumper extends FileDumper$/;"	c
PoFileDumperTest	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\PoFileDumperTest.php	/^class PoFileDumperTest extends \\PHPUnit_Framework_TestCase$/;"	c
PoFileLoader	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^class PoFileLoader extends FileLoader$/;"	c
PoFileLoaderTest	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^class PoFileLoaderTest extends \\PHPUnit_Framework_TestCase$/;"	c
PostgresConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\PostgresConnection.php	/^class PostgresConnection extends Connection {$/;"	c
PostgresConnector	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\PostgresConnector.php	/^class PostgresConnector extends Connector implements ConnectorInterface {$/;"	c
PostgresGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^class PostgresGrammar extends Grammar {$/;"	c
PostgresGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^class PostgresGrammar extends Grammar {$/;"	c
PostgresProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\PostgresProcessor.php	/^class PostgresProcessor extends Processor {$/;"	c
Postgresql	.\Source\application\library\Zend\Db\Adapter\Platform\Postgresql.php	/^class Postgresql extends AbstractPlatform$/;"	c
PostgresqlMetadata	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^class PostgresqlMetadata extends AbstractSource$/;"	c
Postnet	.\Source\application\library\Zend\Validator\Barcode\Postnet.php	/^class Postnet extends AbstractAdapter$/;"	c
Predicate	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^class Predicate extends PredicateSet$/;"	c
PredicateInterface	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateInterface.php	/^interface PredicateInterface extends ExpressionInterface$/;"	i
PredicateSet	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^class PredicateSet implements PredicateInterface, Countable$/;"	c
PreparableSqlInterface	.\Source\application\library\Zend\Db\Sql\PreparableSqlInterface.php	/^interface PreparableSqlInterface$/;"	i
PrimaryKey	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\PrimaryKey.php	/^class PrimaryKey extends AbstractConstraint$/;"	c
Priority	.\Source\application\library\Zend\Validator\Sitemap\Priority.php	/^class Priority extends AbstractValidator$/;"	c
PriorityList	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^class PriorityList implements Iterator, Countable$/;"	c
PriorityQueue	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^class PriorityQueue implements Countable, IteratorAggregate, Serializable$/;"	c
Processor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\Processor.php	/^class Processor {$/;"	c
Profiler	.\Source\application\library\Zend\Db\Adapter\Profiler\Profiler.php	/^class Profiler implements ProfilerInterface$/;"	c
ProfilerAwareInterface	.\Source\application\library\Zend\Db\Adapter\Profiler\ProfilerAwareInterface.php	/^interface ProfilerAwareInterface$/;"	i
ProfilerInterface	.\Source\application\library\Zend\Db\Adapter\Profiler\ProfilerInterface.php	/^interface ProfilerInterface$/;"	i
QtFileDumper	.\Source\application\library\vendor\symfony\translation\Dumper\QtFileDumper.php	/^class QtFileDumper extends FileDumper$/;"	c
QtFileDumperTest	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\QtFileDumperTest.php	/^class QtFileDumperTest extends \\PHPUnit_Framework_TestCase$/;"	c
QtFileLoader	.\Source\application\library\vendor\symfony\translation\Loader\QtFileLoader.php	/^class QtFileLoader implements LoaderInterface$/;"	c
QtFileLoaderTest	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^class QtFileLoaderTest extends \\PHPUnit_Framework_TestCase$/;"	c
QueryException	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^class QueryException extends PDOException {$/;"	c
QueryParams	.\Source\application\library\Zend\Stdlib\ParametersInterface.php	/^ *     class QueryParams extends ArrayObject implements Parameters {}$/;"	c
Queue	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Queue.php	/^class Queue extends Facade {$/;"	c
RecordExists	.\Source\application\library\Zend\Validator\Db\RecordExists.php	/^class RecordExists extends AbstractDb$/;"	c
Redirect	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Redirect.php	/^class Redirect extends Facade {$/;"	c
Redis	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Redis.php	/^class Redis extends Facade {$/;"	c
Reflection	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^class Reflection extends AbstractHydrator$/;"	c
RefreshCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RefreshCommand.php	/^class RefreshCommand extends Command {$/;"	c
Regex	.\Source\application\library\Zend\Validator\Regex.php	/^class Regex extends AbstractValidator$/;"	c
Relation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^abstract class Relation {$/;"	c
Relation	.\Source\application\resource\Model\Relation.php	/^class Relation extends Model$/;"	c
RemoteAddr	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^class RemoteAddr implements SessionValidator$/;"	c
RenderableInterface	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Contracts\RenderableInterface.php	/^interface RenderableInterface {$/;"	i
Request	.\Source\application\library\Zend\Stdlib\Request.php	/^class Request extends Message implements RequestInterface$/;"	c
Request	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Request.php	/^class Request extends Facade {$/;"	c
RequestInterface	.\Source\application\library\Zend\Stdlib\RequestInterface.php	/^interface RequestInterface extends MessageInterface$/;"	i
ResetCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\ResetCommand.php	/^class ResetCommand extends Command {$/;"	c
Response	.\Source\application\library\Zend\Stdlib\Response.php	/^class Response extends Message implements ResponseInterface$/;"	c
Response	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^class Response {$/;"	c
ResponseInterface	.\Source\application\library\Zend\Stdlib\ResponseInterface.php	/^interface ResponseInterface extends MessageInterface$/;"	i
ResponsePreparerInterface	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Contracts\ResponsePreparerInterface.php	/^interface ResponsePreparerInterface {$/;"	i
Result	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^class Result implements ResultInterface$/;"	c
Result	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^class Result implements$/;"	c
Result	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^class Result implements Iterator, ResultInterface$/;"	c
Result	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^class Result implements Iterator, ResultInterface$/;"	c
Result	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^class Result implements ResultInterface$/;"	c
Result	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^class Result implements Iterator, ResultInterface$/;"	c
ResultInterface	.\Source\application\library\Zend\Db\Adapter\Driver\ResultInterface.php	/^interface ResultInterface extends$/;"	i
ResultSet	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^class ResultSet extends AbstractResultSet$/;"	c
ResultSetInterface	.\Source\application\library\Zend\Db\ResultSet\ResultSetInterface.php	/^interface ResultSetInterface extends Traversable, Countable$/;"	i
RollbackCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RollbackCommand.php	/^class RollbackCommand extends Command {$/;"	c
Route	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Route.php	/^class Route extends Facade {$/;"	c
Router	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^class Router$/;"	c
RowGateway	.\Source\application\library\Zend\Db\RowGateway\RowGateway.php	/^class RowGateway extends AbstractRowGateway$/;"	c
RowGatewayFeature	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^class RowGatewayFeature extends AbstractFeature$/;"	c
RowGatewayInterface	.\Source\application\library\Zend\Db\RowGateway\RowGatewayInterface.php	/^interface RowGatewayInterface$/;"	i
Royalmail	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^class Royalmail extends AbstractAdapter$/;"	c
Rsa	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa.php	/^abstract class Rsa extends BaseSigner$/;"	c
RsaTokenTest	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^class RsaTokenTest extends \\PHPUnit_Framework_TestCase$/;"	c
RuntimeException	.\Source\application\library\Zend\Db\Adapter\Exception\RuntimeException.php	/^class RuntimeException extends Exception\\RuntimeException implements ExceptionInterface$/;"	c
RuntimeException	.\Source\application\library\Zend\Db\Exception\RuntimeException.php	/^class RuntimeException extends \\RuntimeException implements ExceptionInterface$/;"	c
RuntimeException	.\Source\application\library\Zend\Db\ResultSet\Exception\RuntimeException.php	/^class RuntimeException extends Exception\\RuntimeException implements ExceptionInterface$/;"	c
RuntimeException	.\Source\application\library\Zend\Db\RowGateway\Exception\RuntimeException.php	/^class RuntimeException extends Exception\\RuntimeException implements ExceptionInterface$/;"	c
RuntimeException	.\Source\application\library\Zend\Db\Sql\Exception\RuntimeException.php	/^class RuntimeException extends Exception\\RuntimeException implements ExceptionInterface$/;"	c
RuntimeException	.\Source\application\library\Zend\Db\TableGateway\Exception\RuntimeException.php	/^class RuntimeException extends Exception\\InvalidArgumentException implements ExceptionInterface$/;"	c
RuntimeException	.\Source\application\library\Zend\Session\Exception\RuntimeException.php	/^class RuntimeException extends \\RuntimeException implements ExceptionInterface$/;"	c
RuntimeException	.\Source\application\library\Zend\Stdlib\Exception\RuntimeException.php	/^class RuntimeException extends \\RuntimeException implements ExceptionInterface$/;"	c
RuntimeException	.\Source\application\library\Zend\Validator\Exception\RuntimeException.php	/^class RuntimeException extends \\RuntimeException implements ExceptionInterface$/;"	c
RuntimeException	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Exception\RuntimeException.php	/^class RuntimeException extends \\RuntimeException implements ExceptionInterface$/;"	c
SQLiteConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SQLiteConnection.php	/^class SQLiteConnection extends Connection {$/;"	c
SQLiteConnector	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SQLiteConnector.php	/^class SQLiteConnector extends Connector implements ConnectorInterface {$/;"	c
SQLiteGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^class SQLiteGrammar extends Grammar {$/;"	c
SQLiteGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^class SQLiteGrammar extends Grammar {$/;"	c
SQLiteProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\SQLiteProcessor.php	/^class SQLiteProcessor extends Processor {$/;"	c
SSH	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\SSH.php	/^class SSH extends Facade {$/;"	c
SaveHandlerInterface	.\Source\application\library\Zend\Session\SaveHandler\SaveHandlerInterface.php	/^interface SaveHandlerInterface$/;"	i
Schema	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Schema.php	/^class Schema extends Facade {$/;"	c
ScopeInterface	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\ScopeInterface.php	/^interface ScopeInterface {$/;"	i
Security	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^class Security$/;"	c
SecurityTest	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^class SecurityTest extends \\PHPUnit_Framework_TestCase$/;"	c
SeedCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^class SeedCommand extends Command {$/;"	c
SeedServiceProvider	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SeedServiceProvider.php	/^class SeedServiceProvider extends ServiceProvider {$/;"	c
Seeder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Seeder.php	/^class Seeder {$/;"	c
Select	.\Source\application\library\Zend\Db\Sql\Select.php	/^class Select extends AbstractPreparableSql$/;"	c
SelectDecorator	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^class SelectDecorator extends Select implements PlatformDecoratorInterface$/;"	c
SelectDecorator	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\SelectDecorator.php	/^class SelectDecorator extends Select implements PlatformDecoratorInterface$/;"	c
SelectDecorator	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^class SelectDecorator extends Select implements PlatformDecoratorInterface$/;"	c
SelectDecorator	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^class SelectDecorator extends Select implements PlatformDecoratorInterface$/;"	c
SequenceFeature	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^class SequenceFeature extends AbstractFeature$/;"	c
SerializableClosure	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\SerializableClosure.php	/^class SerializableClosure extends SuperClosure {$/;"	c
SerializableStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^class SerializableStrategy implements StrategyInterface$/;"	c
ServerManager	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^class ServerManager$/;"	c
ServiceProvider	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^abstract class ServiceProvider {$/;"	c
Session	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Session.php	/^class Session extends Facade {$/;"	c
SessionArrayStorage	.\Source\application\library\Zend\Session\Storage\SessionArrayStorage.php	/^class SessionArrayStorage extends AbstractSessionArrayStorage$/;"	c
SessionConfig	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^class SessionConfig extends StandardConfig$/;"	c
SessionConfigFactory	.\Source\application\library\Zend\Session\Service\SessionConfigFactory.php	/^class SessionConfigFactory implements FactoryInterface$/;"	c
SessionManager	.\Source\application\library\Zend\Session\SessionManager.php	/^class SessionManager extends AbstractManager$/;"	c
SessionManagerFactory	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^class SessionManagerFactory implements FactoryInterface$/;"	c
SessionStorage	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^class SessionStorage extends ArrayStorage$/;"	c
Sha1	.\Source\application\library\Zend\Validator\File\Sha1.php	/^class Sha1 extends Hash$/;"	c
Sha256	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\Sha256.php	/^class Sha256 extends Ecdsa$/;"	c
Sha256	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac\Sha256.php	/^class Sha256 extends Hmac$/;"	c
Sha256	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa\Sha256.php	/^class Sha256 extends Rsa$/;"	c
Sha256Test	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha256Test.php	/^class Sha256Test extends \\PHPUnit_Framework_TestCase$/;"	c
Sha256Test	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Hmac\Sha256Test.php	/^class Sha256Test extends \\PHPUnit_Framework_TestCase$/;"	c
Sha256Test	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Rsa\Sha256Test.php	/^class Sha256Test extends \\PHPUnit_Framework_TestCase$/;"	c
Sha384	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\Sha384.php	/^class Sha384 extends Ecdsa$/;"	c
Sha384	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac\Sha384.php	/^class Sha384 extends Hmac$/;"	c
Sha384	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa\Sha384.php	/^class Sha384 extends Rsa$/;"	c
Sha384Test	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha384Test.php	/^class Sha384Test extends \\PHPUnit_Framework_TestCase$/;"	c
Sha384Test	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Hmac\Sha384Test.php	/^class Sha384Test extends \\PHPUnit_Framework_TestCase$/;"	c
Sha384Test	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Rsa\Sha384Test.php	/^class Sha384Test extends \\PHPUnit_Framework_TestCase$/;"	c
Sha512	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\Sha512.php	/^class Sha512 extends Ecdsa$/;"	c
Sha512	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac\Sha512.php	/^class Sha512 extends Hmac$/;"	c
Sha512	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa\Sha512.php	/^class Sha512 extends Rsa$/;"	c
Sha512Test	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha512Test.php	/^class Sha512Test extends \\PHPUnit_Framework_TestCase$/;"	c
Sha512Test	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Hmac\Sha512Test.php	/^class Sha512Test extends \\PHPUnit_Framework_TestCase$/;"	c
Sha512Test	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Rsa\Sha512Test.php	/^class Sha512Test extends \\PHPUnit_Framework_TestCase$/;"	c
Signature	.\Source\application\library\vendor\lcobucci\jwt\src\Signature.php	/^class Signature$/;"	c
SignatureTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\SignatureTest.php	/^class SignatureTest extends \\PHPUnit_Framework_TestCase$/;"	c
Signer	.\Source\application\library\vendor\lcobucci\jwt\src\Signer.php	/^interface Signer$/;"	i
Size	.\Source\application\library\Zend\Validator\File\Size.php	/^class Size extends AbstractValidator$/;"	c
SoftDeletingScope	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^class SoftDeletingScope implements ScopeInterface {$/;"	c
SplPriorityQueue	.\Source\application\library\Zend\Stdlib\SplPriorityQueue.php	/^class SplPriorityQueue extends \\SplPriorityQueue implements Serializable$/;"	c
SplQueue	.\Source\application\library\Zend\Stdlib\SplQueue.php	/^class SplQueue extends \\SplQueue implements Serializable$/;"	c
SplStack	.\Source\application\library\Zend\Stdlib\SplStack.php	/^class SplStack extends \\SplStack implements Serializable$/;"	c
Sql	.\Source\application\library\Zend\Db\Sql\Sql.php	/^class Sql$/;"	c
Sql92	.\Source\application\library\Zend\Db\Adapter\Platform\Sql92.php	/^class Sql92 extends AbstractPlatform$/;"	c
SqlInterface	.\Source\application\library\Zend\Db\Sql\Ddl\SqlInterface.php	/^interface SqlInterface extends BaseSqlInterface$/;"	i
SqlInterface	.\Source\application\library\Zend\Db\Sql\SqlInterface.php	/^interface SqlInterface$/;"	i
SqlServer	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^class SqlServer extends AbstractPlatform$/;"	c
SqlServer	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SqlServer.php	/^class SqlServer extends AbstractPlatform$/;"	c
SqlServerConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SqlServerConnection.php	/^class SqlServerConnection extends Connection {$/;"	c
SqlServerConnector	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SqlServerConnector.php	/^class SqlServerConnector extends Connector implements ConnectorInterface {$/;"	c
SqlServerGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^class SqlServerGrammar extends Grammar {$/;"	c
SqlServerGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^class SqlServerGrammar extends Grammar {$/;"	c
SqlServerMetadata	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^class SqlServerMetadata extends AbstractSource$/;"	c
SqlServerProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\SqlServerProcessor.php	/^class SqlServerProcessor extends Processor {$/;"	c
Sqlite	.\Source\application\library\Zend\Db\Adapter\Platform\Sqlite.php	/^class Sqlite extends AbstractPlatform$/;"	c
SqliteMetadata	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^class SqliteMetadata extends AbstractSource$/;"	c
SqliteRowCounter	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^class SqliteRowCounter extends AbstractFeature$/;"	c
Sqlsrv	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^class Sqlsrv implements DriverInterface, Profiler\\ProfilerAwareInterface$/;"	c
Sscc	.\Source\application\library\Zend\Validator\Barcode\Sscc.php	/^class Sscc extends AbstractAdapter$/;"	c
StaleResource	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^class StaleResource implements SelfCheckingResourceInterface$/;"	c
StandardConfig	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^class StandardConfig implements ConfigInterface$/;"	c
Statement	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^class Statement implements StatementInterface, Profiler\\ProfilerAwareInterface$/;"	c
Statement	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^class Statement implements StatementInterface, Profiler\\ProfilerAwareInterface$/;"	c
Statement	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^class Statement implements StatementInterface, Profiler\\ProfilerAwareInterface$/;"	c
Statement	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^class Statement implements StatementInterface, Profiler\\ProfilerAwareInterface$/;"	c
Statement	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^class Statement implements StatementInterface, Profiler\\ProfilerAwareInterface$/;"	c
Statement	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^class Statement implements StatementInterface, Profiler\\ProfilerAwareInterface$/;"	c
StatementContainer	.\Source\application\library\Zend\Db\Adapter\StatementContainer.php	/^class StatementContainer implements StatementContainerInterface$/;"	c
StatementContainerInterface	.\Source\application\library\Zend\Db\Adapter\StatementContainerInterface.php	/^interface StatementContainerInterface$/;"	i
StatementInterface	.\Source\application\library\Zend\Db\Adapter\Driver\StatementInterface.php	/^interface StatementInterface extends StatementContainerInterface$/;"	i
StaticValidator	.\Source\application\library\Zend\Validator\StaticValidator.php	/^class StaticValidator$/;"	c
Step	.\Source\application\library\Zend\Validator\Step.php	/^class Step extends AbstractValidator$/;"	c
StorageFactory	.\Source\application\library\Zend\Session\Service\StorageFactory.php	/^class StorageFactory implements FactoryInterface$/;"	c
StorageInitializationInterface	.\Source\application\library\Zend\Session\Storage\StorageInitializationInterface.php	/^interface StorageInitializationInterface$/;"	i
StorageInterface	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^interface StorageInterface extends Traversable, ArrayAccess, Serializable, Countable$/;"	i
Str	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^class Str {$/;"	c
StrategyChain	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyChain.php	/^final class StrategyChain implements StrategyInterface$/;"	c
StrategyEnabledInterface	.\Source\application\library\Zend\Stdlib\Hydrator\StrategyEnabledInterface.php	/^interface StrategyEnabledInterface$/;"	i
StrategyInterface	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyInterface.php	/^interface StrategyInterface$/;"	i
StringClass	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^class StringClass$/;"	c
StringLength	.\Source\application\library\Zend\Validator\StringLength.php	/^class StringLength extends AbstractValidator$/;"	c
StringUtils	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^abstract class StringUtils$/;"	c
StringWrapperInterface	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^interface StringWrapperInterface$/;"	i
TableGateway	.\Source\application\library\Zend\Db\TableGateway\TableGateway.php	/^class TableGateway extends AbstractTableGateway$/;"	c
TableGatewayEvent	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^class TableGatewayEvent implements EventInterface$/;"	c
TableGatewayInterface	.\Source\application\library\Zend\Db\TableGateway\TableGatewayInterface.php	/^interface TableGatewayInterface$/;"	i
TableIdentifier	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^class TableIdentifier$/;"	c
TableObject	.\Source\application\library\Zend\Db\Metadata\Object\TableObject.php	/^class TableObject extends AbstractTableObject$/;"	c
TargetOperation	.\Source\application\library\vendor\symfony\translation\Catalogue\TargetOperation.php	/^class TargetOperation extends AbstractOperation$/;"	c
TargetOperationTest	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php	/^class TargetOperationTest extends AbstractOperationTest$/;"	c
Template	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^        $this->Template = (string) $template;$/;"	v
Template	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $Template = '';$/;"	v
TemplatePostfix	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static $TemplatePostfix ='.phtml';$/;"	v
Test	.\Source\application\service\Test\Test.php	/^class Test$/;"	c
Text	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Text.php	/^class Text extends AbstractLengthColumn$/;"	c
Time	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Time.php	/^class Time extends Column$/;"	c
Timestamp	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Timestamp.php	/^class Timestamp extends AbstractTimestampColumn$/;"	c
Timezone	.\Source\application\library\Zend\Validator\Timezone.php	/^class Timezone extends AbstractValidator$/;"	c
Token	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^class Token$/;"	c
TokenTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^class TokenTest extends \\PHPUnit_Framework_TestCase$/;"	c
TranslationDataCollector	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^class TranslationDataCollector extends DataCollector implements LateDataCollectorInterface$/;"	c
TranslationDataCollectorTest	.\Source\application\library\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php	/^class TranslationDataCollectorTest extends \\PHPUnit_Framework_TestCase$/;"	c
TranslationWriter	.\Source\application\library\vendor\symfony\translation\Writer\TranslationWriter.php	/^class TranslationWriter$/;"	c
TranslationWriterTest	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^class TranslationWriterTest extends \\PHPUnit_Framework_TestCase$/;"	c
Translator	.\Source\application\library\vendor\symfony\translation\Translator.php	/^class Translator implements TranslatorInterface, TranslatorBagInterface$/;"	c
TranslatorAwareInterface	.\Source\application\library\Zend\Validator\Translator\TranslatorAwareInterface.php	/^interface TranslatorAwareInterface$/;"	i
TranslatorBagInterface	.\Source\application\library\vendor\symfony\translation\TranslatorBagInterface.php	/^interface TranslatorBagInterface$/;"	i
TranslatorCacheTest	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^class TranslatorCacheTest extends \\PHPUnit_Framework_TestCase$/;"	c
TranslatorInterface	.\Source\application\library\Zend\Validator\Translator\TranslatorInterface.php	/^interface TranslatorInterface$/;"	i
TranslatorInterface	.\Source\application\library\vendor\symfony\translation\TranslatorInterface.php	/^interface TranslatorInterface$/;"	i
TranslatorTest	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^class TranslatorTest extends \\PHPUnit_Framework_TestCase$/;"	c
TriggerObject	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^class TriggerObject$/;"	c
Type	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^        $this->Type = $type;$/;"	v
Type	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $Type = null;$/;"	v
URL	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\URL.php	/^class URL extends Facade {$/;"	c
UnderscoreNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\UnderscoreNamingStrategy.php	/^class UnderscoreNamingStrategy implements NamingStrategyInterface$/;"	c
UnexpectedValueException	.\Source\application\library\Zend\Db\Adapter\Exception\UnexpectedValueException.php	/^class UnexpectedValueException extends Exception\\UnexpectedValueException implements ExceptionInterface$/;"	c
UnexpectedValueException	.\Source\application\library\Zend\Db\Exception\UnexpectedValueException.php	/^class UnexpectedValueException extends \\UnexpectedValueException implements ExceptionInterface$/;"	c
UniqueKey	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\UniqueKey.php	/^class UniqueKey extends AbstractConstraint$/;"	c
UnsignedTokenTest	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^class UnsignedTokenTest extends \\PHPUnit_Framework_TestCase$/;"	c
Upca	.\Source\application\library\Zend\Validator\Barcode\Upca.php	/^class Upca extends AbstractAdapter$/;"	c
Upce	.\Source\application\library\Zend\Validator\Barcode\Upce.php	/^class Upce extends AbstractAdapter$/;"	c
Update	.\Source\application\library\Zend\Db\Sql\Update.php	/^class Update extends AbstractPreparableSql$/;"	c
Upload	.\Source\application\library\Zend\Validator\File\Upload.php	/^class Upload extends AbstractValidator$/;"	c
UploadFile	.\Source\application\library\Zend\Validator\File\UploadFile.php	/^class UploadFile extends AbstractValidator$/;"	c
Uri	.\Source\application\library\Zend\Validator\Uri.php	/^class Uri extends AbstractValidator$/;"	c
UseLayout	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^        $this->UseLayout = $value;$/;"	v
UseLayout	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $UseLayout = false;$/;"	v
User	.\Source\application\resource\Model\User.php	/^class User extends Model$/;"	c
Validatable	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Validatable.php	/^interface Validatable$/;"	i
ValidationData	.\Source\application\library\vendor\lcobucci\jwt\src\ValidationData.php	/^class ValidationData$/;"	c
ValidationDataTest	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^class ValidationDataTest extends \\PHPUnit_Framework_TestCase$/;"	c
Validator	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Validator.php	/^class Validator extends Facade {$/;"	c
ValidatorChain	.\Source\application\library\Zend\Session\ValidatorChain.php	/^class ValidatorChain extends EventManager$/;"	c
ValidatorChain	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^class ValidatorChain implements$/;"	c
ValidatorInterface	.\Source\application\library\Zend\Session\Validator\ValidatorInterface.php	/^interface ValidatorInterface$/;"	i
ValidatorInterface	.\Source\application\library\Zend\Validator\ValidatorInterface.php	/^interface ValidatorInterface$/;"	i
ValidatorPluginManager	.\Source\application\library\Zend\Validator\ValidatorPluginManager.php	/^class ValidatorPluginManager extends AbstractPluginManager$/;"	c
ValidatorPluginManagerAwareInterface	.\Source\application\library\Zend\Validator\ValidatorPluginManagerAwareInterface.php	/^interface ValidatorPluginManagerAwareInterface$/;"	i
Varbinary	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Varbinary.php	/^class Varbinary extends AbstractLengthColumn$/;"	c
Varchar	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Varchar.php	/^class Varchar extends AbstractLengthColumn$/;"	c
View	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\View.php	/^class View extends Facade {$/;"	c
ViewErrorBag	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ViewErrorBag.php	/^class ViewErrorBag implements Countable {$/;"	c
ViewModel	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^class ViewModel$/;"	c
ViewObject	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^class ViewObject extends AbstractTableObject$/;"	c
Where	.\Source\application\library\Zend\Db\Sql\Where.php	/^class Where extends Predicate\\Predicate$/;"	c
WordCount	.\Source\application\library\Zend\Validator\File\WordCount.php	/^class WordCount extends AbstractValidator$/;"	c
XliffFileDumper	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^class XliffFileDumper extends FileDumper$/;"	c
XliffFileDumperTest	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php	/^class XliffFileDumperTest extends \\PHPUnit_Framework_TestCase$/;"	c
XliffFileLoader	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^class XliffFileLoader implements LoaderInterface$/;"	c
XliffFileLoaderTest	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^class XliffFileLoaderTest extends \\PHPUnit_Framework_TestCase$/;"	c
YamlFileDumper	.\Source\application\library\vendor\symfony\translation\Dumper\YamlFileDumper.php	/^class YamlFileDumper extends FileDumper$/;"	c
YamlFileDumperTest	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\YamlFileDumperTest.php	/^class YamlFileDumperTest extends \\PHPUnit_Framework_TestCase$/;"	c
YamlFileLoader	.\Source\application\library\vendor\symfony\translation\Loader\YamlFileLoader.php	/^class YamlFileLoader extends FileLoader$/;"	c
YamlFileLoaderTest	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^class YamlFileLoaderTest extends \\PHPUnit_Framework_TestCase$/;"	c
_SESSION	.\Source\application\library\Zend\Session\SessionManager.php	/^            $_SESSION = $storage->toArray(true);$/;"	v
_SESSION	.\Source\application\library\Zend\Session\SessionManager.php	/^            $_SESSION = $storage;$/;"	v
_SESSION	.\Source\application\library\Zend\Session\SessionManager.php	/^            $_SESSION = ArrayUtils::merge($oldSessionData, $_SESSION, true);$/;"	v
_SESSION	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^        $_SESSION = $array;$/;"	v
_SESSION	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^        $_SESSION = $input;$/;"	v
_SESSION	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^            $_SESSION = $this;$/;"	v
_SESSION	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^        $_SESSION = (array) $this->getArrayCopy();$/;"	v
__call	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function __call($method, $arguments)$/;"	f
__call	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function __call($method, $args)$/;"	f
__call	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	public function __call($method, $parameters)$/;"	f
__call	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function __call($method, $parameters)$/;"	f
__call	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function __call($method, $parameters)$/;"	f
__call	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function __call($method, $parameters)$/;"	f
__call	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function __call($method, $parameters)$/;"	f
__call	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function __call($method, $parameters)$/;"	f
__call	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^	public function __call($method, $parameters)$/;"	f
__call	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\MacroableTrait.php	/^	public function __call($method, $parameters)$/;"	f
__call	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ViewErrorBag.php	/^	public function __call($method, $parameters)$/;"	f
__call	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public function __call($name, $args)$/;"	f
__call	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    public function __call($method, $args)$/;"	f
__call	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^    public function __call($method, $args)$/;"	f
__callStatic	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public static function __callStatic($method, $parameters)$/;"	f
__callStatic	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function __callStatic($method, $parameters)$/;"	f
__callStatic	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	public static function __callStatic($method, $args)$/;"	f
__callStatic	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\MacroableTrait.php	/^	public static function __callStatic($method, $parameters)$/;"	f
__callStatic	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public static function __callStatic($name, $args)$/;"	f
__clone	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function __clone()$/;"	f
__clone	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function __clone()$/;"	f
__clone	.\Source\application\library\Zend\Db\Sql\Update.php	/^    public function __clone()$/;"	f
__clone	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function __clone()$/;"	f
__clone	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function __clone()$/;"	f
__clone	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function __clone()$/;"	f
__clone	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function __clone()$/;"	f
__construct	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public function __construct(TableGateway $tableGateway)$/;"	f
__construct	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^    public function __construct(array $factories = null)$/;"	f
__construct	.\Source\application\library\Alpaca\MVC\Application.php	/^    public function __construct(array $config = null)$/;"	f
__construct	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function __construct( $data = null , $type =self::VIEW_TYPE_HTML)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function __construct($driver, Platform\\PlatformInterface $platform = null, ResultSet\\ResultSetInterface $queryResultPrototype = null, Profiler\\ProfilerInterface $profiler = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    public function __construct($connectionParameters = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function __construct($connection, Statement $statementPrototype = null, Result $resultPrototype = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    public function __construct($connectionInfo = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function __construct($connection, Statement $statementPrototype = null, Result $resultPrototype = null, array $options = array())$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function __construct($bufferResults = false)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    public function __construct($connectionInfo = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function __construct($connection, Statement $statementPrototype = null, Result $resultPrototype = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function __construct($connectionParameters = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function __construct($connection, Statement $statementPrototype = null, Result $resultPrototype = null, $features = self::FEATURES_DEFAULT)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    public function __construct($connectionInfo = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function __construct($connection, Statement $statementPrototype = null, Result $resultPrototype = null, $options = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function __construct($connectionInfo)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Exception\ErrorException.php	/^    public function __construct($errors = false)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function __construct($connection, Statement $statementPrototype = null, Result $resultPrototype = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Exception\InvalidConnectionParametersException.php	/^    public function __construct($message, $parameters)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function __construct(array $data = array())$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Platform\IbmDb2.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Platform\Mysql.php	/^    public function __construct($driver = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Platform\Oracle.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Platform\Postgresql.php	/^    public function __construct($driver = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^    public function __construct($driver = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\Platform\Sqlite.php	/^    public function __construct($driver = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Adapter\StatementContainer.php	/^    public function __construct($sql = null, ParameterContainer $parameterContainer = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function __construct(Adapter $adapter)$/;"	f
__construct	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    public function __construct($name)$/;"	f
__construct	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function __construct($name, $tableName, $schemaName = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function __construct($column)$/;"	f
__construct	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function __construct($name, $tableName, $schemaName = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function __construct(Adapter $adapter)$/;"	f
__construct	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^    public function __construct(HydratorInterface $hydrator = null, $objectPrototype = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^    public function __construct($returnType = self::TYPE_ARRAYOBJECT, $arrayObjectPrototype = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function __construct(array $features = array())$/;"	f
__construct	.\Source\application\library\Zend\Db\RowGateway\RowGateway.php	/^    public function __construct($primaryKeyColumn, $table, $adapterOrSql = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    public function __construct($select = null, $type = self::COMBINE_UNION, $modifier = '')$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    public function __construct($table = '')$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractLengthColumn.php	/^    public function __construct($name, $length = null, $nullable = false, $default = null, array $options = array())$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractPrecisionColumn.php	/^    public function __construct($name, $digits = null, $decimal = null, $nullable = false, $default = null, array $options = array())$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function __construct($name = null, $nullable = false, $default = null, array $options = array())$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Float.php	/^    public function __construct($/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    public function __construct($columns = null, $name = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\Check.php	/^    public function __construct($expression, $name)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    public function __construct($name, $columns, $referenceTable, $referenceColumn, $onDeleteRule = null, $onUpdateRule = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    public function __construct($table = '', $isTemporary = false)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Ddl\DropTable.php	/^    public function __construct($table = '')$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^    public function __construct($column, $name = null, array $lengths = array())$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    public function __construct($table = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Expression.php	/^    public function __construct($expression = '', $parameters = null, array $types = array())$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    public function __construct($table = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Literal.php	/^    public function __construct($literal = '')$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\IbmDb2.php	/^    public function __construct(SelectDecorator $selectDecorator = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Mysql.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\Oracle.php	/^    public function __construct(SelectDecorator $selectDecorator = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    public function __construct(AdapterInterface $adapter)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SqlServer.php	/^    public function __construct(SelectDecorator $selectDecorator = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    public function __construct($identifier = null, $minValue = null, $maxValue = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Predicate\Expression.php	/^    public function __construct($expression = null, $valueParameter = null \/*[, $valueParameter, ... ]*\/)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^    public function __construct($identifier = null, $valueSet = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Predicate\IsNull.php	/^    public function __construct($identifier = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^    public function __construct($identifier = null, $like = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    public function __construct($/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    public function __construct(array $predicates = null, $defaultCombination = self::COMBINED_BY_AND)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function __construct($table = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function __construct(AdapterInterface $adapter, $table = null, Platform\\AbstractPlatform $sqlPlatform = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^    public function __construct($table, $schema = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\Sql\Update.php	/^    public function __construct($table = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function __construct($/;"	f
__construct	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function __construct(array $features = array())$/;"	f
__construct	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^    public function __construct(AdapterInterface $slaveAdapter, Sql $slaveSql = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^    public function __construct(MetadataInterface $metadata = null)$/;"	f
__construct	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^    public function __construct($primaryKeyField, $sequenceName)$/;"	f
__construct	.\Source\application\library\Zend\Db\TableGateway\TableGateway.php	/^    public function __construct($table, AdapterInterface $adapter, $features = null, ResultSetInterface $resultSetPrototype = null, Sql $sql = null)$/;"	f
__construct	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function __construct($name = 'Default', Manager $manager = null)$/;"	f
__construct	.\Source\application\library\Zend\Session\AbstractManager.php	/^    public function __construct($/;"	f
__construct	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    public function __construct(CacheStorage $cacheStorage)$/;"	f
__construct	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^    public function __construct(TableGateway $tableGateway, DbTableGatewayOptions $options)$/;"	f
__construct	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^    public function __construct($mongo, MongoDBOptions $options)$/;"	f
__construct	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function __construct($/;"	f
__construct	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function __construct($input = null)$/;"	f
__construct	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function __construct($/;"	f
__construct	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^    public function __construct($input = null, $flags = ArrayObject::ARRAY_AS_PROPS, $iteratorClass = '\\\\ArrayIterator')$/;"	f
__construct	.\Source\application\library\Zend\Session\ValidatorChain.php	/^    public function __construct(Storage $storage)$/;"	f
__construct	.\Source\application\library\Zend\Session\Validator\HttpUserAgent.php	/^    public function __construct($data = null)$/;"	f
__construct	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    public function __construct($data = null)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function __construct($input = array(), $flags = self::STD_PROP_LIST, $iteratorClass = 'ArrayIterator')$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\ArrayUtils\MergeReplaceKey.php	/^    public function __construct($data)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    public function __construct($callback, array $metadata = array())$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^    public function __construct($target, $extractionObject)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^    public function __construct($target, $hydratedObject, array $hydrationData)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydratorListener.php	/^    public function __construct(HydratorInterface $hydrator)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    public function __construct($underscoreSeparatedKeys = true)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\DelegatingHydrator.php	/^    public function __construct(ServiceLocatorInterface $hydrators)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^    public function __construct($orFilter = array(), $andFilter = array())$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\MethodMatchFilter.php	/^    public function __construct($method, $exclude = true)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\NumberOfParameterFilter.php	/^    public function __construct($numberOfParameters = 0)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\ArrayMapNamingStrategy.php	/^    public function __construct(array $extractionMap)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\CompositeNamingStrategy.php	/^    public function __construct(array $strategies, NamingStrategyInterface $defaultNamingStrategy = null)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\MapNamingStrategy.php	/^    public function __construct(array $mapping, array $reverse = null)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\BooleanStrategy.php	/^    public function __construct($trueValue, $falseValue)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^    public function __construct($extractFunc = null, $hydrateFunc = null)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DateTimeFormatterStrategy.php	/^    public function __construct($format = DateTime::RFC3339, DateTimeZone $timezone = null)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ExplodeStrategy.php	/^    public function __construct($delimiter = ',', $explodeLimit = null)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^    public function __construct($serializer, $serializerOptions = null)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyChain.php	/^    public function __construct($extractionStrategies)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\Parameters.php	/^    public function __construct(array $values = null)$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\ParametersInterface.php	/^    public function __construct(array $values = null);$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\StringWrapper\Intl.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Codabar.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Code25.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Code25interleaved.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Code39.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Code39ext.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Code93ext.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Ean12.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Ean13.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Ean14.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Ean18.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Ean2.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Ean5.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Ean8.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Gtin12.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Gtin13.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Gtin14.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Identcode.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Intelligentmail.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Issn.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Itf14.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Leitcode.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Planet.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Postnet.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Sscc.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Upca.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Barcode\Upce.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\Between.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\Bitwise.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\Callback.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\CreditCard.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\Date.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\DateStep.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\File\Count.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\File\Exists.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\File\Extension.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\File\Hash.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\File\IsCompressed.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\File\IsImage.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\File\Size.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\File\Upload.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\File\WordCount.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\GreaterThan.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\Hostname.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\Iban.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\Identical.php	/^    public function __construct($token = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\LessThan.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\NotEmpty.php	/^    public function __construct($options = null)$/;"	f
__construct	.\Source\application\library\Zend\Validator\Regex.php	/^    public function __construct($pattern)$/;"	f
__construct	.\Source\application\library\Zend\Validator\Step.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\StringLength.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\Timezone.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\Uri.php	/^    public function __construct($options = array())$/;"	f
__construct	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function __construct()$/;"	f
__construct	.\Source\application\library\Zend\Validator\ValidatorPluginManager.php	/^    public function __construct(ConfigInterface $configuration = null)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public function __construct(Container $container = null)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function __construct(PDO $pdo, $database = '', $tablePrefix = '', array $config = array())$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^	public function __construct(array $connections = array())$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	public function __construct(Container $container)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\InstallCommand.php	/^	public function __construct(MigrationRepositoryInterface $repository)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^	public function __construct(Migrator $migrator, $packagePath)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^	public function __construct(MigrationCreator $creator, $packagePath)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\ResetCommand.php	/^	public function __construct(Migrator $migrator)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RollbackCommand.php	/^	public function __construct(Migrator $migrator)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^	public function __construct(Resolver $resolver)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	public function __construct($app, ConnectionFactory $factory)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function __construct(QueryBuilder $query)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function __construct(array $attributes = array())$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function __construct(Builder $query, Model $parent, $foreignKey, $otherKey, $relation)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function __construct(Builder $query, Model $parent, $table, $foreignKey, $otherKey, $relationName = null)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	public function __construct(Builder $query, Model $farParent, Model $parent, $firstKey, $secondKey)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function __construct(Builder $query, Model $parent, $foreignKey, $localKey)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	public function __construct(Builder $query, Model $parent, $type, $id, $localKey)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	public function __construct(Builder $query, Model $parent, $foreignKey, $otherKey, $type, $relation)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	public function __construct(Builder $query, Model $parent, $name, $table, $foreignKey, $otherKey, $relationName = null, $inverse = false)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	public function __construct(Model $parent, $attributes, $table, $exists = false)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function __construct(Builder $query, Model $parent)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	public function __construct(Resolver $resolver, $table)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	public function __construct(Filesystem $files)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function __construct(MigrationRepositoryInterface $repository,$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^	public function __construct($sql, array $bindings, $previous)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function __construct(ConnectionInterface $connection,$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Expression.php	/^	public function __construct($value)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public function __construct($type, $table)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function __construct($table, Closure $callback = null)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	public function __construct(Connection $connection)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function __construct(Container $container = null)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function __construct(array $items = array())$/;"	f
__construct	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function __construct($attributes = array())$/;"	f
__construct	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^	public function __construct($app)$/;"	f
__construct	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function __construct(array $messages = array())$/;"	f
__construct	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	public function __construct($app)$/;"	f
__construct	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function __construct($/;"	f
__construct	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Basic.php	/^    public function __construct($name, $value)$/;"	f
__construct	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Factory.php	/^    public function __construct(array $callbacks = [])$/;"	f
__construct	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^    public function __construct($/;"	f
__construct	.\Source\application\library\vendor\lcobucci\jwt\src\Signature.php	/^    public function __construct($hash)$/;"	f
__construct	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^    public function __construct(Adapter $adapter = null, Signer $signer = null, KeyParser $parser = null)$/;"	f
__construct	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^    public function __construct($/;"	f
__construct	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^    public function __construct($content, $passphrase = null)$/;"	f
__construct	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function __construct($/;"	f
__construct	.\Source\application\library\vendor\lcobucci\jwt\src\ValidationData.php	/^    public function __construct($currentTime = null)$/;"	f
__construct	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function __construct($time = null, $tz = null)$/;"	f
__construct	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public function __construct($years = 1, $months = null, $weeks = null, $days = null, $hours = null, $minutes = null, $seconds = null)$/;"	f
__construct	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^    public function __construct(MessageCatalogueInterface $source, MessageCatalogueInterface $target)$/;"	f
__construct	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    public function __construct(TranslatorInterface $translator)$/;"	f
__construct	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    public function __construct(DataCollectorTranslator $translator)$/;"	f
__construct	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^    public function __construct(MessageSelector $selector = null)$/;"	f
__construct	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^    public function __construct(TranslatorInterface $translator, LoggerInterface $logger)$/;"	f
__construct	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function __construct($locale, array $messages = array())$/;"	f
__construct	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function __construct($str)$/;"	f
__construct	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function __construct($locale, MessageSelector $selector = null, $cacheDir = null, $debug = false)$/;"	f
__construct	.\Source\application\service\JwtAuth\JwtManager.php	/^	function __construct()$/;"	f
__destruct	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function __destruct()$/;"	f
__destruct	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^    public function __destruct()$/;"	f
__get	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function __get($name)$/;"	f
__get	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function __get($name)$/;"	f
__get	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    public function __get($name)$/;"	f
__get	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    public function __get($name)$/;"	f
__get	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function __get($name)$/;"	f
__get	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function __get($name)$/;"	f
__get	.\Source\application\library\Zend\Db\Sql\Update.php	/^    public function __get($name)$/;"	f
__get	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function __get($property)$/;"	f
__get	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function __get($key)$/;"	f
__get	.\Source\application\library\Zend\Session\Storage\SessionArrayStorage.php	/^    public function &__get($key)$/;"	f
__get	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^    public function __get($key)$/;"	f
__get	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function &__get($key)$/;"	f
__get	.\Source\application\library\Zend\Stdlib\ParameterObjectInterface.php	/^    public function __get($key);$/;"	f
__get	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function __get($property)$/;"	f
__get	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function __get($key)$/;"	f
__get	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function __get($key)$/;"	f
__get	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function __get($key)$/;"	f
__get	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ViewErrorBag.php	/^	public function __get($key)$/;"	f
__get	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function __get($name)$/;"	f
__get	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public function __get($name)$/;"	f
__invoke	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    public function __invoke()$/;"	f
__invoke	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function __invoke($value)$/;"	f
__invoke	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function __invoke($value)$/;"	f
__isset	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function __isset($name)$/;"	f
__isset	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    public function __isset($name)$/;"	f
__isset	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function __isset($key)$/;"	f
__isset	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^    public function __isset($key)$/;"	f
__isset	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function __isset($key)$/;"	f
__isset	.\Source\application\library\Zend\Stdlib\ParameterObjectInterface.php	/^    public function __isset($key);$/;"	f
__isset	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function __isset($key)$/;"	f
__isset	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function __isset($key)$/;"	f
__isset	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function __isset($name)$/;"	f
__set	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function __set($name, $value)$/;"	f
__set	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    public function __set($name, $value)$/;"	f
__set	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function __set($property, $value)$/;"	f
__set	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function __set($key, $value)$/;"	f
__set	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function __set($key, $value)$/;"	f
__set	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^    public function __set($key, $value)$/;"	f
__set	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function __set($key, $value)$/;"	f
__set	.\Source\application\library\Zend\Stdlib\ParameterObjectInterface.php	/^    public function __set($key, $value);$/;"	f
__set	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function __set($key, $value)$/;"	f
__set	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function __set($key, $value)$/;"	f
__set	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function __set($key, $value)$/;"	f
__set	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ViewErrorBag.php	/^	public function __set($key, $value)$/;"	f
__set	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function __set($name, $value)$/;"	f
__set	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public function __set($name, $val)$/;"	f
__sleep	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function __sleep()$/;"	f
__strictMode__	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^    protected $__strictMode__ = true;$/;"	v
__toString	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function __toString()$/;"	f
__toString	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Expression.php	/^	public function __toString()$/;"	f
__toString	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function __toString()$/;"	f
__toString	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function __toString()$/;"	f
__toString	.\Source\application\library\vendor\lcobucci\jwt\src\Claim.php	/^    public function __toString();$/;"	f
__toString	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Basic.php	/^    public function __toString()$/;"	f
__toString	.\Source\application\library\vendor\lcobucci\jwt\src\Signature.php	/^    public function __toString()$/;"	f
__toString	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function __toString()$/;"	f
__toString	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function __toString()$/;"	f
__toString	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public function __toString()$/;"	f
__toString	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    public function __toString()$/;"	f
__toString	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function __toString()$/;"	f
__unset	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function __unset($name)$/;"	f
__unset	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    public function __unset($name)$/;"	f
__unset	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function __unset($key)$/;"	f
__unset	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^    public function __unset($key)$/;"	f
__unset	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function __unset($key)$/;"	f
__unset	.\Source\application\library\Zend\Stdlib\ParameterObjectInterface.php	/^    public function __unset($key);$/;"	f
__unset	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function __unset($key)$/;"	f
__unset	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function __unset($key)$/;"	f
__wakeup	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function __wakeup()$/;"	f
_initConfig	.\Source\application\Bootstrap.php	/^    public function _initConfig()$/;"	f
_initDatabase	.\Source\application\Bootstrap.php	/^    public function _initDatabase()$/;"	f
_initDefaultService	.\Source\application\Bootstrap.php	/^    public function _initDefaultService()$/;"	f
_initModules	.\Source\application\Bootstrap.php	/^    public function _initModules()$/;"	f
abbrs	.\Source\application\library\Zend\Validator\Timezone.php	/^                $abbrs = DateTimeZone::listAbbreviations();$/;"	v
absoluteBaseDate	.\Source\application\library\Zend\Validator\DateStep.php	/^        $absoluteBaseDate = new DateTime($baseDate->format('Y-m-d H:i:s'), new DateTimeZone('UTC'));$/;"	v
absoluteValueDate	.\Source\application\library\Zend\Validator\DateStep.php	/^        $absoluteValueDate = new DateTime($valueDate->format('Y-m-d H:i:s'), new DateTimeZone('UTC'));$/;"	v
abstract	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^				$abstract = '\\\\'.$abstract;$/;"	v
abstract	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$abstract = $this->getAlias($abstract);$/;"	v
abstractOptions	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    protected $abstractOptions = array($/;"	v
action	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $action = $this->ActionName;         $/;"	v
action	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^        $action = self::$App->router->Action;$/;"	v
action	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function action($name, $parameters = array())$/;"	f
actionCondition	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->actionCondition = $actionCondition;$/;"	v
actionCondition	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $actionCondition;$/;"	v
actionNotFoundAction	.\Source\application\library\Alpaca\MVC\Controller\AlpacaController.php	/^    public function actionNotFoundAction()$/;"	f
actionOrder	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->actionOrder = $actionOrder;$/;"	v
actionOrder	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $actionOrder;$/;"	v
actionOrientation	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->actionOrientation = $actionOrientation;$/;"	v
actionOrientation	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $actionOrientation;$/;"	v
actionReferenceNewRow	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->actionReferenceNewRow = $actionReferenceNewRow;$/;"	v
actionReferenceNewRow	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $actionReferenceNewRow;$/;"	v
actionReferenceNewTable	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->actionReferenceNewTable = $actionReferenceNewTable;$/;"	v
actionReferenceNewTable	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $actionReferenceNewTable;$/;"	v
actionReferenceOldRow	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->actionReferenceOldRow = $actionReferenceOldRow;$/;"	v
actionReferenceOldRow	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $actionReferenceOldRow;$/;"	v
actionReferenceOldTable	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->actionReferenceOldTable = $actionReferenceOldTable;$/;"	v
actionReferenceOldTable	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $actionReferenceOldTable;$/;"	v
actionStatement	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->actionStatement = $actionStatement;$/;"	v
actionStatement	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $actionStatement;$/;"	v
actionTiming	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->actionTiming = $actionTiming;$/;"	v
actionTiming	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $actionTiming;$/;"	v
adapter	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^            $adapter = $this->tableGateway->getAdapter();$/;"	v
adapter	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^        $adapter = $this->tableGateway->getAdapter();$/;"	v
adapter	.\Source\application\library\Zend\Db\Adapter\AdapterAwareTrait.php	/^        $this->adapter = $adapter;$/;"	v
adapter	.\Source\application\library\Zend\Db\Adapter\AdapterAwareTrait.php	/^    protected $adapter = null;$/;"	v
adapter	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^        $this->adapter = $adapter;$/;"	v
adapter	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    protected $adapter = null;$/;"	v
adapter	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $this->adapter = $adapter;$/;"	v
adapter	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    protected $adapter = null;$/;"	v
adapter	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    protected $adapter = null;$/;"	v
adapter	.\Source\application\library\Zend\Db\Sql\Sql.php	/^        $adapter   = $adapter ?: $this->adapter;$/;"	v
adapter	.\Source\application\library\Zend\Db\Sql\Sql.php	/^        $this->adapter = $adapter;$/;"	v
adapter	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    protected $adapter = null;$/;"	v
adapter	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function buildSqlString(SqlInterface $sqlObject, AdapterInterface $adapter = null)$/;"	v
adapter	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    protected $adapter = null;$/;"	v
adapter	.\Source\application\library\Zend\Db\TableGateway\TableGateway.php	/^        $this->adapter = $adapter;$/;"	v
adapter	.\Source\application\library\Zend\Validator\Barcode.php	/^            $adapter = 'Zend\\\\Validator\\\\Barcode\\\\' . $adapter;$/;"	v
adapter	.\Source\application\library\Zend\Validator\Barcode.php	/^            $adapter = new $adapter($options);$/;"	v
adapter	.\Source\application\library\Zend\Validator\Barcode.php	/^            $adapter = ucfirst(strtolower($adapter));$/;"	v
adapter	.\Source\application\library\Zend\Validator\Barcode.php	/^        $adapter                 = $this->getAdapter();$/;"	v
adapter	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $this->adapter = $adapter;$/;"	v
adapter	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    protected $adapter = null;$/;"	v
adapter	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^        $this->adapter = $adapter ?: EccFactory::getAdapter();$/;"	v
adapter	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^    private $adapter;$/;"	v
adapter	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^    public function __construct(Adapter $adapter = null, Signer $signer = null, KeyParser $parser = null)$/;"	v
adapter	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^        $this->adapter = $this->getMock(Adapter::class);$/;"	v
adapter	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^    private $adapter;$/;"	v
adapter	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^        $this->adapter = $this->getMock(MathAdapterInterface::class);$/;"	v
adapter	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^    private $adapter;$/;"	v
adapterOrPlatform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    public function getTypeDecorator($subject, $adapterOrPlatform = null)$/;"	v
adapterOrPlatform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    public function setTypeDecorator($type, PlatformDecoratorInterface $decorator, $adapterOrPlatform = null)$/;"	v
adapterOrSql	.\Source\application\library\Zend\Db\RowGateway\RowGateway.php	/^    public function __construct($primaryKeyColumn, $table, $adapterOrSql = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $adapterPlatform = ($adapterPlatform) ?: new DefaultAdapterPlatform;$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^    public function getSqlString(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected function processAddColumns(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected function processAddConstraints(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected function processChangeColumns(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected function processDropColumns(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected function processDropConstraints(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected function processTable(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected function processColumns(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected function processCombinedby(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected function processConstraints(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected function processStatementEnd(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected function processTable(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Ddl\DropTable.php	/^    protected function processTable(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Platform\AbstractPlatform.php	/^    public function getSqlString(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^    protected function processAddColumns(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^    protected function processChangeColumns(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^        $adapterPlatform = $this->resolvePlatform($adapterPlatform);$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    public function getSqlString(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\Ddl\CreateTableDecorator.php	/^    protected function processTable(PlatformInterface $adapterPlatform = null)$/;"	v
adapterPlatform	.\Source\application\library\Zend\Db\Sql\SqlInterface.php	/^    public function getSqlString(PlatformInterface $adapterPlatform = null);$/;"	v
add	.\Source\application\library\Alpaca\Log\Log.php	/^    public static function add($string)$/;"	f
add	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\AggregateHydrator.php	/^    public function add(HydratorInterface $hydrator, $priority = self::DEFAULT_PRIORITY)$/;"	f
add	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function add($prefix, $paths, $prepend = false)$/;"	f
add	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function add($item)$/;"	f
add	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function add($array, $key, $value)$/;"	f
add	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function add($key, $message)$/;"	f
add	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public function add(DateInterval $interval)$/;"	f
add	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function add($messages, $domain = 'messages')$/;"	f
add	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function add($messages, $domain = 'messages');$/;"	f
addBinding	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function addBinding($value, $type = 'where')$/;"	f
addByName	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function addByName($name, $options = array(), $breakChainOnFailure = false)$/;"	f
addCatalogue	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function addCatalogue(MessageCatalogueInterface $catalogue)$/;"	f
addCatalogue	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function addCatalogue(MessageCatalogueInterface $catalogue);$/;"	f
addChild	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function addChild($child, $captureTo = null)$/;"	f
addClassMap	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function addClassMap(array $classMap)$/;"	f
addColumn	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    public function addColumn(Column\\ColumnInterface $column)$/;"	f
addColumn	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    public function addColumn($column)$/;"	f
addColumn	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    public function addColumn(Column\\ColumnInterface $column)$/;"	f
addColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected function addColumn($type, $name, array $parameters = array())$/;"	f
addColumns	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected $addColumns = array();$/;"	v
addCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected function addCommand($name, array $parameters = array())$/;"	f
addConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public function addConnection(array $config, $name = 'default')$/;"	f
addConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^	public function addConnection($name, Connection $connection)$/;"	f
addConstraint	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    public function addConstraint(Constraint\\ConstraintInterface $constraint)$/;"	f
addConstraint	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function addConstraint(ConstraintInterface $constraint)$/;"	f
addConstraint	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    public function addConstraint(Constraint\\ConstraintInterface $constraint)$/;"	f
addConstraints	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected $addConstraints = array();$/;"	v
addConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function addConstraints()$/;"	f
addConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function addConstraints()$/;"	f
addConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	public function addConstraints()$/;"	f
addConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function addConstraints()$/;"	f
addConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	public function addConstraints()$/;"	f
addConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	abstract public function addConstraints();$/;"	f
addCrc32	.\Source\application\library\Zend\Validator\File\Crc32.php	/^    public function addCrc32($options)$/;"	f
addDateBasedWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function addDateBasedWhere($type, $column, $operator, $value, $boolean = 'and')$/;"	f
addDay	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addDay($value = 1)$/;"	f
addDays	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addDays($value)$/;"	f
addDirectories	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^	public static function addDirectories($directories)$/;"	f
addDirectory	.\Source\application\library\Zend\Validator\File\Exists.php	/^    public function addDirectory($directory)$/;"	f
addDumper	.\Source\application\library\vendor\symfony\translation\Writer\TranslationWriter.php	/^    public function addDumper($format, DumperInterface $dumper)$/;"	f
addDynamic	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function addDynamic($segment, $connector, $parameters, $index)$/;"	f
addEagerConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function addEagerConstraints(array $models)$/;"	f
addEagerConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function addEagerConstraints(array $models)$/;"	f
addEagerConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	public function addEagerConstraints(array $models)$/;"	f
addEagerConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function addEagerConstraints(array $models)$/;"	f
addEagerConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	public function addEagerConstraints(array $models)$/;"	f
addEagerConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	public function addEagerConstraints(array $models)$/;"	f
addEagerConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	public function addEagerConstraints(array $models)$/;"	f
addEagerConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	abstract public function addEagerConstraints(array $models);$/;"	f
addError	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^    public static function addError($errno, $errstr = '', $errfile = '', $errline = 0)$/;"	f
addErrors	.\Source\application\library\Zend\Validator\Date.php	/^    protected function convertArray(array $value, $addErrors = true)$/;"	v
addErrors	.\Source\application\library\Zend\Validator\Date.php	/^    protected function convertString($value, $addErrors = true)$/;"	v
addErrors	.\Source\application\library\Zend\Validator\Date.php	/^    protected function convertToDateTime($param, $addErrors = true)$/;"	v
addErrors	.\Source\application\library\Zend\Validator\DateStep.php	/^    protected function convertString($value, $addErrors = true)$/;"	v
addExtension	.\Source\application\library\Zend\Validator\File\Extension.php	/^    public function addExtension($extension)$/;"	f
addExtractor	.\Source\application\library\vendor\symfony\translation\Extractor\ChainExtractor.php	/^    public function addExtractor($format, ExtractorInterface $extractor)$/;"	f
addFactories	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^    public function addFactories($factories)$/;"	f
addFallbackCatalogue	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function addFallbackCatalogue(MessageCatalogueInterface $catalogue)$/;"	f
addFallbackCatalogue	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function addFallbackCatalogue(MessageCatalogueInterface $catalogue);$/;"	f
addFeature	.\Source\application\library\Zend\Db\Adapter\Driver\Feature\DriverFeatureInterface.php	/^    public function addFeature($name, $feature);$/;"	f
addFeature	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function addFeature($name, $feature)$/;"	f
addFeature	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function addFeature(AbstractFeature $feature)$/;"	f
addFeature	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function addFeature(AbstractFeature $feature)$/;"	f
addFeatures	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function addFeatures(array $features)$/;"	f
addFeatures	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function addFeatures(array $features)$/;"	f
addFile	.\Source\application\library\Zend\Validator\File\Count.php	/^    public function addFile($file)$/;"	f
addFilter	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function addFilter($name, $filter, $condition = FilterComposite::CONDITION_OR)$/;"	f
addFilter	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    public function addFilter($name, $filter, $condition = FilterComposite::CONDITION_OR)$/;"	f
addFilter	.\Source\application\library\Zend\Stdlib\Hydrator\FilterEnabledInterface.php	/^    public function addFilter($name, $filter, $condition = FilterComposite::CONDITION_OR);$/;"	f
addFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^    public function addFilter($name, $filter, $condition = self::CONDITION_OR)$/;"	f
addFluentIndexes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected function addFluentIndexes()$/;"	f
addForceDelete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^	protected function addForceDelete(Builder $builder)$/;"	f
addForeignKeys	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function addForeignKeys(Blueprint $blueprint)$/;"	f
addGlobalScope	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function addGlobalScope(ScopeInterface $scope)$/;"	f
addHasWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function addHasWhere(Builder $hasQuery, Relation $relation, $operator, $count, $boolean)$/;"	f
addHash	.\Source\application\library\Zend\Validator\File\Hash.php	/^    public function addHash($options)$/;"	f
addHour	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addHour($value = 1)$/;"	f
addHours	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addHours($value)$/;"	f
addImpliedCommands	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected function addImpliedCommands()$/;"	f
addLoader	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function addLoader($format, LoaderInterface $loader)$/;"	f
addMd5	.\Source\application\library\Zend\Validator\File\Md5.php	/^    public function addMd5($options)$/;"	f
addMessage	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^    private function addMessage(array &$messages, array $item)$/;"	f
addMetadata	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    private function addMetadata(array $values)$/;"	f
addMimeType	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    public function addMimeType($mimetype)$/;"	f
addMinute	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addMinute($value = 1)$/;"	f
addMinutes	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addMinutes($value)$/;"	f
addModifiers	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	protected function addModifiers($sql, Blueprint $blueprint, Fluent $column)$/;"	f
addMonth	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addMonth($value = 1)$/;"	f
addMonthNoOverflow	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addMonthNoOverflow($value = 1)$/;"	f
addMonths	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addMonths($value)$/;"	f
addMonthsNoOverflow	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addMonthsNoOverflow($value)$/;"	f
addNestedWhereQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function addNestedWhereQuery($query, $boolean = 'and')$/;"	f
addObservableEvents	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function addObservableEvents($observables)$/;"	f
addOnlyTrashed	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^	protected function addOnlyTrashed(Builder $builder)$/;"	f
addPredicate	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    public function addPredicate(PredicateInterface $predicate, $combination = null)$/;"	f
addPredicates	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    public function addPredicates($predicates, $combination = self::OP_AND)$/;"	f
addPrimaryKeys	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function addPrimaryKeys(Blueprint $blueprint)$/;"	f
addPsr4	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function addPsr4($prefix, $paths, $prepend = false)$/;"	f
addResource	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function addResource(ResourceInterface $resource)$/;"	f
addResource	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function addResource(ResourceInterface $resource);$/;"	f
addResource	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function addResource($format, $resource, $locale, $domain = null)$/;"	f
addRestore	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^	protected function addRestore(Builder $builder)$/;"	f
addSecond	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addSecond($value = 1)$/;"	f
addSeconds	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addSeconds($value)$/;"	f
addSelect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function addSelect($column)$/;"	f
addSha1	.\Source\application\library\Zend\Validator\File\Sha1.php	/^    public function addSha1($options)$/;"	f
addStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function addStrategy($name, StrategyInterface $strategy)$/;"	f
addStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\StrategyEnabledInterface.php	/^    public function addStrategy($name, StrategyInterface $strategy);$/;"	f
addType	.\Source\application\library\Zend\Validator\CreditCard.php	/^    public function addType($type)$/;"	f
addUpdatedAtColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function addUpdatedAtColumn(array $values)$/;"	f
addValidator	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function addValidator(ValidatorInterface $validator, $breakChainOnFailure = false, $priority = self::DEFAULT_PRIORITY)$/;"	f
addWeek	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addWeek($value = 1)$/;"	f
addWeekday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addWeekday($value = 1)$/;"	f
addWeekdays	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addWeekdays($value)$/;"	f
addWeeks	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addWeeks($value)$/;"	f
addWithTrashed	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^	protected function addWithTrashed(Builder $builder)$/;"	f
addYear	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addYear($value = 1)$/;"	f
addYears	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function addYears($value)$/;"	f
additionalSafeWords	.\Source\application\library\Zend\Db\Adapter\Platform\PlatformInterface.php	/^    public function quoteIdentifierInFragment($identifier, array $additionalSafeWords = array());$/;"	v
affectedRows	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^        $affectedRows = $result->getAffectedRows();$/;"	v
affectingStatement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function affectingStatement($query, $bindings = array())$/;"	f
affectingStatement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function affectingStatement($query, $bindings = array());$/;"	f
afterCreate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	public function afterCreate(Closure $callback)$/;"	f
aggregate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->aggregate = compact('function', 'columns');$/;"	v
aggregate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->aggregate = null;$/;"	v
aggregate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $aggregate;$/;"	v
aggregate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function aggregate($function, $columns = array('*'))$/;"	f
aggregates	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^ * This class aggregates items for the queue itself, but also composes an$/;"	c
algorithm	.\Source\application\library\Zend\Validator\File\Hash.php	/^            $algorithm = $options['algorithm'];$/;"	v
algorithm	.\Source\application\library\Zend\Validator\File\Hash.php	/^            $algorithm = $this->options['algorithm'];$/;"	v
algos	.\Source\application\library\Zend\Validator\File\Hash.php	/^        $algos  = array_unique(array_values($this->getHash()));$/;"	v
alias	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^                $alias = key($c);$/;"	v
alias	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^            $alias = key($c);$/;"	v
alias	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^            $alias = key($c);$/;"	v
alias	.\Source\application\library\Zend\Db\Sql\Combine.php	/^            foreach ($allColumns as $alias => $column) {$/;"	v
alias	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^    protected function renderTable($table, $alias = null)$/;"	v
alias	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^    protected function renderTable($table, $alias = null)$/;"	v
alias	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $alias = key($table);$/;"	v
alias	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $alias = null;$/;"	v
alias	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function renderTable($table, $alias = null)$/;"	v
alias	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^            foreach ($this->table as $alias => &$tableObject) {$/;"	v
alias	.\Source\application\library\Zend\Validator\Csrf.php	/^            \/\/ Using fully qualified name, to ensure polyfill class alias is used$/;"	c
alias	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function alias($abstract, $alias)$/;"	f
aliases	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorPluginManager.php	/^    protected $aliases = array($/;"	v
aliases	.\Source\application\library\Zend\Validator\ValidatorPluginManager.php	/^    protected $aliases = array($/;"	v
aliases	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected $aliases = array();$/;"	v
alignColumns	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    public function alignColumns()$/;"	f
aligned	.\Source\application\library\Zend\Db\Sql\Combine.php	/^            $aligned = array();$/;"	v
all	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function all($columns = array('*'))$/;"	f
all	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function union($query, $all = false)$/;"	v
all	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function all()$/;"	f
all	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^			$all = array_merge($all, $this->transform($messages, $format, $key));$/;"	v
all	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^		$all = array();$/;"	v
all	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function all($format = null)$/;"	f
all	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function all($domain = null)$/;"	f
all	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function all($domain = null);$/;"	f
allColumns	.\Source\application\library\Zend\Db\Sql\Combine.php	/^            $allColumns = array_merge($/;"	v
allColumns	.\Source\application\library\Zend\Db\Sql\Combine.php	/^        $allColumns = array();$/;"	v
allowAbsolute	.\Source\application\library\Zend\Validator\Uri.php	/^        $this->allowAbsolute = (bool) $allowAbsolute;$/;"	v
allowAbsolute	.\Source\application\library\Zend\Validator\Uri.php	/^    protected $allowAbsolute = true;$/;"	v
allowEmpty	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function hasIntegerKeys($value, $allowEmpty = false)$/;"	v
allowEmpty	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function hasNumericKeys($value, $allowEmpty = false)$/;"	v
allowEmpty	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function hasStringKeys($value, $allowEmpty = false)$/;"	v
allowEmpty	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function isHashTable($value, $allowEmpty = false)$/;"	v
allowEmpty	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function isList($value, $allowEmpty = false)$/;"	v
allowLocal	.\Source\application\library\Zend\Validator\Hostname.php	/^        $allowLocal = $this->getAllow() & self::ALLOW_LOCAL;$/;"	v
allowNonSepa	.\Source\application\library\Zend\Validator\Iban.php	/^        $this->allowNonSepa = (bool) $allowNonSepa;$/;"	v
allowNonSepa	.\Source\application\library\Zend\Validator\Iban.php	/^    protected $allowNonSepa = true;$/;"	v
allowNonSepa	.\Source\application\library\Zend\Validator\Iban.php	/^    public function allowNonSepa()$/;"	f
allowRelative	.\Source\application\library\Zend\Validator\Uri.php	/^        $this->allowRelative = (bool) $allowRelative;$/;"	v
allowRelative	.\Source\application\library\Zend\Validator\Uri.php	/^    protected $allowRelative = true;$/;"	v
allowed	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^		$allowed = array_map(function($a) { return "'".$a."'"; }, $column->allowed);$/;"	v
allowedReturnTypes	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^    protected $allowedReturnTypes = array($/;"	v
allowedTypes	.\Source\application\library\Zend\Db\Sql\AbstractExpression.php	/^    protected $allowedTypes = array($/;"	v
allowedTypes	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    protected $allowedTypes  = array($/;"	v
alpacaController	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $alpacaController = new AlpacaController();$/;"	v
amount	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function decrement($column, $amount = 1, array $extra = array())$/;"	v
amount	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function increment($column, $amount = 1, array $extra = array())$/;"	v
amount	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function decrement($column, $amount = 1)$/;"	v
amount	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function increment($column, $amount = 1)$/;"	v
amount	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function decrement($column, $amount = 1, array $extra = array())$/;"	v
amount	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function increment($column, $amount = 1, array $extra = array())$/;"	v
and	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^     * Sort the entries with a user-defined comparison function and maintain key association$/;"	f
and	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			\/\/ primitive type which we can not resolve since it is not a class and$/;"	c
and	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		\/\/ as a belongs-to style relationship since morph-to extends that class and$/;"	c
and	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		\/\/ use that to get both the class and foreign key that will be utilized.$/;"	c
and	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	 * An aggregate function and column to be run.$/;"	f
and	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	 * Parse a Class@method style callback into class and method.$/;"	c
andCount	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^        $andCount = count($this->andFilter);$/;"	v
andCount	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^        if ($orCount === 0 && $andCount === 0) {$/;"	v
andFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^        $this->andFilter = new ArrayObject($andFilter);$/;"	v
andFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^    protected $andFilter;$/;"	v
andFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^    public function __construct($orFilter = array(), $andFilter = array())$/;"	v
andPredicate	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    public function andPredicate(PredicateInterface $predicate)$/;"	f
any	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function any()$/;"	f
ao	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^            $ao = clone $this->arrayObjectPrototype;$/;"	v
app	.\Source\application\library\Alpaca\MVC\Application.php	/^    public static function app(array $config = null)$/;"	f
app	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^		$app = $this->app;$/;"	v
app	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^		$this->app = $app;$/;"	v
app	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	protected $app;$/;"	v
app	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	protected static $app;$/;"	v
app	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^		$app = Facade::getFacadeApplication();$/;"	v
app	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^		$this->app = $app;$/;"	v
app	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^	protected $app;$/;"	v
app	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^		$this->app = $app;$/;"	v
app	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	protected $app;$/;"	v
app	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function app($make = null)$/;"	f
app	.\Source\public\index.php	/^$app =  Alpaca\\MVC\\Application::app($config);$/;"	v
appView	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^		$appView = $this->getAppViewPath($package);$/;"	v
app_path	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function app_path($path = '')$/;"	f
append	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function append($value)$/;"	f
append_config	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function append_config(array $array)$/;"	f
appends	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->appends = $appends;$/;"	v
appends	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $appends = array();$/;"	v
apply	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function apply($method, $args)$/;"	f
apply	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function apply($method, $args)$/;"	f
apply	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\ScopeInterface.php	/^	public function apply(Builder $builder);$/;"	f
apply	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^	public function apply(Builder $builder)$/;"	f
applyGlobalScopes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function applyGlobalScopes($builder)$/;"	f
ar	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^        $ar                        = unserialize($data);$/;"	v
arg	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^        $arg = count($args) === 0 ? 1 : $args[0];$/;"	v
arg1	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^                $arg1 = array_shift($args);$/;"	v
arg2	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^                $arg2 = array_shift($args);$/;"	v
arg3	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^                $arg3 = array_shift($args);$/;"	v
argCount	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^        $argCount = count($args);$/;"	v
args	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $args = array();$/;"	v
args	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^        $args = $this->constructorArguments;$/;"	v
args	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    public function call(array $args = array())$/;"	v
args	.\Source\application\library\Zend\Validator\Callback.php	/^            $args   = array_merge($args, $options);$/;"	v
args	.\Source\application\library\Zend\Validator\Callback.php	/^            $args = array_merge($args, $options);$/;"	v
args	.\Source\application\library\Zend\Validator\Callback.php	/^        $args = array($value);$/;"	v
args	.\Source\application\library\Zend\Validator\StaticValidator.php	/^    public static function execute($value, $classBaseName, array $args = array())$/;"	v
argument	.\Source\application\library\Zend\Db\Sql\AbstractExpression.php	/^        if (is_scalar($argument) || $argument === null) {$/;"	v
argv	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^            $argv = func_get_args();$/;"	v
argv	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^            $argv = func_get_args();$/;"	v
argv	.\Source\application\library\Zend\Validator\File\Size.php	/^            $argv = func_get_args();$/;"	v
array	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^                $array = $_SESSION['__ZF'];$/;"	v
array	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^            $array = $this->toArray();$/;"	v
array	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^                $array = $this['__ZF'];$/;"	v
array	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^            $array = $this->toArray();$/;"	v
array	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^        $array = array();$/;"	v
array	.\Source\application\library\Zend\Stdlib\ArrayStack.php	/^        $array = $this->getArrayCopy();$/;"	v
array	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^        $array = array();$/;"	v
array	.\Source\application\library\Zend\Stdlib\Parameters.php	/^        $array = array();$/;"	v
array	.\Source\application\library\Zend\Stdlib\SplPriorityQueue.php	/^        $array = array();$/;"	v
array	.\Source\application\library\Zend\Stdlib\SplQueue.php	/^        $array = array();$/;"	v
array	.\Source\application\library\Zend\Stdlib\SplStack.php	/^        $array = array();$/;"	v
array	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^					$array =& $array[$part];$/;"	v
array	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^			$array = $array[$segment];$/;"	v
array	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^			$array = array_values($results);$/;"	v
array	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^			$array =& $array[$key];$/;"	v
array	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^			$array =& $original;$/;"	v
array	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^		if (is_null($key)) return $array = $value;$/;"	v
arrayObjectPrototype	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^        $this->arrayObjectPrototype = $arrayObjectPrototype;$/;"	v
arrayObjectPrototype	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^    protected $arrayObjectPrototype = null;$/;"	v
arrayObjectPrototype	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^    public function __construct($returnType = self::TYPE_ARRAYOBJECT, $arrayObjectPrototype = null)$/;"	v
array_add	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_add($array, $key, $value)$/;"	f
array_build	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_build($array, Closure $callback)$/;"	f
array_divide	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_divide($array)$/;"	f
array_dot	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_dot($array, $prepend = '')$/;"	f
array_except	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_except($array, $keys)$/;"	f
array_fetch	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_fetch($array, $key)$/;"	f
array_first	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_first($array, $callback, $default = null)$/;"	f
array_flatten	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_flatten($array)$/;"	f
array_forget	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_forget(&$array, $keys)$/;"	f
array_get	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_get($array, $key, $default = null)$/;"	f
array_has	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_has($array, $key)$/;"	f
array_last	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_last($array, $callback, $default = null)$/;"	f
array_only	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_only($array, $keys)$/;"	f
array_pluck	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_pluck($array, $value, $key = null)$/;"	f
array_pull	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_pull(&$array, $key, $default = null)$/;"	f
array_set	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_set(&$array, $key, $value)$/;"	f
array_sort	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_sort($array, Closure $callback)$/;"	f
array_where	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_where($array, Closure $callback)$/;"	f
asArray	.\Source\application\library\Zend\Validator\File\Exists.php	/^        $asArray   = (bool) $asArray;$/;"	v
asArray	.\Source\application\library\Zend\Validator\File\MimeType.php	/^        $asArray  = (bool) $asArray;$/;"	v
asDateTime	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function asDateTime($value)$/;"	f
ascii	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function ascii($value)$/;"	f
asort	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function asort()$/;"	f
assertValidLocale	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    protected function assertValidLocale($locale)$/;"	f
asset	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function asset($path, $secure = null)$/;"	f
associate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function associate(Model $model)$/;"	f
associate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	public function associate(Model $model)$/;"	f
atext	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $atext = 'a-zA-Z0-9\\x21\\x23\\x24\\x25\\x26\\x27\\x2a\\x2b\\x2d\\x2f\\x3d\\x3f\\x5e\\x5f\\x60\\x7b\\x7c\\x7d\\x7e';$/;"	v
attach	.\Source\application\library\Zend\Session\ValidatorChain.php	/^    public function attach($event, $callback = null, $priority = 1)$/;"	f
attach	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydratorListener.php	/^    public function attach(EventManagerInterface $events, $priority = 1)$/;"	f
attach	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function attach($/;"	f
attach	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function attach($id, array $attributes = array(), $touch = true)$/;"	f
attachByName	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function attachByName($name, $options = array(), $breakChainOnFailure = false, $priority = self::DEFAULT_PRIORITY)$/;"	f
attachNew	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function attachNew(array $records, array $current, $touch = true)$/;"	f
attacher	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function attacher($key, $value, $attributes, $timed)$/;"	f
attribute	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^                        $attribute = lcfirst($attribute);$/;"	v
attribute	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^                    $attribute = substr($method, 3);$/;"	v
attribute	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^                $attribute = $method;$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$attributes = $this->attributes;$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$attributes = $this->attributesToArray();$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$attributes = $this->getArrayableAttributes();$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$attributes = array();$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$attributes = array_except($this->attributes, $except);$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->attributes = $attributes;$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		if ( ! is_array($attributes)) $attributes = func_get_args();$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $attributes = array();$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function __construct(array $attributes = array())$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function update(array $attributes = array())$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^			$attributes = $this->setTimestampsOnAttach($attributes, true);$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function attach($id, array $attributes = array(), $touch = true)$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function newExistingPivot(array $attributes = array())$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function newPivot(array $attributes = array(), $exists = false)$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	public function newPivot(array $attributes = array(), $exists = false)$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function rawUpdate(array $attributes = array())$/;"	v
attributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^		$attributes = array_merge(compact('type', 'name'), $parameters);$/;"	v
attributes	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	protected $attributes = array();$/;"	v
attributes	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $attributes = $translation->attributes();$/;"	v
attributesToArray	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function attributesToArray()$/;"	f
aud	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^        $aud = null,$/;"	v
auth	.\Source\application\module\Index\Module.php	/^                \/\/     $auth = new Auth();$/;"	v
autoIncrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function bigInteger($column, $autoIncrement = false, $unsigned = false)$/;"	v
autoIncrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function integer($column, $autoIncrement = false, $unsigned = false)$/;"	v
autoIncrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function mediumInteger($column, $autoIncrement = false, $unsigned = false)$/;"	v
autoIncrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function smallInteger($column, $autoIncrement = false, $unsigned = false)$/;"	v
autoIncrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function tinyInteger($column, $autoIncrement = false, $unsigned = false)$/;"	v
autoIncrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function unsignedBigInteger($column, $autoIncrement = false)$/;"	v
autoIncrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function unsignedInteger($column, $autoIncrement = false)$/;"	v
average	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function average(Carbon $dt = null)$/;"	f
avg	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function avg($column)$/;"	f
backup	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^        $this->backup = $backup;$/;"	v
backup	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^    private $backup = true;$/;"	v
backup	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^        $this->backup = $backup;$/;"	v
backup	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^    public $backup = true;$/;"	v
backupDumper	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^        $backupDumper = new BackupDumper();$/;"	v
backupFieldsForCount	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function backupFieldsForCount()$/;"	f
backupFile	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^        $backupFile = $file.'~';$/;"	v
backups	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->backups = array();$/;"	v
backups	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected $backups = array();$/;"	v
bags	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ViewErrorBag.php	/^	protected $bags = [];$/;"	v
barcode	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $barcode = substr($value, 0, -1);$/;"	v
base	.\Source\application\library\Zend\Validator\Hostname.php	/^            $base   = intval($key + 36 * $delta \/ ($delta + 38));$/;"	v
base	.\Source\application\library\Zend\Validator\Hostname.php	/^        $base  = 72;$/;"	v
base	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$base = snake_case(class_basename($this));$/;"	v
base64UrlDecode	.\Source\application\library\vendor\lcobucci\jwt\src\Parsing\Decoder.php	/^    public function base64UrlDecode($data)$/;"	f
base64UrlDecodeMustReturnTheRightData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Parsing\DecoderTest.php	/^    public function base64UrlDecodeMustReturnTheRightData()$/;"	f
base64UrlEncode	.\Source\application\library\vendor\lcobucci\jwt\src\Parsing\Encoder.php	/^    public function base64UrlEncode($data)$/;"	f
base64UrlEncodeMustReturnAnUrlSafeBase64	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Parsing\EncoderTest.php	/^    public function base64UrlEncodeMustReturnAnUrlSafeBase64()$/;"	f
baseDate	.\Source\application\library\Zend\Validator\DateStep.php	/^        $baseDate  = $this->convertToDateTime($this->baseValue, false);$/;"	v
baseDir	.\Source\application\library\vendor\composer\autoload_classmap.php	/^$baseDir = dirname($vendorDir);$/;"	v
baseDir	.\Source\application\library\vendor\composer\autoload_files.php	/^$baseDir = dirname($vendorDir);$/;"	v
baseDir	.\Source\application\library\vendor\composer\autoload_namespaces.php	/^$baseDir = dirname($vendorDir);$/;"	v
baseDir	.\Source\application\library\vendor\composer\autoload_psr4.php	/^$baseDir = dirname($vendorDir);$/;"	v
basePath	.\Source\application\library\Alpaca\Log\Log.php	/^    static $basePath=APP_PATH."\/logs\/";$/;"	v
baseTable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$baseTable = $this->related->getTable();$/;"	v
baseValue	.\Source\application\library\Zend\Validator\DateStep.php	/^        $this->baseValue = $baseValue;$/;"	v
baseValue	.\Source\application\library\Zend\Validator\DateStep.php	/^    protected $baseValue = '1970-01-01T00:00:00Z';$/;"	v
baseValue	.\Source\application\library\Zend\Validator\Step.php	/^        $this->baseValue = $baseValue;$/;"	v
baseValue	.\Source\application\library\Zend\Validator\Step.php	/^    protected $baseValue = 0;$/;"	v
baseWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^		$baseWhere = $this->compileWheres($query);$/;"	v
base_path	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function base_path($path = '')$/;"	f
based	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	 * Resolve a class based dependency from the container.$/;"	c
based	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	 * Create a class based listener using the IoC container.$/;"	c
batch	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$batch = $this->repository->getNextBatchNumber();$/;"	v
begin	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public function begin()$/;"	f
begin	.\Source\application\library\Zend\Stdlib\Glob.php	/^                    $begin = false;$/;"	v
begin	.\Source\application\library\Zend\Stdlib\Glob.php	/^            $begin = 0;$/;"	v
begin	.\Source\application\library\Zend\Stdlib\Glob.php	/^            $begin = strpos($pattern, '{');$/;"	v
beginTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\ConnectionInterface.php	/^    public function beginTransaction();$/;"	f
beginTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    public function beginTransaction()$/;"	f
beginTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    public function beginTransaction()$/;"	f
beginTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    public function beginTransaction()$/;"	f
beginTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function beginTransaction()$/;"	f
beginTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    public function beginTransaction()$/;"	f
beginTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function beginTransaction()$/;"	f
beginTransaction	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function beginTransaction()$/;"	f
beginTransaction	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function beginTransaction();$/;"	f
belongsTo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function belongsTo($related, $foreignKey = null, $otherKey = null, $relation = null)$/;"	f
belongsToMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function belongsToMany($related, $table = null, $foreignKey = null, $otherKey = null, $relation = null)$/;"	f
bench	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\BaseCommand.php	/^		$bench = $this->input->getOption('bench');$/;"	v
better	.\Source\application\library\Zend\Stdlib\DateTime.php	/^     * not allow for fractions of a second. This function better handles ISO8601$/;"	f
between	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function between($identifier, $minValue, $maxValue)$/;"	f
between	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$between = $where['not'] ? 'not between' : 'between';$/;"	v
between	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function between(Carbon $dt1, Carbon $dt2, $equal = true)$/;"	f
bigIncrements	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function bigIncrements($column)$/;"	f
bigInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function bigInteger($column, $autoIncrement = false, $unsigned = false)$/;"	f
binary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function binary($column)$/;"	f
bind	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $bind = array(':OWNER' => strtoupper($schema));$/;"	v
bind	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function bind($abstract, $concrete = null, $shared = false)$/;"	f
bindIf	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function bindIf($abstract, $concrete = null, $shared = false)$/;"	f
bindParametersFromContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    protected function bindParametersFromContainer()$/;"	f
bindParametersFromContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    protected function bindParametersFromContainer()$/;"	f
bindParametersFromContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    protected function bindParametersFromContainer()$/;"	f
bindParametersFromContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    protected function bindParametersFromContainer()$/;"	f
bindShared	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function bindShared($abstract, Closure $closure)$/;"	f
bindings	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected $bindings = array();$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^			$bindings = $me->prepareBindings($bindings);$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function affectingStatement($query, $bindings = array())$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function delete($query, $bindings = array())$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function insert($query, $bindings = array())$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function select($query, $bindings = array(), $useReadPdo = true)$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function selectFromWriteConnection($query, $bindings = array())$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function selectOne($query, $bindings = array())$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function statement($query, $bindings = array())$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function update($query, $bindings = array())$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function affectingStatement($query, $bindings = array());$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function delete($query, $bindings = array());$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function insert($query, $bindings = array());$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function select($query, $bindings = array());$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function selectOne($query, $bindings = array());$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function statement($query, $bindings = array());$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function update($query, $bindings = array());$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function hydrateRaw($query, $bindings = array(), $connection = null)$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^		$this->bindings = $bindings;$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^	protected $bindings;$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$bindings = $this->cleanBindings($bindings);$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$bindings = array();$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$bindings = array_values(array_merge($values, $this->getBindings()));$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->bindings = array_merge_recursive($this->bindings, $query->bindings);$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected $bindings = array($/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function havingRaw($sql, array $bindings = array(), $boolean = 'and')$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orHavingRaw($sql, array $bindings = array())$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhereRaw($sql, array $bindings = array())$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orderByRaw($sql, $bindings = array())$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereRaw($sql, array $bindings = array(), $boolean = 'and')$/;"	v
bindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public $bindings = array();$/;"	v
blueprint	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^		$blueprint = $this->createBlueprint($from);$/;"	v
blueprint	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^		$blueprint = $this->createBlueprint($table);$/;"	v
blueprintResolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	public function blueprintResolver(Closure $resolver)$/;"	f
bool	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$bool = strtolower($connector);$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function doesntHave($relation, $boolean = 'and', Closure $callback = null)$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function addDateBasedWhere($type, $column, $operator, $value, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function addNestedWhereQuery($query, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereBetween($column, array $values, $boolean = 'and', $not = false)$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereDate($column, $operator, $value, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereDay($column, $operator, $value, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereExists(Closure $callback, $boolean = 'and', $not = false)$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereIn($column, $values, $boolean = 'and', $not = false)$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereMonth($column, $operator, $value, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereNested(Closure $callback, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereNotBetween($column, array $values, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereNotExists(Closure $callback, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereNotIn($column, $values, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereNotNull($column, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereNull($column, $boolean = 'and', $not = false)$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereYear($column, $operator, $value, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public function on($first, $operator, $second, $boolean = 'and', $where = false)$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public function where($first, $operator, $second, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public function whereNull($column, $boolean = 'and')$/;"	v
boolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function boolean($column)$/;"	f
boot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseServiceProvider.php	/^	public function boot()$/;"	f
boot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected static function boot()$/;"	f
boot	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	public function boot() {}$/;"	f
bootEloquent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public function bootEloquent()$/;"	f
bootIfNotBooted	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function bootIfNotBooted()$/;"	f
bootSoftDeletingTrait	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	public static function bootSoftDeletingTrait()$/;"	f
bootTraits	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected static function bootTraits()$/;"	f
booted	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected static $booted = array();$/;"	v
bootstrap	.\Source\application\library\Alpaca\MVC\Application.php	/^        $bootstrap = new \\Bootstrap();$/;"	v
bootstrap	.\Source\application\library\Alpaca\MVC\Application.php	/^    public function bootstrap(){$/;"	f
bound	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$bound = $this->bound($abstract);$/;"	v
bound	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function bound($abstract)$/;"	f
break	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $break = (string) $break;$/;"	v
breakChainOnFailure	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^            $breakChainOnFailure = (bool) $options['break_chain_on_failure'];$/;"	v
breakChainOnFailure	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^            $breakChainOnFailure = (bool) $options['breakchainonfailure'];$/;"	v
breakChainOnFailure	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^        $breakChainOnFailure = false,$/;"	v
breakChainOnFailure	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function addValidator(ValidatorInterface $validator, $breakChainOnFailure = false, $priority = self::DEFAULT_PRIORITY)$/;"	v
breakChainOnFailure	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function prependValidator(ValidatorInterface $validator, $breakChainOnFailure = false)$/;"	v
breakOnFirstFailure	.\Source\application\library\Zend\Validator\Explode.php	/^        $this->breakOnFirstFailure = (bool) $break;$/;"	v
breakOnFirstFailure	.\Source\application\library\Zend\Validator\Explode.php	/^    protected $breakOnFirstFailure = false;$/;"	v
breakWidth	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $breakWidth  = $this->strlen($break);$/;"	v
buffer	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function buffer()$/;"	f
buffer	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function buffer()$/;"	f
buffer	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function buffer()$/;"	f
buffer	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function buffer()$/;"	f
buffer	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function buffer()$/;"	f
buffer	.\Source\application\library\Zend\Db\Adapter\Driver\ResultInterface.php	/^    public function buffer();$/;"	f
buffer	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function buffer()$/;"	f
buffer	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^                $this->buffer = -1;$/;"	v
buffer	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->buffer = -1; \/\/ array's are a natural buffer$/;"	v
buffer	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->buffer = -2; \/\/ implicitly disable buffering from here on$/;"	v
buffer	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->buffer = array();$/;"	v
buffer	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    protected $buffer = null;$/;"	v
buffer	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    public function buffer()$/;"	f
buffer	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^            $this->buffer = -2; \/\/ implicitly disable buffering from here on$/;"	v
bufferResults	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $this->bufferResults = (bool) $bufferResults;$/;"	v
bufferResults	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    protected $bufferResults = false;$/;"	v
bufferResults	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    protected $bufferResults = false;$/;"	v
buffered	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^            $buffered = false;$/;"	v
buffered	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^            $buffered = true;$/;"	v
build	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function build($concrete, $parameters = array())$/;"	f
build	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function build(Connection $connection, Grammar $grammar)$/;"	f
build	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	protected function build(Blueprint $blueprint)$/;"	f
build	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function build($array, Closure $callback)$/;"	f
buildDictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function buildDictionary(Collection $results)$/;"	f
buildDictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	protected function buildDictionary(Collection $results)$/;"	f
buildDictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	protected function buildDictionary(Collection $results)$/;"	f
buildDictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	protected function buildDictionary(Collection $models)$/;"	f
buildNormalizedArgument	.\Source\application\library\Zend\Db\Sql\AbstractExpression.php	/^    private function buildNormalizedArgument($argument, $argumentType)$/;"	f
buildRawPaginator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function buildRawPaginator($paginator, $results, $perPage)$/;"	f
buildRegularExpression	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function buildRegularExpression(array $re)$/;"	f
buildSqlString	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^    protected function buildSqlString($/;"	f
buildSqlString	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    protected function buildSqlString(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
buildSqlString	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function buildSqlString(SqlInterface $sqlObject, AdapterInterface $adapter = null)$/;"	f
builder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$builder = $this->newEloquentBuilder($/;"	v
builder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$builder = $this->newQueryWithoutScopes();$/;"	v
builder	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^        $builder = $this->createBuilder()->set('test', 123);$/;"	v
builder	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^        $builder = $this->createBuilder();$/;"	v
builderCanGenerateAToken	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^    public function builderCanGenerateAToken()$/;"	f
builderCanGenerateAToken	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^    public function builderCanGenerateAToken()$/;"	f
builderCanGenerateAToken	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^    public function builderCanGenerateAToken()$/;"	f
builderCanGenerateAToken	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^    public function builderCanGenerateAToken()$/;"	f
builderShouldRaiseExceptionWhenKeyIsNotEcdsaCompatible	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^    public function builderShouldRaiseExceptionWhenKeyIsNotEcdsaCompatible()$/;"	f
builderShouldRaiseExceptionWhenKeyIsNotRsaCompatible	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^    public function builderShouldRaiseExceptionWhenKeyIsNotRsaCompatible()$/;"	f
builderSign	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^        $builderSign = new \\ReflectionProperty($builder, 'signature');$/;"	v
bundleTop	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^        $bundleTop = $this->getPosition($data);$/;"	v
bytes	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^			$bytes = openssl_random_pseudo_bytes($length * 2);$/;"	v
c	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^            $c = $p->quoteIdentifier($c);$/;"	v
c	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^            $c = $p->quoteIdentifierChain($c);$/;"	v
c	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^        array_walk($isColumns, function (&$c) use ($p) { $c = $p->quoteIdentifierChain($c); });$/;"	v
c	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^                $c = $p->quoteIdentifier($c);$/;"	v
c	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^                $c = $p->quoteIdentifierChain($c);$/;"	v
c	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^            $c = $p->quoteIdentifierChain($c);$/;"	v
c	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        array_walk($isColumns, function (&$c) use ($p) { $c = $p->quoteIdentifierChain($c); });$/;"	v
c	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        array_walk($isColumns, function (&$c) use ($platform) { $c = $platform->quoteIdentifier($c); });$/;"	v
c	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^            $c = $p->quoteIdentifier($c);$/;"	v
c	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^            $c = $p->quoteIdentifierChain($c);$/;"	v
c	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        array_walk($isColumns, function (&$c) use ($p) { $c = $p->quoteIdentifierChain($c); });$/;"	v
c	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $c = (($m[$i++] - 0xC0) << 6) + $m[$i++] - 0x80;$/;"	v
c	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $c = (($m[$i++] - 0xE0) << 12) + (($m[$i++] - 0x80) << 6) + $m[$i++] - 0x80;$/;"	v
c	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $c = (($m[$i++] - 0xF0) << 18) + (($m[$i++] - 0x80) << 12) + (($m[$i++] - 0x80) << 6) + $m[$i++] - 0x80;$/;"	v
c	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^        $c = $catalogue;$/;"	v
c	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^        $c = $this;$/;"	v
cache	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^        $cache = $this->getCacheStorage();$/;"	v
cache	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^			$this->cache = call_user_func($this->cache);$/;"	v
cache	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->cache = $cache;$/;"	v
cache	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $cache;$/;"	v
cache	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$cache = $this->connection->getCacheManager()->driver($this->cacheDriver);$/;"	v
cache	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$cache = $this->getCache();$/;"	v
cache	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $cache = $this->getConfigCacheFactory()->cache($this->getCatalogueCachePath($locale),$/;"	v
cacheDir	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $this->cacheDir = $cacheDir;$/;"	v
cacheDir	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private $cacheDir;$/;"	v
cacheDriver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->cacheDriver = $cacheDriver;$/;"	v
cacheDriver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected $cacheDriver;$/;"	v
cacheDriver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function cacheDriver($cacheDriver)$/;"	f
cacheExpire	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $cacheExpire = (int) $cacheExpire;$/;"	v
cacheKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected $cacheKey;$/;"	v
cacheLimiter	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^        $cacheLimiter = (string) $cacheLimiter;$/;"	v
cacheMinutes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected $cacheMinutes;$/;"	v
cacheStorage	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^        $this->cacheStorage = $cacheStorage;$/;"	v
cacheStorage	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    protected $cacheStorage;$/;"	v
cacheTags	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->cacheTags = $cacheTags;$/;"	v
cacheTags	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected $cacheTags;$/;"	v
cacheTags	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function cacheTags($cacheTags)$/;"	f
calc	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $calc     = $sum % 10;$/;"	v
calculateTypeValue	.\Source\application\library\Zend\Validator\NotEmpty.php	/^    protected function calculateTypeValue($type)$/;"	f
calculateTypeValue	.\Source\application\library\Zend\Validator\Timezone.php	/^    protected function calculateTypeValue($type)$/;"	f
call	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    public function call(array $args = array())$/;"	f
call	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Seeder.php	/^	public function call($class)$/;"	f
callCustomCreator	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^	protected function callCustomCreator($driver)$/;"	f
callMagicCall	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function callMagicCall($method, $arguments)$/;"	f
callMagicCall	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function callMagicCall($method, $arguments)$/;"	f
callMagicGet	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function callMagicGet($property)$/;"	f
callMagicGet	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function callMagicGet($property)$/;"	f
callMagicSet	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function callMagicSet($property, $value)$/;"	f
callMagicSet	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function callMagicSet($property, $value)$/;"	f
callScope	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function callScope($scope, $parameters)$/;"	f
callable	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^			$callable = array($container->make($segments[0]), $method);$/;"	v
callableMethodFilter	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^        $this->callableMethodFilter = new OptionalParametersFilter();$/;"	v
callableMethodFilter	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    private $callableMethodFilter;$/;"	v
callback	.\Source\application\library\Zend\Session\ValidatorChain.php	/^    public function attach($event, $callback = null, $priority = 1)$/;"	v
callback	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^                $callback       = $result;$/;"	v
callback	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^                $this->callback = $result;$/;"	v
callback	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^        $callback = $this->getCallback();$/;"	v
callback	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^        $this->callback = $callback;$/;"	v
callback	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    protected $callback;$/;"	v
callback	.\Source\application\library\Zend\Validator\Callback.php	/^        $callback = $this->getCallback();$/;"	v
callback	.\Source\application\library\Zend\Validator\CreditCard.php	/^                $callback = new Callback($service);$/;"	v
callback	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function whereDoesntHave($relation, Closure $callback = null)$/;"	v
callback	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$callback = $this->getCacheCallback($columns);$/;"	v
callback	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function __construct($table, Closure $callback = null)$/;"	v
callback	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	protected function createBlueprint($table, Closure $callback = null)$/;"	v
callback	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^			$callback = $this->valueRetriever($callback);$/;"	v
callback	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^		if (is_string($callback)) $callback =$/;"	v
callback	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function first(Closure $callback = null, $default = null)$/;"	v
callback	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac.php	/^        $callback = function_exists('hash_equals') ? 'hash_equals' : [$this, 'hashEquals'];$/;"	v
callback	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^        $callback = function () {$/;"	v
callbacks	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Factory.php	/^        $this->callbacks = array_merge($/;"	v
callbacks	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Factory.php	/^    private $callbacks;$/;"	v
callbacks	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Factory.php	/^    public function __construct(array $callbacks = [])$/;"	v
caller	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$caller = $trace['function'];$/;"	v
caller	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$caller = $this->getBelongsToManyCaller();$/;"	v
caller	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$caller = array_first(debug_backtrace(false), function($key, $trace) use ($self)$/;"	v
camel	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function camel($value)$/;"	f
camelCache	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	protected static $camelCache = [];$/;"	v
camelCaseToUnderscoreFilter	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\UnderscoreNamingStrategy.php	/^    protected static $camelCaseToUnderscoreFilter;$/;"	v
camelKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$camelKey = camel_case($key);$/;"	v
camel_case	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function camel_case($value)$/;"	f
canBeExtracted	.\Source\application\library\vendor\symfony\translation\Extractor\AbstractFileExtractor.php	/^    abstract protected function canBeExtracted($file);$/;"	f
canCallMagicCall	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function canCallMagicCall($method)$/;"	f
canCallMagicCall	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function canCallMagicCall($method)$/;"	f
canCallMagicGet	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function canCallMagicGet($property)$/;"	f
canCallMagicGet	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function canCallMagicGet($property)$/;"	f
canCallMagicSet	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function canCallMagicSet($property)$/;"	f
canCallMagicSet	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function canCallMagicSet($property)$/;"	f
canCreateServiceWithName	.\Source\application\library\Zend\Db\Adapter\AdapterAbstractServiceFactory.php	/^    public function canCreateServiceWithName(ServiceLocatorInterface $services, $name, $requestedName)$/;"	f
canCreateServiceWithName	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^    public function canCreateServiceWithName(ServiceLocatorInterface $services, $name, $requestedName)$/;"	f
cancelExpand	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^    private static function cancelExpand(array &$tree, $prefix, array $node)$/;"	f
capsule	.\Source\application\Bootstrap.php	/^        $capsule = new Capsule;$/;"	v
captureTo	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^                $captureTo = $child->getCaptureTo();            $/;"	v
captureTo	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function addChild($child, $captureTo = null)$/;"	v
cardLength	.\Source\application\library\Zend\Validator\CreditCard.php	/^    protected $cardLength = array($/;"	v
cardName	.\Source\application\library\Zend\Validator\CreditCard.php	/^    protected $cardName = array($/;"	v
cardType	.\Source\application\library\Zend\Validator\CreditCard.php	/^    protected $cardType = array($/;"	v
case	.\Source\application\library\Zend\Validator\File\Extension.php	/^                $case = $options['case'];$/;"	v
case	.\Source\application\library\Zend\Validator\File\Extension.php	/^            $case = func_get_arg(1);$/;"	v
case	.\Source\application\library\Zend\Validator\File\Extension.php	/^        $case = null;$/;"	v
caseFold	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    private static $caseFold = array($/;"	v
cat1	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $cat1 = new MessageCatalogue('en');$/;"	v
cat2	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $cat2 = new MessageCatalogue('en');$/;"	v
catalogName	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    protected $catalogName = null;$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^        $catalogue = $this->translator->getCatalogue($locale);$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Loader\ArrayLoader.php	/^        $catalogue = new MessageCatalogue($locale);$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Loader\FileLoader.php	/^        $catalogue = parent::load($messages, $locale, $domain);$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Loader\IcuDatFileLoader.php	/^        $catalogue = new MessageCatalogue($locale);$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Loader\IcuResFileLoader.php	/^        $catalogue = new MessageCatalogue($locale);$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Loader\QtFileLoader.php	/^        $catalogue = new MessageCatalogue($locale);$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^        $catalogue = new MessageCatalogue($locale);$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^        $catalogue = $this->translator->getCatalogue($locale);$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\CsvFileDumperTest.php	/^        $catalogue = new MessageCatalogue('en');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^        $catalogue = new MessageCatalogue('en');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\IcuResFileDumperTest.php	/^        $catalogue = new MessageCatalogue('en');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\IniFileDumperTest.php	/^        $catalogue = new MessageCatalogue('en');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\JsonFileDumperTest.php	/^        $catalogue = new MessageCatalogue('en');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\MoFileDumperTest.php	/^        $catalogue = new MessageCatalogue('en');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\PhpFileDumperTest.php	/^        $catalogue = new MessageCatalogue('en');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\PoFileDumperTest.php	/^        $catalogue = new MessageCatalogue('en');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\QtFileDumperTest.php	/^        $catalogue = new MessageCatalogue('en');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php	/^        $catalogue = new MessageCatalogue('en_US');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\YamlFileDumperTest.php	/^        $catalogue = new MessageCatalogue('en');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'fr', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuResFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'en', 'message');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'en', 'resources');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $catalogue = $loader->load(__DIR__.'\/..\/fixtures\/encoding.xlf', 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $catalogue = $loader->load(__DIR__.'\/..\/fixtures\/resname.xlf', 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $catalogue = $loader->load(__DIR__.'\/..\/fixtures\/resources.xlf', 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $catalogue = $loader->load(__DIR__.'\/..\/fixtures\/with-attributes.xlf', 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $catalogue = $loader->load(__DIR__.'\/..\/fixtures\/withnote.xlf', 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^        $catalogue = $loader->load($resource, 'en', 'domain1');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $catalogue = new MessageCatalogue('en');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $catalogue = new MessageCatalogue('en', $messages = array('domain1' => array('foo' => 'foo'), 'domain2' => array('bar' => 'bar')));$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $catalogue = new MessageCatalogue('en', array('domain1' => array('foo' => 'foo'), 'domain2' => array('bar' => 'bar')));$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $catalogue = new MessageCatalogue('en', array('domain1' => array(), 'domain2' => array()));$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $catalogue = new MessageCatalogue('en_US', array('domain1' => array('foo' => 'foo'), 'domain2' => array('bar' => 'bar')));$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $catalogue = $translator->getCatalogue('a');$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $catalogue = new MessageCatalogue($locale);$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $catalogue = new MessageCatalogue($locale, array());$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $catalogue = $translator->getCatalogue($locale);$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Translator.php	/^                $catalogue = $cat;$/;"	v
catalogue	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $catalogue = $this->getCatalogue($locale);$/;"	v
catalogue1	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $catalogue1 = new MessageCatalogue('en', array('domain1' => array('foo' => 'bar', 'foo1' => 'foo1')));$/;"	v
catalogue1	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $catalogue1 = new MessageCatalogue('en', array('domain1' => array('foo1' => 'foo1')));$/;"	v
catalogues	.\Source\application\library\vendor\symfony\translation\Translator.php	/^            $this->catalogues = array();$/;"	v
catalogues	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $this->catalogues = array();$/;"	v
catalogues	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    protected $catalogues = array();$/;"	v
causedByLostConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected function causedByLostConnection(QueryException $e)$/;"	f
cb	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^            $cb = isset($_GET['callback']) ? $_GET['callback'] : null;$/;"	v
changeColumn	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    public function changeColumn($name, Column\\ColumnInterface $column)$/;"	f
changeColumns	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected $changeColumns = array();$/;"	v
changeFreqs	.\Source\application\library\Zend\Validator\Sitemap\Changefreq.php	/^    protected $changeFreqs = array($/;"	v
changes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$changes = array($/;"	v
changes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$changes = array('attached' => array(), 'updated' => array());$/;"	v
changes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$changes = array_merge($/;"	v
char	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^            $char = $this->substr($string, $current, 1);$/;"	v
char	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^                $char = $strWrapper->substr($value, 0, 2);$/;"	v
char	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^            $char = $strWrapper->substr($value, 0, 1);$/;"	v
char	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^        $char       = $strWrapper->substr($value, 0, 1);$/;"	v
char	.\Source\application\library\Zend\Validator\Hostname.php	/^        $char  = 0x80;$/;"	v
char	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function char($column, $length = 255)$/;"	f
characterMaximumLength	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        $this->characterMaximumLength = $characterMaximumLength;$/;"	v
characterMaximumLength	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $characterMaximumLength = null;$/;"	v
characterOctetLength	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        $this->characterOctetLength = $characterOctetLength;$/;"	v
characterOctetLength	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $characterOctetLength = null;$/;"	v
characterSet	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $characterSet = $findParameterValue(array('character_set', 'charset', 'encoding'));$/;"	v
characters	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $characters = $this->getCharacters();$/;"	v
characters	.\Source\application\library\Zend\Validator\Barcode\Identcode.php	/^    protected $characters = '0123456789';$/;"	v
chars	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^            $chars = str_split($characters);$/;"	v
chars	.\Source\application\library\Zend\Validator\Barcode\Codabar.php	/^        $chars  = $this->getCharacters();$/;"	v
charset	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                    $charset    = (string) $value;$/;"	v
charset	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\MySqlConnector.php	/^		$charset = $config['charset'];$/;"	v
charset	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\PostgresConnector.php	/^		$charset = $config['charset'];$/;"	v
charset	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_encode_mimeheader($s, $charset = null, $transferEncoding = null, $linefeed = null, $indent = null)$/;"	v
charset	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_encode_mimeheader($s, $charset = null, $transferEnc = null, $lf = null, $indent = null) { return p\\Mbstring::mb_encode_mimeheader($s, $charset, $transferEnc, $lf, $indent); }$/;"	v
check	.\Source\application\library\Alpaca\Tools\Validate.php	/^	public function check($value,$reg)$/;"	f
check	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $check = 0;$/;"	v
check	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $check = 10 - $check;$/;"	v
check	.\Source\application\library\Zend\Validator\Barcode\Code39.php	/^    protected $check = array($/;"	v
check	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^        $check   = array_search(($count % 47), $this->check);$/;"	v
check	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^    protected $check = array($/;"	v
check	.\Source\application\library\Zend\Validator\Barcode\Issn.php	/^        $check    = 0;$/;"	v
check	.\Source\application\library\Zend\Validator\Barcode\Issn.php	/^        $check  = ($check === 0 ? 0 : (11 - $check));$/;"	v
check	.\Source\application\library\Zend\Validator\File\Exists.php	/^                $check = true;$/;"	v
check	.\Source\application\library\Zend\Validator\File\Exists.php	/^            $check = true;$/;"	v
check	.\Source\application\library\Zend\Validator\File\Exists.php	/^        $check = false;$/;"	v
check	.\Source\application\library\Zend\Validator\File\NotExists.php	/^                $check = true;$/;"	v
check	.\Source\application\library\Zend\Validator\File\NotExists.php	/^            $check = true;$/;"	v
check	.\Source\application\library\Zend\Validator\File\NotExists.php	/^        $check = false;$/;"	v
check	.\Source\application\library\Zend\Validator\Hostname.php	/^                    $check = 0;$/;"	v
check	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $check = $dt->format('Y-m');$/;"	v
checkAction	.\Source\application\module\Index\Controller\PassportController.php	/^    public function checkAction()$/;"	f
checkClause	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^        $this->checkClause = $checkClause;$/;"	v
checkClause	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    protected $checkClause;$/;"	v
checkEnvironment	.\Source\application\library\Zend\Db\Adapter\Driver\DriverInterface.php	/^    public function checkEnvironment();$/;"	f
checkEnvironment	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function checkEnvironment()$/;"	f
checkEnvironment	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function checkEnvironment()$/;"	f
checkEnvironment	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function checkEnvironment()$/;"	f
checkEnvironment	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function checkEnvironment()$/;"	f
checkEnvironment	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function checkEnvironment()$/;"	f
checkEnvironment	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function checkEnvironment()$/;"	f
checkFormat	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	protected function checkFormat($format)$/;"	f
checkOption	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^        $this->checkOption = $checkOption;$/;"	v
checkOption	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^    protected $checkOption;$/;"	v
checkTypes	.\Source\application\library\Zend\Validator\InArray.php	/^        $checkTypes = array($/;"	v
checked	.\Source\application\library\Zend\Validator\Hostname.php	/^                                    $checked = true;$/;"	v
checked	.\Source\application\library\Zend\Validator\Hostname.php	/^                        $checked = false;$/;"	v
checksum	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $checksum = $this->getChecksum();$/;"	v
checksum	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $checksum = ($calc === 0) ? 0 : (10 - $calc);$/;"	v
checksum	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $checksum = substr($value, -1, 1);$/;"	v
checksum	.\Source\application\library\Zend\Validator\Barcode\Code39.php	/^        $checksum = substr($value, -1, 1);$/;"	v
checksum	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^        $checksum = substr($value, -2, 2);$/;"	v
checksum	.\Source\application\library\Zend\Validator\Barcode\Identcode.php	/^    protected $checksum = 'identcode';$/;"	v
checksum	.\Source\application\library\Zend\Validator\Barcode\Issn.php	/^        $checksum = substr($value, -1, 1);$/;"	v
checksum	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^        $checksum = substr($value, -1, 1);$/;"	v
checksum	.\Source\application\library\Zend\Validator\Isbn.php	/^                    $checksum = '0';$/;"	v
checksum	.\Source\application\library\Zend\Validator\Isbn.php	/^                    $checksum = 'X';$/;"	v
checksum	.\Source\application\library\Zend\Validator\Isbn.php	/^                $checksum = 10 - ($sum % 10);$/;"	v
checksum	.\Source\application\library\Zend\Validator\Isbn.php	/^                $checksum = 11 - ($sum % 11);$/;"	v
childData	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^                    $childData = $this->ChildrenData[(string) $captureTo];$/;"	v
childData	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^                $childData = null;$/;"	v
chkvalue	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^        $chkvalue    = current($intersect);$/;"	v
choose	.\Source\application\library\vendor\symfony\translation\MessageSelector.php	/^    public function choose($message, $number, $locale)$/;"	f
chr128	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^    protected function chr128($value, $set)$/;"	f
chunk	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function chunk($count, callable $callback)$/;"	f
chunk	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function chunk($count, callable $callback)$/;"	f
chunk	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function chunk($size, $preserveKeys = false)$/;"	f
chunks	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^		$chunks = new static;$/;"	v
claim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\BasicTest.php	/^        $claim = new Basic('test', 1);$/;"	v
claim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\EqualsToTest.php	/^        $claim = new EqualsTo('iss', 'test');$/;"	v
claim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^        $claim = new Factory();$/;"	v
claim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\GreaterOrEqualsToTest.php	/^        $claim = new GreaterOrEqualsTo('iss', 10);$/;"	v
claim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\GreaterOrEqualsToTest.php	/^        $claim = new GreaterOrEqualsTo('iss', 11);$/;"	v
claim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\LesserOrEqualsToTest.php	/^        $claim = new LesserOrEqualsTo('iss', 10);$/;"	v
claim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\LesserOrEqualsToTest.php	/^        $claim = new LesserOrEqualsTo('iss', 11);$/;"	v
claimFactory	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^        $this->claimFactory = $claimFactory ?: new ClaimFactory();$/;"	v
claimFactory	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^        ClaimFactory $claimFactory = null$/;"	v
claimFactory	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    private $claimFactory;$/;"	v
claimFactory	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        $this->claimFactory = $claimFactory ?: new ClaimFactory();$/;"	v
claimFactory	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        ClaimFactory $claimFactory = null$/;"	v
claimFactory	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^    private $claimFactory;$/;"	v
claimFactory	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^        $this->claimFactory = $this->getMock(ClaimFactory::class, [], [], '', false);$/;"	v
claimFactory	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    protected $claimFactory;$/;"	v
claimFactory	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^        $this->claimFactory = $this->getMock(ClaimFactory::class, [], [], '', false);$/;"	v
claimFactory	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    protected $claimFactory;$/;"	v
claimValues	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    public function claimValues()$/;"	f
claims	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^        $this->claims = [];$/;"	v
claims	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    private $claims;$/;"	v
claims	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        $claims = $this->parseClaims($data[1]);$/;"	v
claims	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        $claims = (array) $this->decoder->jsonDecode($this->decoder->base64UrlDecode($data));$/;"	v
claims	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^        $this->claims = $claims;$/;"	v
claims	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^        array $claims = [],$/;"	v
claims	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    private $claims;$/;"	v
class	.\Source\application\Bootstrap.php	/^            $class = "{$m}\\\\Module";   $/;"	v
class	.\Source\application\library\Zend\Db\TableGateway\Feature\GlobalAdapterFeature.php	/^        $class = get_called_class();$/;"	v
class	.\Source\application\library\Zend\Session\Service\SessionConfigFactory.php	/^            $class = $config['config_class'];$/;"	v
class	.\Source\application\library\Zend\Session\Service\SessionConfigFactory.php	/^        $class  = 'Zend\\Session\\Config\\SessionConfig';$/;"	v
class	.\Source\application\library\Zend\Session\Storage\Factory.php	/^            $class = __NAMESPACE__ . '\\\\' . $type;$/;"	v
class	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^            $class = '\\\\' . $class;$/;"	v
class	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^        $class = $this->iteratorClass;$/;"	v
class	.\Source\application\library\vendor\composer\ClassLoader.php	/^            $class = substr($class, 1);$/;"	v
class	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RefreshCommand.php	/^		$class = $this->option('seeder') ?: 'DatabaseSeeder';$/;"	v
class	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^		$class = $this->laravel->make($this->input->getOption('class'));$/;"	v
class	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$class = get_called_class();$/;"	v
class	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$class = get_class($this);$/;"	v
class	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$class = studly_case($file);$/;"	v
class	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^		$class = static::normalizeClass($class);$/;"	v
class	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^		if ($class[0] == '\\\\') $class = substr($class, 1);$/;"	v
class	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^		$class = static::getMockableClass($name);$/;"	v
class	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^		$class = is_object($class) ? get_class($class) : $class;$/;"	v
class	.\Source\application\module\Index\Module.php	/^                \/\/             $class = isset($session['config']['class']) ? $session['config']['class'] : 'Zend\\Session\\Config\\SessionConfig';$/;"	v
classMap	.\Source\application\library\vendor\composer\ClassLoader.php	/^            $this->classMap = $classMap;$/;"	v
classMap	.\Source\application\library\vendor\composer\ClassLoader.php	/^            $this->classMap = array_merge($this->classMap, $classMap);$/;"	v
classMap	.\Source\application\library\vendor\composer\ClassLoader.php	/^    private $classMap = array();$/;"	v
classMap	.\Source\application\library\vendor\composer\autoload_real.php	/^            $classMap = require __DIR__ . '\/autoload_classmap.php';$/;"	v
classMapAuthoritative	.\Source\application\library\vendor\composer\ClassLoader.php	/^        $this->classMapAuthoritative = $classMapAuthoritative;$/;"	v
classMapAuthoritative	.\Source\application\library\vendor\composer\ClassLoader.php	/^    private $classMapAuthoritative = false;$/;"	v
className	.\Source\application\init_autoloader.php	/^            $className = "library\/".$className.".php";$/;"	v
className	.\Source\application\init_autoloader.php	/^            $className = "module\/".$className.".php";$/;"	v
className	.\Source\application\init_autoloader.php	/^            $className = "resource\/".$className.".php";$/;"	v
className	.\Source\application\init_autoloader.php	/^        $className = "\/".$className.".php";$/;"	v
className	.\Source\application\init_autoloader.php	/^        $className = lcfirst($className);        $/;"	v
className	.\Source\application\init_autoloader.php	/^    $className = str_replace("\\\\", "\/", $class);$/;"	v
className	.\Source\application\init_autoloader.php	/^    $className = str_replace("_", "\/", $className);$/;"	v
className	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^        $this->className = $className;$/;"	v
className	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^    protected $className;$/;"	v
className	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$className = get_class($class);$/;"	v
className	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$className = get_class($this);$/;"	v
className	.\Source\application\library\vendor\zendframework\zendxml\tests\Bootstrap.php	/^            $className = substr($className, $lastNsPos + 1);$/;"	v
className	.\Source\application\library\vendor\zendframework\zendxml\tests\Bootstrap.php	/^        $className = ltrim($className, '\\\\');$/;"	v
class_basename	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function class_basename($class)$/;"	f
class_uses_recursive	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function class_uses_recursive($class)$/;"	f
clauses	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^			$clauses = array();$/;"	v
clauses	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^			$clauses = implode(' ', $clauses);$/;"	v
clauses	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public $clauses = array();$/;"	v
clean	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^    public static function clean()$/;"	f
cleanBindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function cleanBindings(array $bindings)$/;"	f
cleanPivotAttributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function cleanPivotAttributes(Model $model)$/;"	f
clear	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function clear($key = null)$/;"	f
clear	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function clear($key = null)$/;"	f
clear	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^    public function clear($key = null);$/;"	f
clear	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function clear()$/;"	f
clearResolvedInstance	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	public static function clearResolvedInstance($name)$/;"	f
clearResolvedInstances	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	public static function clearResolvedInstances()$/;"	f
clob	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                        $clob = oci_new_descriptor($this->driver->getConnection()->getResource(), OCI_DTYPE_LOB);$/;"	v
clone	.\Source\application\library\Zend\Stdlib\SplPriorityQueue.php	/^        $clone = clone $this;$/;"	v
close	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    public function close()$/;"	f
close	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^    public function close()$/;"	f
close	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^    public function close()$/;"	f
close	.\Source\application\library\Zend\Session\SaveHandler\SaveHandlerInterface.php	/^    public function close();$/;"	f
close	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        $close       = $generator('>');$/;"	v
closePos	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        $closePos    = strpos($xml, $close);$/;"	v
closest	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function closest(Carbon $dt1, Carbon $dt2)$/;"	f
closure	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$closure = function ($q) use (&$closure, &$relations, $operator, $count, $boolean, $callback)$/;"	v
coName	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^            foreach ($columnOptions as $coName => $coValue) {$/;"	v
coName	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^            foreach ($columnOptions as $coName => $coValue) {$/;"	v
code	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                $code = null;$/;"	v
code	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^            $code = $e->getCode();$/;"	v
code	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            foreach ($this->getHostnameValidator()->getMessages() as $code => $message) {$/;"	v
code	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^		$this->code = $previous->getCode();$/;"	v
code	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\SerializableClosure.php	/^	protected $code;$/;"	v
code128	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^    protected function code128($value)$/;"	f
code25	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    protected function code25($value)$/;"	f
code39	.\Source\application\library\Zend\Validator\Barcode\Code39.php	/^    protected function code39($value)$/;"	f
code93	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^    protected function code93($value)$/;"	f
codeCoverageFilter	.\Source\application\library\vendor\zendframework\zendxml\tests\Bootstrap.php	/^    $codeCoverageFilter = new PHP_CodeCoverage_Filter();$/;"	v
col	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^                            $col = (!empty($j['columns'])) ? $j['columns'] : null;$/;"	v
col	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^                        $col = (!empty($j['columns'])) ? $j['columns'] : null;$/;"	v
colCount	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^        $colCount = count($this->columns);$/;"	v
colCount	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^        $colCount     = count($this->referenceColumn);$/;"	v
colCount	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^        $colCount     = count($this->columns);$/;"	v
colchkvalue	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^        $colchkvalue = array_keys($this->columns, $colvalue);$/;"	v
collapse	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function collapse()$/;"	f
collation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\MySqlConnector.php	/^		$collation = $config['collation'];$/;"	v
collect	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    public function collect(Request $request, Response $response, \\Exception $exception = null)$/;"	f
collectMessage	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    private function collectMessage($locale, $domain, $id, $translation, $parameters = array(), $number = null)$/;"	f
collectedMessages	.\Source\application\library\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php	/^        $collectedMessages = array($/;"	v
collection	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $collection = (string) $collection;$/;"	v
collection	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $this->collection = $collection;$/;"	v
collection	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    protected $collection;$/;"	v
collection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$collection = with($instance = new static)->newCollection();$/;"	v
collection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^				$collection = $this->related->newCollection($dictionary[$key]);$/;"	v
collector	.\Source\application\library\vendor\symfony\translation\Tests\DataCollectorTranslatorTest.php	/^        $collector = $this->createCollector();$/;"	v
collector	.\Source\application\library\vendor\symfony\translation\Tests\DataCollectorTranslatorTest.php	/^        $collector = new DataCollectorTranslator($translator);$/;"	v
colonCount	.\Source\application\library\Zend\Validator\Ip.php	/^        $colonCount = substr_count($value, ':');$/;"	v
column	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $column = new Object\\ColumnObject($columnName, $table, $schema);$/;"	v
column	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            $column = $column['column'];$/;"	v
column	.\Source\application\library\Zend\Db\Sql\Insert.php	/^            foreach ($values as $column=>$value) {$/;"	v
column	.\Source\application\library\Zend\Db\Sql\Insert.php	/^        foreach ($this->columns as $column=>$value) {$/;"	v
column	.\Source\application\library\Zend\Db\Sql\Update.php	/^        foreach ($this->set as $column => $value) {$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$column = $this->model->getUpdatedAtColumn();$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^		$column = $this->getRelated()->getUpdatedAtColumn();$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^				$column => $builder->getModel()->freshTimestampString()$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^			$column = $this->getDeletedAtColumn($builder);$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^		$column = $builder->getModel()->getQualifiedDeletedAtColumn();$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^		$column = $instance->getQualifiedDeletedAtColumn();$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$column = is_array($column) ? $column : func_get_args();$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^			$column = 'distinct '.$column;$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$column = $this->columnize($aggregate['columns']);$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$column = $this->wrap($having['column']);$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^		$this->columns[] = $column = new Fluent($attributes);$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^		$column = strtolower($column);$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$column = $connection->getDoctrineColumn($table, $command->from);$/;"	v
column	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^			$column = $connection->getDoctrineColumn($blueprint->getTable(), $name);$/;"	v
columnA	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^        $columnA = $this->normalizeColumnOption($columnA);$/;"	v
columnA	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^        $columnA = isset($this->columnOptionSortOrder[$columnA])$/;"	v
columnA	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^        $columnA = $this->normalizeColumnOption($columnA);$/;"	v
columnA	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^        $columnA = isset($this->columnOptionSortOrder[$columnA])$/;"	v
columnAs	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $columnAs = $platform->quoteIdentifier($columnIndexOrAs);$/;"	v
columnAs	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $columnAs = (is_string($column)) ? $platform->quoteIdentifier($column) : 'Expression' . $expr++;$/;"	v
columnB	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^        $columnB = $this->normalizeColumnOption($columnB);$/;"	v
columnB	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^        $columnB = isset($this->columnOptionSortOrder[$columnB])$/;"	v
columnB	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^        $columnB = $this->normalizeColumnOption($columnB);$/;"	v
columnB	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^        $columnB = isset($this->columnOptionSortOrder[$columnB])$/;"	v
columnDefault	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        $this->columnDefault = $columnDefault;$/;"	v
columnDefault	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $columnDefault = null;$/;"	v
columnIndexOrAs	.\Source\application\library\Zend\Db\Sql\Select.php	/^        foreach ($this->columns as $columnIndexOrAs => $column) {$/;"	v
columnName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^        $this->columnName = $columnName;$/;"	v
columnName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    protected $columnName = null;$/;"	v
columnName	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $columnName = $this->resolveColumnValue($/;"	v
columnOptionSortOrder	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^    protected $columnOptionSortOrder = array($/;"	v
columnOptionSortOrder	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^    protected $columnOptionSortOrder = array($/;"	v
columnOptions	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^            $columnOptions = $column->getOptions();$/;"	v
columnOptions	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^            $columnOptions = $column->getOptions();$/;"	v
columnSpecification	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    protected $columnSpecification = ' (%s)';$/;"	v
columnSpecification	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    protected $columnSpecification = 'FOREIGN KEY (%s) ';$/;"	v
columnize	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	public function columnize(array $columns)$/;"	f
columns	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^        $this->columns = $columns;$/;"	v
columns	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    protected $columns = null;$/;"	v
columns	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^        $this->columns = $columns;$/;"	v
columns	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    protected $columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^        $columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        $columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        $columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^        $this->columns = (array) $columns;$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    protected $columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected $columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Insert.php	/^            $this->columns = $values;$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Insert.php	/^        $columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Insert.php	/^        $columns = array_map(array($platform, 'quoteIdentifier'), array_keys($this->columns));$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Insert.php	/^        $columns = implode(', ', $columns);$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Insert.php	/^        $this->columns = array_flip($columns);$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    protected $columns          = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    public function columns(array $columns)$/;"	f
columns	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $this->columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $columns = array($columns);$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $this->columns = $columns;$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $columns = array(self::SQL_STAR);$/;"	v
columns	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function columns(array $columns, $prefixColumnsWithTable = true)$/;"	f
columns	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function join($name, $on, $columns = self::SQL_STAR, $type = self::JOIN_INNER)$/;"	v
columns	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    protected $columns = array();$/;"	v
columns	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^        $columns = $m->getColumnNames($t->table);$/;"	v
columns	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^        $columns = $insert->getRawState('columns');$/;"	v
columns	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^    protected $columns = array($/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function find($id, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function findMany($id, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function findOrFail($id, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function paginate($perPage = null, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function simplePaginate($perPage = null, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function find($id, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function findOrFail($id, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function findOrNew($id, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^			$columns = array($this->related->getTable().'.*');$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$columns = $this->getRelatedFreshUpdate();$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$columns = $this->query->getQuery()->columns ? array() : $columns;$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$columns = array();$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$columns = is_array($columns) ? $columns : func_get_args();$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function getSelectColumns(array $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function paginate($perPage = null, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^			$columns = array($this->related->getTable().'.*');$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	protected function getSelectColumns(array $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	public function paginate($perPage = null, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^			$columns = array($columns);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$columns = $this->getListSelect($column, $key);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$columns = array_merge(array($column => $this->raw("$wrapped + $amount")), $extra);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$columns = array_merge(array($column => $this->raw("$wrapped - $amount")), $extra);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->columns = $previousColumns;$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->columns = array_merge((array) $this->columns, $column);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->columns = is_array($columns) ? $columns : func_get_args();$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		if (is_null($this->columns)) $this->columns = $columns;$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $columns;$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function aggregate($function, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function find($id, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function paginate($perPage = 15, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function simplePaginate($perPage = null, $columns = array('*'))$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$columns = $this->columnize(array_keys(reset($values)));$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$columns = array();$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$columns = implode(', ', $columns);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^		$columns = $this->compileUpdateColumns($values);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^		$columns = array();$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^		$columns = array();$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^		$columns = array_fill(0, count($values), implode(', ', $columns));$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^			$columns = $index;$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^		$columns = (array) $columns;$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^		$columns = array();$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^		$columns = is_array($columns) ? $columns : (array) func_get_args();$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^		$this->columns = array_values(array_filter($this->columns, function($c) use ($name)$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected $columns = array();$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$columns = $this->columnize($command->columns);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$columns = array();$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^		$columns = $this->columnize($command->columns);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^		$columns = $this->prefixArray('add', $this->getColumns($blueprint));$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^		$columns = $this->prefixArray('drop', $this->wrapArray($command->columns));$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^		$columns = implode(', ', $this->getColumns($blueprint));$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^		$columns = $this->columnize($command->columns);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^		$columns = $this->prefixArray('add column', $this->getColumns($blueprint));$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^		$columns = $this->prefixArray('drop column', $this->wrapArray($command->columns));$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^		$columns = implode(', ', $this->getColumns($blueprint));$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^			$columns = $this->columnize($primary->columns);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$columns = $this->columnize($command->columns);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$columns = $this->columnize($foreign->columns);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$columns = $this->prefixArray('add column', $this->getColumns($blueprint));$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$columns = implode(', ', $this->getColumns($blueprint));$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^		$columns = $this->columnize($command->columns);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^		$columns = $this->getColumns($blueprint);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^		$columns = $this->wrapArray($command->columns);$/;"	v
columns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^		$columns = implode(', ', $this->getColumns($blueprint));$/;"	v
colvalue	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^        $colvalue = 0;$/;"	v
combination	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    public function where($predicate, $combination = Predicate\\PredicateSet::OP_AND)$/;"	v
combination	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^            $combination = $this->defaultCombination;$/;"	v
combination	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    public function addPredicate(PredicateInterface $predicate, $combination = null)$/;"	v
combination	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    public function addPredicates($predicates, $combination = self::OP_AND)$/;"	v
combination	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function having($predicate, $combination = Predicate\\PredicateSet::OP_AND)$/;"	v
combination	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function where($predicate, $combination = Predicate\\PredicateSet::OP_AND)$/;"	v
combination	.\Source\application\library\Zend\Db\Sql\Update.php	/^    public function where($predicate, $combination = Predicate\\PredicateSet::OP_AND)$/;"	v
combine	.\Source\application\library\Zend\Db\Sql\Combine.php	/^                    $combine = array($combine);$/;"	v
combine	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    private $combine = array();$/;"	v
combine	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    public function combine($select, $type = self::COMBINE_UNION, $modifier = '')$/;"	f
combine	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $this->combine = array();$/;"	v
combine	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $this->combine = array($/;"	v
combine	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $combine = array();$/;"	v
combine	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function combine(Select $select, $type = self::COMBINE_UNION, $modifier = '')$/;"	f
combineColumns	.\Source\application\library\Zend\Db\Sql\Combine.php	/^            $combineColumns = $combine['select']->getRawState(self::COLUMNS);$/;"	v
command	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^		$this->commands[] = $command = $this->createCommand($name, $parameters);$/;"	v
command	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Seeder.php	/^		$this->command = $command;$/;"	v
command	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Seeder.php	/^	protected $command;$/;"	v
commands	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^		$commands = array('Migrate', 'Rollback', 'Reset', 'Refresh', 'Install', 'Make');$/;"	v
commands	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected $commands = array();$/;"	v
commands	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$commands = $this->getCommandsByName($blueprint, $name);$/;"	v
commands	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^		$commands = is_array($commands) ? $commands : func_get_args();$/;"	v
commands	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	public function commands($commands)$/;"	f
commit	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public function commit()$/;"	f
commit	.\Source\application\library\Zend\Db\Adapter\Driver\ConnectionInterface.php	/^    public function commit();$/;"	f
commit	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    public function commit()$/;"	f
commit	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    public function commit()$/;"	f
commit	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    public function commit()$/;"	f
commit	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function commit()$/;"	f
commit	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    public function commit()$/;"	f
commit	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function commit()$/;"	f
commit	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function commit()$/;"	f
commit	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function commit();$/;"	f
compare	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    protected function compare(array $item1, array $item2)$/;"	f
compareColumnOptions	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^    public function compareColumnOptions($columnA, $columnB)$/;"	f
compareColumnOptions	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^    public function compareColumnOptions($columnA, $columnB)$/;"	f
compileAdd	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileAdd(Blueprint $blueprint, Fluent $command)$/;"	f
compileAdd	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileAdd(Blueprint $blueprint, Fluent $command)$/;"	f
compileAdd	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileAdd(Blueprint $blueprint, Fluent $command)$/;"	f
compileAdd	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileAdd(Blueprint $blueprint, Fluent $command)$/;"	f
compileAggregate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileAggregate(Builder $query, $aggregate)$/;"	f
compileAnsiOffset	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	protected function compileAnsiOffset(Builder $query, $components)$/;"	f
compileBasicHaving	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileBasicHaving($having)$/;"	f
compileColumnExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileColumnExists()$/;"	f
compileColumnExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileColumnExists($table)$/;"	f
compileColumnExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileColumnExists($table)$/;"	f
compileColumnExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileColumnExists($table)$/;"	f
compileColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileColumns(Builder $query, $columns)$/;"	f
compileColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	protected function compileColumns(Builder $query, $columns)$/;"	f
compileComponents	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileComponents(Builder $query)$/;"	f
compileCreate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileCreate(Blueprint $blueprint, Fluent $command, Connection $connection)$/;"	f
compileCreate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileCreate(Blueprint $blueprint, Fluent $command)$/;"	f
compileCreate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileCreate(Blueprint $blueprint, Fluent $command)$/;"	f
compileCreate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileCreate(Blueprint $blueprint, Fluent $command)$/;"	f
compileCreateEncoding	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function compileCreateEncoding($sql, Connection $connection)$/;"	f
compileDelete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	public function compileDelete(Builder $query)$/;"	f
compileDelete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^	public function compileDelete(Builder $query)$/;"	f
compileDrop	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileDrop(Blueprint $blueprint, Fluent $command)$/;"	f
compileDrop	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileDrop(Blueprint $blueprint, Fluent $command)$/;"	f
compileDrop	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileDrop(Blueprint $blueprint, Fluent $command)$/;"	f
compileDrop	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileDrop(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileDropColumn(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileDropColumn(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileDropColumn(Blueprint $blueprint, Fluent $command, Connection $connection)$/;"	f
compileDropColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileDropColumn(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropForeign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileDropForeign(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropForeign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileDropForeign(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropForeign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileDropForeign(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropIfExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileDropIfExists(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropIfExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileDropIfExists(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropIfExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileDropIfExists(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropIndex	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileDropIndex(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropIndex	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileDropIndex(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropIndex	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileDropIndex(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropIndex	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileDropIndex(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropPrimary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileDropPrimary(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropPrimary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileDropPrimary(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropPrimary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileDropPrimary(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropUnique	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileDropUnique(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropUnique	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileDropUnique(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropUnique	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileDropUnique(Blueprint $blueprint, Fluent $command)$/;"	f
compileDropUnique	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileDropUnique(Blueprint $blueprint, Fluent $command)$/;"	f
compileForeign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	public function compileForeign(Blueprint $blueprint, Fluent $command)$/;"	f
compileForeign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileForeign(Blueprint $blueprint, Fluent $command)$/;"	f
compileFrom	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileFrom(Builder $query, $table)$/;"	f
compileFrom	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	protected function compileFrom(Builder $query, $table)$/;"	f
compileGroups	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileGroups(Builder $query, $groups)$/;"	f
compileHaving	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileHaving(array $having)$/;"	f
compileHavings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileHavings(Builder $query, $havings)$/;"	f
compileIndex	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileIndex(Blueprint $blueprint, Fluent $command)$/;"	f
compileIndex	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileIndex(Blueprint $blueprint, Fluent $command)$/;"	f
compileIndex	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileIndex(Blueprint $blueprint, Fluent $command)$/;"	f
compileIndex	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileIndex(Blueprint $blueprint, Fluent $command)$/;"	f
compileInsert	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	public function compileInsert(Builder $query, array $values)$/;"	f
compileInsert	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^	public function compileInsert(Builder $query, array $values)$/;"	f
compileInsertGetId	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	public function compileInsertGetId(Builder $query, $values, $sequence)$/;"	f
compileInsertGetId	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^	public function compileInsertGetId(Builder $query, $values, $sequence)$/;"	f
compileJoinConstraint	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileJoinConstraint(array $clause)$/;"	f
compileJoins	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileJoins(Builder $query, $joins)$/;"	f
compileKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function compileKey(Blueprint $blueprint, Fluent $command, $type)$/;"	f
compileLimit	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileLimit(Builder $query, $limit)$/;"	f
compileLimit	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	protected function compileLimit(Builder $query, $limit)$/;"	f
compileLock	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileLock(Builder $query, $value)$/;"	f
compileLock	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^	protected function compileLock(Builder $query, $value)$/;"	f
compileLock	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^	protected function compileLock(Builder $query, $value)$/;"	f
compileOffset	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileOffset(Builder $query, $offset)$/;"	f
compileOffset	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	protected function compileOffset(Builder $query, $offset)$/;"	f
compileOrders	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileOrders(Builder $query, $orders)$/;"	f
compileOver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	protected function compileOver($orderings)$/;"	f
compilePrimary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compilePrimary(Blueprint $blueprint, Fluent $command)$/;"	f
compilePrimary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compilePrimary(Blueprint $blueprint, Fluent $command)$/;"	f
compilePrimary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compilePrimary(Blueprint $blueprint, Fluent $command)$/;"	f
compileRename	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileRename(Blueprint $blueprint, Fluent $command)$/;"	f
compileRename	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileRename(Blueprint $blueprint, Fluent $command)$/;"	f
compileRename	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileRename(Blueprint $blueprint, Fluent $command)$/;"	f
compileRename	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileRename(Blueprint $blueprint, Fluent $command)$/;"	f
compileRenameColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	public function compileRenameColumn(Blueprint $blueprint, Fluent $command, Connection $connection)$/;"	f
compileRowConstraint	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	protected function compileRowConstraint($query)$/;"	f
compileSelect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	public function compileSelect(Builder $query)$/;"	f
compileSelect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^	public function compileSelect(Builder $query)$/;"	f
compileSelect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	public function compileSelect(Builder $query)$/;"	f
compileTableExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileTableExists()$/;"	f
compileTableExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileTableExists()$/;"	f
compileTableExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileTableExists()$/;"	f
compileTableExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileTableExists()$/;"	f
compileTableExpression	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	protected function compileTableExpression($sql, $constraint)$/;"	f
compileTruncate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	public function compileTruncate(Builder $query)$/;"	f
compileTruncate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^	public function compileTruncate(Builder $query)$/;"	f
compileTruncate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^	public function compileTruncate(Builder $query)$/;"	f
compileTruncate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	public function compileTruncate(Builder $query)$/;"	f
compileUnion	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileUnion(array $union)$/;"	f
compileUnion	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^	protected function compileUnion(array $union)$/;"	f
compileUnions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileUnions(Builder $query)$/;"	f
compileUnique	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	public function compileUnique(Blueprint $blueprint, Fluent $command)$/;"	f
compileUnique	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	public function compileUnique(Blueprint $blueprint, Fluent $command)$/;"	f
compileUnique	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	public function compileUnique(Blueprint $blueprint, Fluent $command)$/;"	f
compileUnique	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	public function compileUnique(Blueprint $blueprint, Fluent $command)$/;"	f
compileUpdate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	public function compileUpdate(Builder $query, $values)$/;"	f
compileUpdate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^	public function compileUpdate(Builder $query, $values)$/;"	f
compileUpdate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^	public function compileUpdate(Builder $query, $values)$/;"	f
compileUpdateColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^	protected function compileUpdateColumns($values)$/;"	f
compileUpdateFrom	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^	protected function compileUpdateFrom(Builder $query)$/;"	f
compileUpdateJoinWheres	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^	protected function compileUpdateJoinWheres(Builder $query)$/;"	f
compileUpdateWheres	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^	protected function compileUpdateWheres(Builder $query)$/;"	f
compileWheres	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function compileWheres(Builder $query)$/;"	f
components	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^		$components = $this->compileComponents($query);$/;"	v
composerRequire9ce445a4f92bda8f8ef4d37e4296111f	.\Source\application\library\vendor\composer\autoload_real.php	/^function composerRequire9ce445a4f92bda8f8ef4d37e4296111f($fileIdentifier, $file)$/;"	f
computeCount	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    private function computeCount($messages)$/;"	f
computeDiffMinSeconds	.\Source\application\library\Zend\Validator\DateStep.php	/^    private function computeDiffMinSeconds(array $diffParts)$/;"	f
computeFallbackLocales	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    protected function computeFallbackLocales($locale)$/;"	f
computeIntervalMaxSeconds	.\Source\application\library\Zend\Validator\DateStep.php	/^    private function computeIntervalMaxSeconds(array $intervalParts)$/;"	f
computeMinStepAndRequiredIterations	.\Source\application\library\Zend\Validator\DateStep.php	/^    private function computeMinStepAndRequiredIterations(array $intervalParts, array $diffParts)$/;"	f
computeMinSteps	.\Source\application\library\Zend\Validator\DateStep.php	/^    private function computeMinSteps(array $intervalParts, array $diffParts)$/;"	f
computeMinimumInterval	.\Source\application\library\Zend\Validator\DateStep.php	/^    private function computeMinimumInterval(array $intervalParts, $minSteps)$/;"	f
concatenate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function concatenate($segments)$/;"	f
concrete	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			$concrete = $abstract;$/;"	v
concrete	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			$concrete = $this->getClosure($abstract, $concrete);$/;"	v
concrete	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$concrete = $this->getConcrete($abstract);$/;"	v
concrete	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		return $concrete === $abstract || $concrete instanceof Closure;$/;"	v
concrete	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function bind($abstract, $concrete = null, $shared = false)$/;"	v
concrete	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function bindIf($abstract, $concrete = null, $shared = false)$/;"	v
concrete	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function singleton($abstract, $concrete = null)$/;"	v
condition	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function addFilter($name, $filter, $condition = FilterComposite::CONDITION_OR)$/;"	v
condition	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    public function addFilter($name, $filter, $condition = FilterComposite::CONDITION_OR)$/;"	v
condition	.\Source\application\library\Zend\Stdlib\Hydrator\FilterEnabledInterface.php	/^    public function addFilter($name, $filter, $condition = FilterComposite::CONDITION_OR);$/;"	v
condition	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^    public function addFilter($name, $filter, $condition = self::CONDITION_OR)$/;"	v
config	.\Source\application\Bootstrap.php	/^                    $config = $sm->get("config");$/;"	v
config	.\Source\application\Bootstrap.php	/^        $config = $this->app->config;$/;"	v
config	.\Source\application\library\Alpaca\MVC\Application.php	/^        $this->config = $config;$/;"	v
config	.\Source\application\library\Alpaca\MVC\Application.php	/^    private static function getInstance(array $config = null)$/;"	v
config	.\Source\application\library\Alpaca\MVC\Application.php	/^    public $config;    $/;"	v
config	.\Source\application\library\Alpaca\MVC\Application.php	/^    public function __construct(array $config = null)$/;"	v
config	.\Source\application\library\Alpaca\MVC\Application.php	/^    public static function app(array $config = null)$/;"	v
config	.\Source\application\library\Zend\Db\Adapter\AdapterAbstractServiceFactory.php	/^            $this->config = array();$/;"	v
config	.\Source\application\library\Zend\Db\Adapter\AdapterAbstractServiceFactory.php	/^        $config = $config['db'];$/;"	v
config	.\Source\application\library\Zend\Db\Adapter\AdapterAbstractServiceFactory.php	/^        $config = $services->get('Config');$/;"	v
config	.\Source\application\library\Zend\Db\Adapter\AdapterAbstractServiceFactory.php	/^        $config = $this->getConfig($services);$/;"	v
config	.\Source\application\library\Zend\Db\Adapter\AdapterAbstractServiceFactory.php	/^        $this->config = $config['adapters'];$/;"	v
config	.\Source\application\library\Zend\Db\Adapter\AdapterAbstractServiceFactory.php	/^    protected $config;$/;"	v
config	.\Source\application\library\Zend\Db\Adapter\AdapterServiceFactory.php	/^        $config = $serviceLocator->get('Config');$/;"	v
config	.\Source\application\library\Zend\Session\AbstractManager.php	/^            $config = new $this->defaultConfigClass();$/;"	v
config	.\Source\application\library\Zend\Session\AbstractManager.php	/^        $this->config = $config;$/;"	v
config	.\Source\application\library\Zend\Session\AbstractManager.php	/^        Config $config = null,$/;"	v
config	.\Source\application\library\Zend\Session\AbstractManager.php	/^    protected $config;$/;"	v
config	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^            $this->config = array();$/;"	v
config	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^        $config = $config[$this->configKey];$/;"	v
config	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^        $config = $services->get('Config');$/;"	v
config	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^        $config = $this->getConfig($services);$/;"	v
config	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^        $config = array_flip($config);$/;"	v
config	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^        $this->config = array_change_key_case($config);$/;"	v
config	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^    protected $config;$/;"	v
config	.\Source\application\library\Zend\Session\Service\SessionConfigFactory.php	/^        $config = $config['session_config'];$/;"	v
config	.\Source\application\library\Zend\Session\Service\SessionConfigFactory.php	/^        $config = $services->get('Config');$/;"	v
config	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^            $config = $services->get('Zend\\Session\\Config\\ConfigInterface');$/;"	v
config	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^        $config        = null;$/;"	v
config	.\Source\application\library\Zend\Session\Service\StorageFactory.php	/^        $config = $config['session_storage'];$/;"	v
config	.\Source\application\library\Zend\Session\Service\StorageFactory.php	/^        $config = $services->get('Config');$/;"	v
config	.\Source\application\library\Zend\Session\SessionManager.php	/^        $config = $this->getConfig();$/;"	v
config	.\Source\application\library\Zend\Session\SessionManager.php	/^        Config\\ConfigInterface $config = null,$/;"	v
config	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->config = $config;$/;"	v
config	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $config = array();$/;"	v
config	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^		$config = $this->parseConfig($config, $name);$/;"	v
config	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^		$config = $this->getConfig($name);$/;"	v
config	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^		$config = $path.'\/config';$/;"	v
config	.\Source\application\module\Index\Module.php	/^                \/\/     $config =\\Yaf_Registry::get('config');$/;"	v
config	.\Source\application\service\JwtAuth\JwtManager.php	/^			$this->config = array_merge($this->config,$data);$/;"	v
config	.\Source\application\service\JwtAuth\JwtManager.php	/^		$config = ServerManager::factory()->get('config');	 	$/;"	v
config	.\Source\application\service\JwtAuth\JwtManager.php	/^		$this->config = $config['jwt'];$/;"	v
config	.\Source\application\service\JwtAuth\JwtManager.php	/^	protected $config = []; $/;"	v
config	.\Source\public\index.php	/^$config = require APP_PATH."\/conf\/config.php";$/;"	v
configCacheFactory	.\Source\application\library\vendor\symfony\translation\Translator.php	/^            $this->configCacheFactory = new ConfigCacheFactory($this->debug);$/;"	v
configCacheFactory	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $this->configCacheFactory = $configCacheFactory;$/;"	v
configCacheFactory	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private $configCacheFactory;$/;"	v
configHasSocket	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\MySqlConnector.php	/^	protected function configHasSocket(array $config)$/;"	f
configKey	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^    protected $configKey = 'session_containers';$/;"	v
configService	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^            $configService = $services->get('Config');$/;"	v
configuration	.\Source\application\library\Zend\Validator\ValidatorPluginManager.php	/^    public function __construct(ConfigInterface $configuration = null)$/;"	v
configureRootDir	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeyTest.php	/^    public function configureRootDir()$/;"	f
conn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$conn = $this->getConnection();$/;"	v
connect	.\Source\application\library\Zend\Db\Adapter\Driver\ConnectionInterface.php	/^    public function connect();$/;"	f
connect	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $connect      = ((bool) $isPersistent) ? 'db2_pconnect' : 'db2_connect';$/;"	v
connect	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    public function connect()$/;"	f
connect	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    public function connect()$/;"	f
connect	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    public function connect()$/;"	f
connect	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function connect()$/;"	f
connect	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    public function connect()$/;"	f
connect	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function connect()$/;"	f
connect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectorInterface.php	/^	public function connect(array $config);$/;"	f
connect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\MySqlConnector.php	/^	public function connect(array $config)$/;"	f
connect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\PostgresConnector.php	/^	public function connect(array $config)$/;"	f
connect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SQLiteConnector.php	/^	public function connect(array $config)$/;"	f
connect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SqlServerConnector.php	/^	public function connect(array $config)$/;"	f
connection	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^            $connection = new Connection($connection);$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^        $this->connection = $connection;$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    protected $connection;$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^            $connection = new Connection($connection);$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^        $this->connection = $connection;$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    protected $connection = null;$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^            $connection = new Connection($connection);$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^        $this->connection = $connection;$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    protected $connection = null;$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^            $connection = new Connection($connection);$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^        $this->connection = $connection;$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    protected $connection = null;$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $connection = $this->getConnectionString();$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^            $connection = new Connection($connection);$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^        $this->connection = $connection;$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    protected $connection = null;$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^            $connection = new Connection($connection);$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^        $this->connection = $connection;$/;"	v
connection	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    protected $connection = null;$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public static function connection($connection = null)$/;"	f
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public static function table($table, $connection = null)$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^	public function connection($name = null)$/;"	f
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolverInterface.php	/^	public function connection($name = null);$/;"	f
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^		$connection = $this->createSingleConnection($this->getWriteConfig($config));$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\MySqlConnector.php	/^		$connection = $this->createConnection($dsn, $config, $options);$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\PostgresConnector.php	/^		$connection = $this->createConnection($dsn, $config, $options);$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^			$connection = $this->makeConnection($name);$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	public function connection($name = null)$/;"	f
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$connection = $this->model->getConnectionName();$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->connection = $name;$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $connection;$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function hydrate(array $items, $connection = null)$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^		$this->connection = $name;$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	protected $connection;$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migration.php	/^	protected $connection;$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$connection = $migration->getConnection();$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$this->connection = $name;$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	protected $connection;$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->connection = $connection;$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected $connection;$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^		$this->connection = $connection;$/;"	v
connection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	protected $connection;$/;"	v
connection	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Schema.php	/^	public static function connection($name)$/;"	f
connectionParameters	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^        $this->connectionParameters = $connectionParameters;$/;"	v
connectionParameters	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    protected $connectionParameters = array();$/;"	v
connectionParameters	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $this->connectionParameters = $connectionParameters;$/;"	v
connectionParameters	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $connectionParameters = array($/;"	v
connectionString	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $connectionString = $findParameterValue(array('connection_string', 'connectionstring', 'connection', 'hostname', 'instance'));$/;"	v
connections	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^		$connections = $this->container['config']['database.connections'];$/;"	v
connections	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^	protected $connections = array();$/;"	v
connections	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^	public function __construct(array $connections = array())$/;"	v
connections	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^		$connections = $this->app['config']['database.connections'];$/;"	v
connections	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	protected $connections = array();$/;"	v
connector	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^				$connector = $segment;$/;"	v
connector	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$connector = 'and';$/;"	v
constants	.\Source\application\library\Zend\Validator\NotEmpty.php	/^    protected $constants = array($/;"	v
constants	.\Source\application\library\Zend\Validator\Timezone.php	/^    protected $constants = array($/;"	v
constraint	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $constraint = new Object\\ConstraintObject($constraintName, $table, $schema);$/;"	v
constraint	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^            $constraint = array($/;"	v
constraint	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^		$constraint = $this->compileRowConstraint($query);$/;"	v
constraintName	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^            $constraintName = '_zf_' . $table . '_PRIMARY';$/;"	v
constraintTypeMap	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^    protected $constraintTypeMap = array($/;"	v
constraints	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^        $this->constraints = $constraints;$/;"	v
constraints	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    protected $constraints = null;$/;"	v
constraints	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $constraints = array();$/;"	v
constraints	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^        $constraints = array();$/;"	v
constraints	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $constraints = array();$/;"	v
constraints	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        $constraints = array();$/;"	v
constraints	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        $constraints = array();$/;"	v
constraints	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $constraints = array();$/;"	v
constraints	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    protected $constraints = array();$/;"	v
constraints	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected $constraints = array();$/;"	v
constraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	protected static $constraints = true;$/;"	v
constructMustConfigureTheAttributes	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    public function constructMustConfigureTheAttributes()$/;"	f
constructMustConfigureTheCallbacks	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^    public function constructMustConfigureTheCallbacks()$/;"	f
constructMustInitializeAnEmptyPlainTextTokenWhenNoArgumentsArePassed	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function constructMustInitializeAnEmptyPlainTextTokenWhenNoArgumentsArePassed()$/;"	f
constructMustInitializeTheAttributes	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function constructMustInitializeTheAttributes()$/;"	f
constructShouldBeAbleToConfigureContentFromFile	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeyTest.php	/^    public function constructShouldBeAbleToConfigureContentFromFile()$/;"	f
constructShouldConfigureContentAndPassphrase	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeyTest.php	/^    public function constructShouldConfigureContentAndPassphrase()$/;"	f
constructShouldConfigureDependencies	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^    public function constructShouldConfigureDependencies()$/;"	f
constructShouldConfigureDependencies	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^    public function constructShouldConfigureDependencies()$/;"	f
constructShouldRaiseExceptionWhenFileDoesNotExists	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeyTest.php	/^    public function constructShouldRaiseExceptionWhenFileDoesNotExists()$/;"	f
constructor	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$constructor = $reflector->getConstructor();$/;"	v
constructorArguments	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^        $this->constructorArguments = func_get_args();$/;"	v
constructorArguments	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^    protected $constructorArguments = array();$/;"	v
constructorMustConfigureAttributes	.\Source\application\library\vendor\lcobucci\jwt\test\unit\SignatureTest.php	/^    public function constructorMustConfigureAttributes()$/;"	f
constructorShouldConfigureTheAttributes	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\BasicTest.php	/^    public function constructorShouldConfigureTheAttributes()$/;"	f
constructorShouldConfigureTheItems	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    public function constructorShouldConfigureTheItems()$/;"	f
container	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $container = $this;$/;"	v
container	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $container = $storage[$this->getName()];$/;"	v
container	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^ * $container = $services->get('MySessionContainer');$/;"	v
container	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public function __construct(Container $container = null)$/;"	v
container	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^		$this->container = $container;$/;"	v
container	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	protected $container;$/;"	v
container	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Seeder.php	/^		$this->container = $container;$/;"	v
container	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Seeder.php	/^	protected $container;$/;"	v
container	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^		$container = $this->container;$/;"	v
container	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^		$this->container = $container ?: new Container;$/;"	v
container	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	protected $container;$/;"	v
container	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function __construct(Container $container = null)$/;"	v
container	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\CapsuleManagerTrait.php	/^		$this->container = $container ?: new Container;$/;"	v
container	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\CapsuleManagerTrait.php	/^		$this->container = $container;$/;"	v
container	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\CapsuleManagerTrait.php	/^	protected $container;$/;"	v
containerName	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^        $containerName = $this->normalizeContainerName($requestedName);$/;"	v
contains	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function contains($datum)$/;"	f
contains	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function contains($key)$/;"	f
contains	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function contains($value)$/;"	f
contains	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function contains($haystack, $needles)$/;"	f
content	.\Source\application\library\Zend\Stdlib\Message.php	/^        $this->content = $value;$/;"	v
content	.\Source\application\library\Zend\Stdlib\Message.php	/^    protected $content = '';$/;"	v
content	.\Source\application\library\Zend\Validator\File\WordCount.php	/^        $content     = file_get_contents($file);$/;"	v
content	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^            $content = $this->readFile($content);$/;"	v
content	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^        $this->content = $content;$/;"	v
content	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^    private $content;$/;"	v
content	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $content = sprintf(<<<EOF$/;"	v
context	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function createResult($resource, $context = null)$/;"	v
context	.\Source\application\library\Zend\Session\ValidatorChain.php	/^                $context = $test;$/;"	v
context	.\Source\application\library\Zend\Session\ValidatorChain.php	/^            $context = $callback;$/;"	v
context	.\Source\application\library\Zend\Session\ValidatorChain.php	/^        $context = null;$/;"	v
context	.\Source\application\library\Zend\Validator\Callback.php	/^    public function isValid($value, $context = null)$/;"	v
context	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function isValid($value, $context = null)$/;"	v
context	.\Source\application\library\Zend\Validator\Explode.php	/^    public function isValid($value, $context = null)$/;"	v
context	.\Source\application\library\Zend\Validator\Identical.php	/^                    $context = $context[$key];$/;"	v
context	.\Source\application\library\Zend\Validator\Identical.php	/^    public function isValid($value, $context = null)$/;"	v
context	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function isValid($value, $context = null)$/;"	v
context	.\Source\application\library\vendor\symfony\translation\Dumper\QtFileDumper.php	/^        $context = $ts->appendChild($dom->createElement('context'));$/;"	v
continues	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^                $continues = isset($item['translated']) ? 'translated' : 'ids';$/;"	v
control	.\Source\application\library\Zend\Validator\Bitwise.php	/^        $this->control = (int) $control;$/;"	v
control	.\Source\application\library\Zend\Validator\Bitwise.php	/^    protected $control;$/;"	v
controller	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^        $controller = self::$App->router->Controller;$/;"	v
controllerClass	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $controllerClass = $this->controllerClass;$/;"	v
controllerClass	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $this->controllerClass = new $this->ControllerClassName();$/;"	v
controllerClass	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    private $controllerClass = null;$/;"	v
controllerNotFoundAction	.\Source\application\library\Alpaca\MVC\Controller\AlpacaController.php	/^    public function controllerNotFoundAction()$/;"	f
convert	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    public function convert($str, $reverse = false)$/;"	f
convert	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^    public function convert($str, $reverse = false)$/;"	f
convert	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^    public function convert($str, $reverse = false)$/;"	f
convert	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function convert($str, $reverse = false);$/;"	f
convertArray	.\Source\application\library\Zend\Validator\Date.php	/^    protected function convertArray(array $value, $addErrors = true)$/;"	f
convertDouble	.\Source\application\library\Zend\Validator\Date.php	/^    protected function convertDouble($value)$/;"	f
convertEncoding	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    public static function getWrapper($encoding = 'UTF-8', $convertEncoding = null)$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^            $this->convertEncoding = $convertEncodingUpper;$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^            $this->convertEncoding = null;$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $convertEncoding = $this->getConvertEncoding();$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    protected $convertEncoding;$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    public function setEncoding($encoding, $convertEncoding = null)$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    public static function isSupported($encoding, $convertEncoding = null)$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^        $convertEncoding = $this->getConvertEncoding();$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^        $convertEncoding = $this->getConvertEncoding();$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^            $this->convertEncoding = $encodingUpper;$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^            $this->convertEncoding = null;$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^    public function setEncoding($encoding, $convertEncoding = null)$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^    public static function isSupported($encoding, $convertEncoding = null)$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function setEncoding($encoding, $convertEncoding = null);$/;"	v
convertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public static function isSupported($encoding, $convertEncoding = null);$/;"	v
convertEncodingUpper	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^            $convertEncodingUpper = strtoupper($convertEncoding);$/;"	v
convertInteger	.\Source\application\library\Zend\Validator\Date.php	/^    protected function convertInteger($value)$/;"	f
convertMethod	.\Source\application\library\Zend\Validator\Date.php	/^        $convertMethod = 'convert' . ucfirst($type);$/;"	v
convertNumber	.\Source\application\library\vendor\symfony\translation\Interval.php	/^    private static function convertNumber($number)$/;"	f
convertString	.\Source\application\library\Zend\Validator\Date.php	/^    protected function convertString($value, $addErrors = true)$/;"	f
convertString	.\Source\application\library\Zend\Validator\DateStep.php	/^    protected function convertString($value, $addErrors = true)$/;"	f
convertToDateTime	.\Source\application\library\Zend\Validator\Date.php	/^    protected function convertToDateTime($param, $addErrors = true)$/;"	f
converts	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^ * - mb_output_handler       - Callback function converts character encoding in output buffer$/;"	f
cookieDomain	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^            $this->cookieDomain = $this->getStorageOption('cookie_domain');$/;"	v
cookieDomain	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $this->cookieDomain = $cookieDomain;$/;"	v
cookieDomain	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    protected $cookieDomain;$/;"	v
cookieHttpOnly	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^            $this->cookieHttpOnly = $this->getStorageOption('cookie_httponly');$/;"	v
cookieHttpOnly	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $this->cookieHttpOnly = (bool) $cookieHttpOnly;$/;"	v
cookieHttpOnly	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    protected $cookieHttpOnly;$/;"	v
cookieLifetime	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^            $this->cookieLifetime = $this->getStorageOption('cookie_lifetime');$/;"	v
cookieLifetime	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $this->cookieLifetime = (int) $cookieLifetime;$/;"	v
cookieLifetime	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    protected $cookieLifetime;$/;"	v
cookiePath	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^            $this->cookiePath = $this->getStorageOption('cookie_path');$/;"	v
cookiePath	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $cookiePath = (string) $cookiePath;$/;"	v
cookiePath	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $this->cookiePath = $cookiePath;$/;"	v
cookiePath	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    protected $cookiePath;$/;"	v
cookieSecure	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^            $this->cookieSecure = $this->getStorageOption('cookie_secure');$/;"	v
cookieSecure	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $this->cookieSecure = (bool) $cookieSecure;$/;"	v
cookieSecure	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    protected $cookieSecure;$/;"	v
copy	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function copy()$/;"	f
count	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^        for ($i = 0, $count = count($this->statementBindValues['keys']); $i < $count; $i++) {$/;"	v
count	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^        $this->count = pg_num_rows($this->resource);$/;"	v
count	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    protected $count = 0;$/;"	v
count	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        for ($position = 0, $count = substr_count($sql, '?'); $position < $count; $position++) {$/;"	v
count	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->count = $dataSource->count();$/;"	v
count	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->count = $this->dataSource->count();$/;"	v
count	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->count = count($dataSource);$/;"	v
count	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^        $this->count = count($this->dataSource);$/;"	v
count	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    protected $count = null;$/;"	v
count	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^        for ($i = 0, $count = count($this->predicates); $i < $count; $i++) {$/;"	v
count	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^        $this->count  = 0;$/;"	v
count	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    protected $count = 0;$/;"	v
count	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function count()$/;"	f
count	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^            $count = $fixum % 2;$/;"	v
count	.\Source\application\library\Zend\Validator\Barcode\Code39.php	/^        $count    = 0;$/;"	v
count	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^        $count    = 0;$/;"	v
count	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^        $count   = 0;$/;"	v
count	.\Source\application\library\Zend\Validator\File\Count.php	/^        $this->count = count($this->files);$/;"	v
count	.\Source\application\library\Zend\Validator\File\Count.php	/^    protected $count;$/;"	v
count	.\Source\application\library\Zend\Validator\File\WordCount.php	/^        $this->count = str_word_count($content);$/;"	v
count	.\Source\application\library\Zend\Validator\File\WordCount.php	/^    protected $count;$/;"	v
count	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function count()$/;"	f
count	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\ResetCommand.php	/^			$count = $this->migrator->rollback($pretend);$/;"	v
count	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^			$count = new Expression($count);$/;"	v
count	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$count = 0;$/;"	v
count	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function count($columns = '*')$/;"	f
count	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function count()$/;"	f
count	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function count()$/;"	f
count	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^	public static function plural($value, $count = 2)$/;"	v
count	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function plural($value, $count = 2)$/;"	v
count	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ViewErrorBag.php	/^	public function count()$/;"	f
count	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function str_plural($value, $count = 2)$/;"	v
count	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                    $count = (int) ($count \/ self::DAYS_PER_WEEK);$/;"	v
count	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $count = $diffInterval->d;$/;"	v
count	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $count = $diffInterval->h;$/;"	v
count	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $count = $diffInterval->i;$/;"	v
count	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $count = $diffInterval->m;$/;"	v
count	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $count = $diffInterval->s;$/;"	v
count	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $count = $diffInterval->y;$/;"	v
count	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $count = 1;$/;"	v
count	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^        $count = array($/;"	v
count	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^        $count = $this->readLong($stream, $isBigEndian);$/;"	v
count	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^                $count = key($plurals);$/;"	v
countRow	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^        $countRow = $result->fetch(\\PDO::FETCH_ASSOC);$/;"	v
countRow	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^        $countRow = $result->getResource()->fetch(\\PDO::FETCH_ASSOC);$/;"	v
countRow	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^        $countRow = $result->fetch(\\PDO::FETCH_ASSOC);$/;"	v
countRow	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^        $countRow = $result->getResource()->fetch(\\PDO::FETCH_ASSOC);$/;"	v
countSql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^        $countSql = 'SELECT COUNT(*) as "count" FROM (' . $sql . ')';$/;"	v
countSql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^        $countSql = 'SELECT COUNT(*) as count FROM (' . $sql . ')';$/;"	v
countSql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^        $countSql = 'SELECT COUNT(*) as "count" FROM (' . $sql . ')';$/;"	v
countSql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^        $countSql = 'SELECT COUNT(*) as count FROM (' . $sql . ')';$/;"	v
countStmt	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^        $countStmt = clone $statement;$/;"	v
countStmt	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^        $countStmt = clone $statement;$/;"	v
countryCode	.\Source\application\library\Zend\Validator\Iban.php	/^            $countryCode = (string) $countryCode;$/;"	v
countryCode	.\Source\application\library\Zend\Validator\Iban.php	/^            $countryCode = substr($value, 0, 2);$/;"	v
countryCode	.\Source\application\library\Zend\Validator\Iban.php	/^        $countryCode = $this->getCountryCode();$/;"	v
countryCode	.\Source\application\library\Zend\Validator\Iban.php	/^        $this->countryCode = $countryCode;$/;"	v
countryCode	.\Source\application\library\Zend\Validator\Iban.php	/^    protected $countryCode;$/;"	v
creatToken	.\Source\application\service\JwtAuth\JwtManager.php	/^	public function creatToken($data) $/;"	f
create	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^		$create = $this->input->getOption('create');$/;"	v
create	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function create(array $attributes)$/;"	f
create	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function create(array $attributes, array $joining = array(), $touch = true)$/;"	f
create	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function create(array $attributes)$/;"	f
create	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	public function create(array $attributes)$/;"	f
create	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	public function create($name, $path, $table = null, $create = false)$/;"	f
create	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function create()$/;"	f
create	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	public function create($table, Closure $callback)$/;"	f
create	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Factory.php	/^    public function create($name, $value)$/;"	f
create	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function create($year = null, $month = null, $day = null, $hour = null, $minute = null, $second = null, $tz = null)$/;"	f
create	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public static function create($years = 1, $months = null, $weeks = null, $days = null, $hours = null, $minutes = null, $seconds = null)$/;"	f
createArrayStorage	.\Source\application\library\Zend\Session\Storage\Factory.php	/^    protected static function createArrayStorage($type, $options)$/;"	f
createAttachRecord	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function createAttachRecord($id, $timed)$/;"	f
createAttachRecord	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	protected function createAttachRecord($id, $timed)$/;"	f
createAttachRecords	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function createAttachRecords($ids, array $attributes)$/;"	f
createBasic	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Factory.php	/^    private function createBasic($name, $value)$/;"	f
createBlueprint	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	protected function createBlueprint($table, Closure $callback = null)$/;"	f
createBuilder	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    private function createBuilder()$/;"	f
createClassListener	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function createClassListener($listener)$/;"	f
createCollector	.\Source\application\library\vendor\symfony\translation\Tests\DataCollectorTranslatorTest.php	/^    private function createCollector()$/;"	f
createCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected function createCommand($name, array $parameters = array())$/;"	f
createConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	protected function createConnection($driver, PDO $connection, $database, $prefix = '', array $config = array())$/;"	f
createConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\Connector.php	/^	public function createConnection($dsn, array $config, array $options)$/;"	f
createConnector	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	public function createConnector(array $config)$/;"	f
createContainer	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    protected function createContainer()$/;"	f
createDependencies	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^    public function createDependencies()$/;"	f
createDependencies	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^    public function createDependencies()$/;"	f
createDriver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    protected function createDriver($parameters)$/;"	f
createDriver	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^	protected function createDriver($driver)$/;"	f
createDriverFromParameters	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    protected function createDriverFromParameters(array $parameters)$/;"	f
createEcdsaKeys	.\Source\application\library\vendor\lcobucci\jwt\test\functional\Keys.php	/^    public static function createEcdsaKeys()$/;"	f
createEqualsTo	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Factory.php	/^    private function createEqualsTo($name, $value)$/;"	f
createExpectedData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    private function createExpectedData($/;"	f
createFailingLoader	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    private function createFailingLoader()$/;"	f
createFreshMockInstance	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	protected static function createFreshMockInstance($name)$/;"	f
createFromDate	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function createFromDate($year = null, $month = null, $day = null, $tz = null)$/;"	f
createFromFormat	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function createFromFormat($format, $time, $tz = null)$/;"	f
createFromISO8601	.\Source\application\library\Zend\Stdlib\DateTime.php	/^    public static function createFromISO8601($time, DateTimeZone $timezone = null)$/;"	f
createFromTime	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function createFromTime($hour = null, $minute = null, $second = null, $tz = null)$/;"	f
createFromTimestamp	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function createFromTimestamp($timestamp, $tz = null)$/;"	f
createFromTimestampUTC	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function createFromTimestampUTC($timestamp)$/;"	f
createGreaterOrEqualsTo	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Factory.php	/^    private function createGreaterOrEqualsTo($name, $value)$/;"	f
createHash	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\BaseSigner.php	/^    abstract public function createHash($payload, Key $key);$/;"	f
createHash	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^    public function createHash($/;"	f
createHash	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac.php	/^    public function createHash($payload, Key $key)$/;"	f
createHash	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa.php	/^    public function createHash($payload, Key $key)$/;"	f
createHashMustReturnAHashAccordingWithTheAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\HmacTest.php	/^    public function createHashMustReturnAHashAccordingWithTheAlgorithm()$/;"	f
createHashShouldReturnAHashUsingPrivateKey	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^    public function createHashShouldReturnAHashUsingPrivateKey()$/;"	f
createIndexName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected function createIndexName($type, array $columns)$/;"	f
createLesserOrEqualsTo	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Factory.php	/^    private function createLesserOrEqualsTo($name, $value)$/;"	f
createMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function createMany(array $records, array $joinings = array())$/;"	f
createMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function createMany(array $records)$/;"	f
createMessage	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    protected function createMessage($messageKey, $value)$/;"	f
createMockByName	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	protected static function createMockByName($name)$/;"	f
createModelByType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	public function createModelByType($type)$/;"	f
createOperation	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php	/^    abstract protected function createOperation(MessageCatalogueInterface $source, MessageCatalogueInterface $target);$/;"	f
createOperation	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php	/^    protected function createOperation(MessageCatalogueInterface $source, MessageCatalogueInterface $target)$/;"	f
createOperation	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php	/^    protected function createOperation(MessageCatalogueInterface $source, MessageCatalogueInterface $target)$/;"	f
createParser	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    private function createParser()$/;"	f
createPlatform	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    protected function createPlatform($parameters)$/;"	f
createPlatformFromDriver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    protected function createPlatformFromDriver(Driver\\DriverInterface $driver)$/;"	f
createProfiler	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    protected function createProfiler($parameters)$/;"	f
createReadPdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	protected function createReadPdo(array $config)$/;"	f
createReadWriteConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	protected function createReadWriteConnection(array $config)$/;"	f
createRepository	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	public function createRepository()$/;"	f
createRepository	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationRepositoryInterface.php	/^	public function createRepository();$/;"	f
createResult	.\Source\application\library\Zend\Db\Adapter\Driver\DriverInterface.php	/^    public function createResult($resource);$/;"	f
createResult	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function createResult($resource)$/;"	f
createResult	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function createResult($resource, $isBuffered = null)$/;"	f
createResult	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function createResult($resource, $isBuffered = null)$/;"	f
createResult	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function createResult($resource, $context = null)$/;"	f
createResult	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function createResult($resource)$/;"	f
createResult	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function createResult($resource)$/;"	f
createRsaKeys	.\Source\application\library\vendor\lcobucci\jwt\test\functional\Keys.php	/^    public static function createRsaKeys()$/;"	f
createService	.\Source\application\library\Zend\Db\Adapter\AdapterServiceFactory.php	/^    public function createService(ServiceLocatorInterface $serviceLocator)$/;"	f
createService	.\Source\application\library\Zend\Session\Service\SessionConfigFactory.php	/^    public function createService(ServiceLocatorInterface $services)$/;"	f
createService	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^    public function createService(ServiceLocatorInterface $services)$/;"	f
createService	.\Source\application\library\Zend\Session\Service\StorageFactory.php	/^    public function createService(ServiceLocatorInterface $services)$/;"	f
createService	.\Source\application\library\Zend\Stdlib\Hydrator\DelegatingHydratorFactory.php	/^    public function createService(ServiceLocatorInterface $serviceLocator)$/;"	f
createServiceWithName	.\Source\application\library\Zend\Db\Adapter\AdapterAbstractServiceFactory.php	/^    public function createServiceWithName(ServiceLocatorInterface $services, $name, $requestedName)$/;"	f
createServiceWithName	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^    public function createServiceWithName(ServiceLocatorInterface $services, $name, $requestedName)$/;"	f
createSessionArrayStorage	.\Source\application\library\Zend\Session\Storage\Factory.php	/^    protected static function createSessionArrayStorage($type, array $options)$/;"	f
createShouldReturnABasiclaimForOtherClaims	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^    public function createShouldReturnABasiclaimForOtherClaims()$/;"	f
createShouldReturnAGreaterOrEqualsToClaimForExpiration	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^    public function createShouldReturnAGreaterOrEqualsToClaimForExpiration()$/;"	f
createShouldReturnALesserOrEqualsToClaimForIssuedAt	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^    public function createShouldReturnALesserOrEqualsToClaimForIssuedAt()$/;"	f
createShouldReturnALesserOrEqualsToClaimForNotBefore	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^    public function createShouldReturnALesserOrEqualsToClaimForNotBefore()$/;"	f
createShouldReturnAnEqualsToClaimForAudience	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^    public function createShouldReturnAnEqualsToClaimForAudience()$/;"	f
createShouldReturnAnEqualsToClaimForId	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^    public function createShouldReturnAnEqualsToClaimForId()$/;"	f
createShouldReturnAnEqualsToClaimForIssuer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^    public function createShouldReturnAnEqualsToClaimForIssuer()$/;"	f
createShouldReturnAnEqualsToClaimForSubject	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^    public function createShouldReturnAnEqualsToClaimForSubject()$/;"	f
createSignatureHash	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^    private function createSignatureHash(Signature $signature)$/;"	f
createSigner	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^    public function createSigner()$/;"	f
createSigner	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^    public function createSigner()$/;"	f
createSigner	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^    public function createSigner()$/;"	f
createSigningHash	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^    private function createSigningHash($payload)$/;"	f
createSingleConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	protected function createSingleConnection(array $config)$/;"	f
createSourceFromAdapter	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    protected function createSourceFromAdapter(Adapter $adapter)$/;"	f
createSqlFromSpecificationAndParameters	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^    protected function createSqlFromSpecificationAndParameters($specifications, $parameters)$/;"	f
createStatement	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function createStatement($initialSql = null, $initialParameters = null)$/;"	f
createStatement	.\Source\application\library\Zend\Db\Adapter\Driver\DriverInterface.php	/^    public function createStatement($sqlOrResource = null);$/;"	f
createStatement	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function createStatement($sqlOrResource = null)$/;"	f
createStatement	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function createStatement($sqlOrResource = null)$/;"	f
createStatement	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function createStatement($sqlOrResource = null)$/;"	f
createStatement	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function createStatement($sqlOrResource = null)$/;"	f
createStatement	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function createStatement($sqlOrResource = null)$/;"	f
createStatement	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function createStatement($sqlOrResource = null)$/;"	f
created	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->created = $created;$/;"	v
created	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $created;$/;"	v
created	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function created($callback)$/;"	f
createdAt	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function createdAt()$/;"	f
creating	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function creating($callback)$/;"	f
creating	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected function creating()$/;"	f
creator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^		$this->creator = $creator;$/;"	v
creator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^	protected $creator;$/;"	v
creator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^			$creator = $app['migration.creator'];$/;"	v
criteria	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^        $criteria = array($/;"	v
csrf_token	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function csrf_token()$/;"	f
current	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function current()$/;"	f
current	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function current()$/;"	f
current	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function current()$/;"	f
current	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function current()$/;"	f
current	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function current()$/;"	f
current	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function current()$/;"	f
current	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function current()$/;"	f
current	.\Source\application\library\Zend\Db\Adapter\Profiler\Profiler.php	/^        $current = &$this->profiles[$this->currentIndex];$/;"	v
current	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    public function current()$/;"	f
current	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^    public function current()$/;"	f
current	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^    public function current()$/;"	f
current	.\Source\application\library\Zend\Stdlib\Glob.php	/^        $current = $begin;$/;"	v
current	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function current()$/;"	f
current	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$current = $this->attributes[$key];$/;"	v
current	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$current = $this->newPivotQuery()->lists($this->otherKey);$/;"	v
current	.\Source\application\library\vendor\symfony\translation\Translator.php	/^            $current = $fallbackCatalogue->getLocale();$/;"	v
current	.\Source\application\library\vendor\symfony\translation\Translator.php	/^            $current = $fallbackCatalogue;$/;"	v
current	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $current = $this->catalogues[$locale];$/;"	v
current	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $current = '';$/;"	v
currentComplete	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^        $this->currentComplete = true;$/;"	v
currentComplete	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    protected $currentComplete = false;$/;"	v
currentComplete	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^        $this->currentComplete = false;$/;"	v
currentComplete	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^        $this->currentComplete = true;$/;"	v
currentComplete	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    protected $currentComplete = false;$/;"	v
currentComplete	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^        $this->currentComplete = true;$/;"	v
currentComplete	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    protected $currentComplete = false;$/;"	v
currentComplete	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^        $this->currentComplete = true;$/;"	v
currentComplete	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    protected $currentComplete = false;$/;"	v
currentComplete	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^        $this->currentComplete = true;$/;"	v
currentComplete	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    protected $currentComplete = false;$/;"	v
currentData	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^        $this->currentData = db2_fetch_assoc($this->resource);$/;"	v
currentData	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    protected $currentData = null;$/;"	v
currentData	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^        $this->currentData = $data;$/;"	v
currentData	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^        $this->currentData = null;$/;"	v
currentData	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    protected $currentData = false;$/;"	v
currentData	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^        $this->currentData = oci_fetch_assoc($this->resource);$/;"	v
currentData	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    protected $currentData = false;$/;"	v
currentData	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^        $this->currentData = $this->resource->fetch($this->fetchMode);$/;"	v
currentData	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    protected $currentData = null;$/;"	v
currentData	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^        $this->currentData = sqlsrv_fetch_array($this->resource, SQLSRV_FETCH_ASSOC, $row);$/;"	v
currentData	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    protected $currentData = false;$/;"	v
currentIndex	.\Source\application\library\Zend\Db\Adapter\Profiler\Profiler.php	/^    protected $currentIndex = 0;$/;"	v
currentSuffix	.\Source\application\library\vendor\symfony\translation\Translator.php	/^            $currentSuffix = ucfirst(preg_replace($replacementPattern, '_', $current));$/;"	v
currentTime	.\Source\application\library\vendor\lcobucci\jwt\src\ValidationData.php	/^        $currentTime = $currentTime ?: time();$/;"	v
customCreators	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^	protected $customCreators = array();$/;"	v
d	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->d = $val * Carbon::DAYS_PER_WEEK;$/;"	v
d	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->d = $val;$/;"	v
data	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^            $data = array();$/;"	v
data	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^                $data = ['json'=>$data];$/;"	v
data	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^                $data = ['json'=>json_encode($data,JSON_UNESCAPED_UNICODE)];$/;"	v
data	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function __construct( $data = null , $type =self::VIEW_TYPE_HTML)$/;"	v
data	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static function html( $data = null , $type = self::VIEW_TYPE_HTML)$/;"	v
data	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static function image( $data = null , $type = self::VIEW_TYPE_IMAGE)$/;"	v
data	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static function json( $data = null , $type = self::VIEW_TYPE_JSON)$/;"	v
data	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    protected $data = array();$/;"	v
data	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function __construct(array $data = array())$/;"	v
data	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^            $data = &$data[$key];$/;"	v
data	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $data = $this->data['table_names'][$schema][$tableName];$/;"	v
data	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $data = &$this->data;$/;"	v
data	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    protected $data = array();$/;"	v
data	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^        $data = array();$/;"	v
data	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        $data = array();$/;"	v
data	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        $data = array();$/;"	v
data	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $data = array();$/;"	v
data	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^        $data = $this->dataSource->current();$/;"	v
data	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^        $data = $this->dataSource->current();$/;"	v
data	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^        $data = parent::current();$/;"	v
data	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^            $data = $this->data;$/;"	v
data	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^        $this->data = $rowData;$/;"	v
data	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    protected $data = array();$/;"	v
data	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractLengthColumn.php	/^        $data = parent::getExpressionData();$/;"	v
data	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractTimestampColumn.php	/^            $data = array_merge($data, $constraint->getExpressionData());$/;"	v
data	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractTimestampColumn.php	/^        $data = array(array($/;"	v
data	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^            $data = array_merge($data, $constraint->getExpressionData());$/;"	v
data	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^        $data = array(array($/;"	v
data	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Integer.php	/^        $data    = parent::getExpressionData();$/;"	v
data	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^        $data         = parent::getExpressionData();$/;"	v
data	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $data = array('EXPIRE' => $ts);$/;"	v
data	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $data = array('EXPIRE_HOPS' => array('hops' => $hops, 'ts' => $ts));$/;"	v
data	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $data = array('EXPIRE_HOPS_KEYS' => $expires);$/;"	v
data	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $data = array('EXPIRE_KEYS' => $expires);$/;"	v
data	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^        $data = array($/;"	v
data	.\Source\application\library\Zend\Session\ValidatorChain.php	/^            $data = $context->getData();$/;"	v
data	.\Source\application\library\Zend\Session\Validator\HttpUserAgent.php	/^            $data = isset($_SERVER['HTTP_USER_AGENT'])$/;"	v
data	.\Source\application\library\Zend\Session\Validator\HttpUserAgent.php	/^        $this->data = $data;$/;"	v
data	.\Source\application\library\Zend\Session\Validator\HttpUserAgent.php	/^    protected $data;$/;"	v
data	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^            $data = $this->getIpAddress();$/;"	v
data	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^        $this->data = $data;$/;"	v
data	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    protected $data;$/;"	v
data	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^            $data = $data->getArrayCopy();$/;"	v
data	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^            $data = (array) $data;$/;"	v
data	.\Source\application\library\Zend\Stdlib\ArrayUtils\MergeReplaceKey.php	/^        $this->data = $data;$/;"	v
data	.\Source\application\library\Zend\Stdlib\ArrayUtils\MergeReplaceKey.php	/^    protected $data;$/;"	v
data	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function hydrateName($name, $data = null)$/;"	v
data	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function hydrateValue($name, $value, $data = null)$/;"	v
data	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydratorListener.php	/^        $data = $this->hydrator->extract($event->getExtractionObject());$/;"	v
data	.\Source\application\library\Zend\Stdlib\Hydrator\ArraySerializable.php	/^        $data = $object->getArrayCopy();$/;"	v
data	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^        $data   = get_object_vars($object);$/;"	v
data	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^    public function hydrate($value, $data = null)$/;"	v
data	.\Source\application\library\Zend\Stdlib\SplPriorityQueue.php	/^        $data = array();$/;"	v
data	.\Source\application\library\Zend\Validator\Csrf.php	/^        $data = explode('-', $hash);$/;"	v
data	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$data = array('pdo' => $this->pdo, 'dbname' => $this->getConfig('database'));$/;"	v
data	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^			$data = func_get_args();$/;"	v
data	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^			$data = $data->toArray();$/;"	v
data	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^	public static function jsonp($callback, $data = [], $status = 200, array $headers = [], $options = 0)$/;"	v
data	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^	public static function view($view, $data = array(), $status = 200, array $headers = array())$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        $data = $this->splitJwt($jwt);$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        $data = explode('.', $jwt);$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\src\Parsing\Decoder.php	/^        $data = json_decode($json);$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^         $data = implode('.', $this->payload);$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^        $data = implode('.', $this->payload);$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^        $data = 'eyJhbGciOiJFUzUxMiIsInR5cCI6IkpXVCJ9.eyJoZWxsbyI6IndvcmxkIn0.'$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^        $data = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXUyJ9.eyJoZWxsbyI6IndvcmxkIn0.Rh'$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^        $data = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXUyJ9.eyJoZWxsbyI6IndvcmxkIn0.s'$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^        $data = new ValidationData(self::CURRENT_TIME - 10);$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\EqualsToTest.php	/^        $data = new ValidationData();$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\GreaterOrEqualsToTest.php	/^        $data = new ValidationData();$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\LesserOrEqualsToTest.php	/^        $data = new ValidationData();$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Parsing\DecoderTest.php	/^        $data = base64_decode('0MB2wKB+L3yvIdzeggmJ+5WOSLaRLTUPXbpzqUe0yuo=');$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Parsing\EncoderTest.php	/^        $data = base64_decode('0MB2wKB+L3yvIdzeggmJ+5WOSLaRLTUPXbpzqUe0yuo=');$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $data = new ValidationData($now + 10);$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $data = new ValidationData();$/;"	v
data	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^        $data = new ValidationData(1);$/;"	v
data	.\Source\application\library\vendor\symfony\polyfill-mbstring\Resources\unidata\lowerCase.php	/^static $data = array ($/;"	v
data	.\Source\application\library\vendor\symfony\polyfill-mbstring\Resources\unidata\upperCase.php	/^static $data = array ($/;"	v
data	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^        $this->data = $this->computeCount($messages);$/;"	v
data	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^        $data = $indexes = $resources = '';$/;"	v
data	.\Source\application\library\vendor\symfony\translation\Dumper\YamlFileDumper.php	/^            $data = ArrayConverter::expandToTree($data);$/;"	v
data	.\Source\application\library\vendor\symfony\translation\Dumper\YamlFileDumper.php	/^        $data = $messages->all($domain);$/;"	v
data	.\Source\application\module\Index\Controller\IndexController.php	/^        $data = ['name'=>'Bob2','age'=>'18'];             $/;"	v
data	.\Source\application\module\Index\Controller\IndexController.php	/^        \/\/ $data = ['name'=>'Big Bob','age'=>'18'];           $/;"	v
data	.\Source\application\module\Index\Controller\PassportController.php	/^        $data =array($/;"	v
dataCollector	.\Source\application\library\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php	/^        $dataCollector = new TranslationDataCollector($translator);$/;"	v
dataColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^        $dataColumn = (string) $dataColumn;$/;"	v
dataColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^        $this->dataColumn = $dataColumn;$/;"	v
dataColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    protected $dataColumn = 'data';$/;"	v
dataField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $dataField = (string) $dataField;$/;"	v
dataField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $this->dataField = $dataField;$/;"	v
dataField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    protected $dataField = 'data';$/;"	v
dataName	.\Source\application\library\Zend\Stdlib\Guard\ArrayOrTraversableGuardTrait.php	/^        $dataName = 'Argument',$/;"	v
dataName	.\Source\application\library\Zend\Stdlib\Guard\EmptyGuardTrait.php	/^        $dataName = 'Argument',$/;"	v
dataName	.\Source\application\library\Zend\Stdlib\Guard\GuardUtils.php	/^        $dataName = 'Argument',$/;"	v
dataName	.\Source\application\library\Zend\Stdlib\Guard\NullGuardTrait.php	/^        $dataName = 'Argument',$/;"	v
dataSource	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->dataSource = $dataSource->getIterator();$/;"	v
dataSource	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->dataSource = $dataSource;$/;"	v
dataSource	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->dataSource = new ArrayIterator($dataSource);$/;"	v
dataSource	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^        $dataSource = $this->getDataSource();$/;"	v
dataSource	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    protected $dataSource = null;$/;"	v
dataType	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        $this->dataType = $dataType;$/;"	v
dataType	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $dataType = null;$/;"	v
data_get	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function data_get($target, $key, $default = null)$/;"	f
database	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $database     = $findParameterValue(array('database', 'db'));$/;"	v
database	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $database = $findParameterValue(array('database', 'dbname', 'db', 'schema'));$/;"	v
database	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                    $database = (string) $value;$/;"	v
database	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $database = (string) $database;$/;"	v
database	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $this->database = $database;$/;"	v
database	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    protected $database;$/;"	v
database	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->database = $database;$/;"	v
database	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $database;$/;"	v
database	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function __construct(PDO $pdo, $database = '', $tablePrefix = '', array $config = array())$/;"	v
database	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RefreshCommand.php	/^		$database = $this->input->getOption('database');$/;"	v
database	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^		$database = $this->input->getOption('database');$/;"	v
database	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\MySqlBuilder.php	/^		$database = $this->connection->getDatabaseName();$/;"	v
date	.\Source\application\library\Alpaca\Log\Log.php	/^            $date = date("Y-m-d H:i:s",time());$/;"	v
date	.\Source\application\library\Alpaca\Log\Log.php	/^        $date = date("Y-m-d H:i:s",time());        $/;"	v
date	.\Source\application\library\Zend\Validator\Date.php	/^        $date = DateTime::createFromFormat($this->format, $value);$/;"	v
date	.\Source\application\library\Zend\Validator\DateStep.php	/^            $date = DateTime::createFromFormat($this->format, $value, $this->timezone);$/;"	v
date	.\Source\application\library\Zend\Validator\DateStep.php	/^            $date = new DateTime;$/;"	v
date	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function date($column)$/;"	f
date	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $date = $this->copy()->addMonths($value);$/;"	v
dateBasedWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function dateBasedWhere($type, Builder $query, $where)$/;"	f
dateBasedWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^	protected function dateBasedWhere($type, Builder $query, $where)$/;"	f
dateModificationOperation	.\Source\application\library\Zend\Validator\DateStep.php	/^        $dateModificationOperation           = $isIncrementalStepping ? 'add' : 'sub';$/;"	v
dateTime	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function dateTime($column)$/;"	f
dates	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $dates = array();$/;"	v
day	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $day = $day === null ? date('j') : $day;$/;"	v
day	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $this->day = $value;$/;"	v
day	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function day($value)$/;"	f
dayOfWeek	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $dayOfWeek = $this->dayOfWeek;$/;"	v
dayOfWeek	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        return $this->dayOfWeek === static::FRIDAY;$/;"	v
dayOfWeek	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        return $this->dayOfWeek === static::MONDAY;$/;"	v
dayOfWeek	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        return $this->dayOfWeek === static::SATURDAY;$/;"	v
dayOfWeek	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        return $this->dayOfWeek === static::SUNDAY;$/;"	v
dayOfWeek	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        return $this->dayOfWeek === static::THURSDAY;$/;"	v
dayOfWeek	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        return $this->dayOfWeek === static::TUESDAY;$/;"	v
dayOfWeek	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        return $this->dayOfWeek === static::WEDNESDAY;$/;"	v
days	.\Source\application\library\Zend\Validator\DateStep.php	/^                            $days = $timeDiff->format('%a'); \/\/ Total days$/;"	v
days	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    protected static $days = array($/;"	v
dayz	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->dayz = $arg * Carbon::DAYS_PER_WEEK;$/;"	v
dayz	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->dayz = $arg;$/;"	v
dayz	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^            $this->dayz = $this->dayz + $interval->d * $sign;$/;"	v
dayz	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^            $this->dayz = $this->dayz + $interval->days * $sign;$/;"	v
dayz	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^        $this->dayz = ($weeks * Carbon::DAYS_PER_WEEK) + $days;$/;"	v
db	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$db = $this->resolveConnection($connection);$/;"	v
db2	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^        $this->db2 = $resource;$/;"	v
db2	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    protected $db2 = null;$/;"	v
dbName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SqlServerConnector.php	/^		$dbName = $database != '' ? ";Database={$database}" : '';$/;"	v
dbNameArray	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $dbNameArray = oci_fetch_array($stmt, OCI_ASSOC);$/;"	v
dd	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function dd()$/;"	f
debug	.\Source\application\library\Alpaca\Log\Log.php	/^    public static function debug($string)$/;"	f
debug	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $this->debug = $debug;$/;"	v
debug	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private $debug;$/;"	v
decimal	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractPrecisionColumn.php	/^        $this->decimal = null === $decimal ? null : (int) $decimal;$/;"	v
decimal	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractPrecisionColumn.php	/^    protected $decimal;$/;"	v
decimal	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Float.php	/^        $decimal = null,$/;"	v
decimal	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function decimal($column, $total = 8, $places = 2)$/;"	f
decodePunycode	.\Source\application\library\Zend\Validator\Hostname.php	/^    protected function decodePunycode($encoded)$/;"	f
decoded	.\Source\application\library\Zend\Validator\Hostname.php	/^        $decoded = array();$/;"	v
decoder	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        $this->decoder = $decoder ?: new Decoder();$/;"	v
decoder	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        Decoder $decoder = null,$/;"	v
decoder	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^    private $decoder;$/;"	v
decoder	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^        $this->decoder = $this->getMock(Decoder::class);$/;"	v
decoder	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    protected $decoder;$/;"	v
decoder	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Parsing\DecoderTest.php	/^        $decoder = new Decoder();$/;"	v
decorator	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            $decorator = $subselect;$/;"	v
decorator	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            $decorator = clone $this;$/;"	v
decorators	.\Source\application\library\Zend\Db\Sql\Platform\AbstractPlatform.php	/^    protected $decorators = array();$/;"	v
decrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function decrement($column, $amount = 1, array $extra = array())$/;"	f
decrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function decrement($column, $amount = 1)$/;"	f
decrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function decrement($column, $amount = 1, array $extra = array())$/;"	f
default	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^        $this->default = $default;$/;"	v
default	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    protected $default;$/;"	v
default	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Float.php	/^        $default = null,$/;"	v
default	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    public function getParam($name, $default = null)$/;"	v
default	.\Source\application\library\Zend\Stdlib\Message.php	/^    public function getMetadata($key = null, $default = null)$/;"	v
default	.\Source\application\library\Zend\Stdlib\Parameters.php	/^    public function get($name, $default = null)$/;"	v
default	.\Source\application\library\Zend\Stdlib\ParametersInterface.php	/^    public function get($name, $default = null);$/;"	v
default	.\Source\application\library\Zend\Validator\File\IsCompressed.php	/^        $default = array($/;"	v
default	.\Source\application\library\Zend\Validator\File\IsImage.php	/^        $default = array($/;"	v
default	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^		$this->default = $name;$/;"	v
default	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^	protected $default;$/;"	v
default	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function find($key, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getOriginal($key = null, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function first($array, $callback, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function get($array, $key, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function last($array, $callback, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function pull(&$array, $key, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function get($key, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function pull($key, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Cookie.php	/^	public static function get($key = null, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Input.php	/^	public static function get($key = null, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function get($key, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_first($array, $callback, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_get($array, $key, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_last($array, $callback, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_pull(&$array, $key, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function data_get($target, $key, $default = null)$/;"	v
default	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function object_get($object, $key, $default = null)$/;"	v
default	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function getClaim($name, $default = null)$/;"	v
default	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function getHeader($name, $default = null)$/;"	v
defaultClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^        $this->defaultClaim = $this->getMock(Claim::class);$/;"	v
defaultClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    protected $defaultClaim;$/;"	v
defaultClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^        $this->defaultClaim = $this->getMock(Claim::class);$/;"	v
defaultClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    protected $defaultClaim;$/;"	v
defaultCombination	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^        $this->defaultCombination = $defaultCombination;$/;"	v
defaultCombination	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    protected $defaultCombination = self::COMBINED_BY_AND;$/;"	v
defaultConfigClass	.\Source\application\library\Zend\Session\AbstractManager.php	/^    protected $defaultConfigClass = 'Zend\\Session\\Config\\SessionConfig';$/;"	v
defaultDestroyOptions	.\Source\application\library\Zend\Session\SessionManager.php	/^    protected $defaultDestroyOptions = array($/;"	v
defaultLocale	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $defaultLocale = $options['default_locale'];$/;"	v
defaultLocale	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $defaultLocale = \\Locale::getDefault();$/;"	v
defaultManager	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    protected static $defaultManager;$/;"	v
defaultManagerConfig	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^    protected $defaultManagerConfig = array($/;"	v
defaultNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\CompositeNamingStrategy.php	/^        $this->defaultNamingStrategy = $defaultNamingStrategy ?: new IdentityNamingStrategy();$/;"	v
defaultNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\CompositeNamingStrategy.php	/^    private $defaultNamingStrategy;$/;"	v
defaultNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\CompositeNamingStrategy.php	/^    public function __construct(array $strategies, NamingStrategyInterface $defaultNamingStrategy = null)$/;"	v
defaultPlatform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^        $this->defaultPlatform = $adapter->getPlatform();$/;"	v
defaultPlatform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    protected $defaultPlatform;$/;"	v
defaultSchema	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $this->defaultSchema = ($adapter->getCurrentSchema()) ?: self::DEFAULT_SCHEMA;$/;"	v
defaultSchema	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    protected $defaultSchema = null;$/;"	v
defaultStorageClass	.\Source\application\library\Zend\Session\AbstractManager.php	/^    protected $defaultStorageClass = 'Zend\\Session\\Storage\\SessionArrayStorage';$/;"	v
defaultTranslator	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    protected static $defaultTranslator;$/;"	v
defaultTranslatorTextDomain	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    protected static $defaultTranslatorTextDomain = 'default';$/;"	v
defaultType	.\Source\application\library\Zend\Db\Sql\AbstractExpression.php	/^    protected function normalizeArgument($argument, $defaultType = self::TYPE_VALUE)$/;"	v
defaultType	.\Source\application\library\Zend\Validator\NotEmpty.php	/^    protected $defaultType = array($/;"	v
defaultType	.\Source\application\library\Zend\Validator\Timezone.php	/^    protected $defaultType = array($/;"	v
defaults	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$defaults = array(static::CREATED_AT, static::UPDATED_AT);$/;"	v
defaults	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$defaults = array($this->foreignKey, $this->otherKey);$/;"	v
defaults	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^        $defaults = array($/;"	v
defer	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	protected $defer = true;$/;"	v
defer	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SeedServiceProvider.php	/^	protected $defer = true;$/;"	v
defer	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	protected $defer = false;$/;"	v
defines	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function defines($id, $domain = 'messages')$/;"	f
defines	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function defines($id, $domain = 'messages');$/;"	f
delete	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public function delete($query)$/;"	f
delete	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function delete()$/;"	f
delete	.\Source\application\library\Zend\Db\RowGateway\RowGatewayInterface.php	/^    public function delete();$/;"	f
delete	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function delete($table = null)$/;"	f
delete	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $delete = $this->sql->delete();$/;"	v
delete	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function delete($where)$/;"	f
delete	.\Source\application\library\Zend\Db\TableGateway\TableGatewayInterface.php	/^    public function delete($where);$/;"	f
delete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function delete($query, $bindings = array())$/;"	f
delete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function delete($query, $bindings = array());$/;"	f
delete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function delete()$/;"	f
delete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function delete()$/;"	f
delete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphPivot.php	/^	public function delete()$/;"	f
delete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	public function delete()$/;"	f
delete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	public function delete($migration)$/;"	f
delete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationRepositoryInterface.php	/^	public function delete($migration);$/;"	f
delete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function delete($id = null)$/;"	f
deleteMetadata	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function deleteMetadata($key = '', $domain = 'messages')$/;"	f
deleteMetadata	.\Source\application\library\vendor\symfony\translation\MetadataAwareInterface.php	/^    public function deleteMetadata($key = '', $domain = 'messages');$/;"	f
deleteRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^        $this->deleteRule = $deleteRule;$/;"	v
deleteRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    protected $deleteRule;$/;"	v
deleteState	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $deleteState = $delete->getRawState();$/;"	v
deleteTmpDir	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    protected function deleteTmpDir()$/;"	f
deleteWith	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function deleteWith(Delete $delete)$/;"	f
deleted	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function deleted($callback)$/;"	f
deleting	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function deleting($callback)$/;"	f
delimiter	.\Source\application\library\Zend\Validator\Explode.php	/^            $delimiter = $this->getValueDelimiter();$/;"	v
delimiter	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function snake($value, $delimiter = '_')$/;"	v
delimiter	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function snake_case($value, $delimiter = '_')$/;"	v
delimiter	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^        $this->delimiter = $delimiter;$/;"	v
delimiter	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^    private $delimiter = ';';$/;"	v
delimiter	.\Source\application\library\vendor\symfony\translation\Loader\CsvFileLoader.php	/^        $this->delimiter = $delimiter;$/;"	v
delimiter	.\Source\application\library\vendor\symfony\translation\Loader\CsvFileLoader.php	/^    private $delimiter = ';';$/;"	v
delta	.\Source\application\library\Zend\Validator\Hostname.php	/^                $delta = intval($delta \/ 35);$/;"	v
delta	.\Source\application\library\Zend\Validator\Hostname.php	/^            $delta   = intval($init ? (($index - $oldIndex) \/ 700) : (($index - $oldIndex) \/ 2));$/;"	v
dependencies	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$dependencies = $constructor->getParameters();$/;"	v
dependencies	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$dependencies = array();$/;"	v
dependency	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			$dependency = $parameter->getClass();$/;"	v
depth	.\Source\application\library\Zend\Stdlib\Glob.php	/^                if (($pattern[$current] === '}' && $depth-- === 0) || ($pattern[$current] === ',' && $depth === 0)) {$/;"	v
depth	.\Source\application\library\Zend\Stdlib\Glob.php	/^        $depth   = 0;$/;"	v
description	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\InstallCommand.php	/^	protected $description = 'Create the migration repository';$/;"	v
description	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^	protected $description = 'Run the database migrations';$/;"	v
description	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^	protected $description = 'Create a new migration file';$/;"	v
description	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RefreshCommand.php	/^	protected $description = 'Reset and re-run all migrations';$/;"	v
description	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\ResetCommand.php	/^	protected $description = 'Rollback all database migrations';$/;"	v
description	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RollbackCommand.php	/^	protected $description = 'Rollback the last database migration';$/;"	v
description	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^	protected $description = 'Seed the database with records';$/;"	v
destroy	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function destroy();$/;"	f
destroy	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    public function destroy($id)$/;"	f
destroy	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^    public function destroy($id)$/;"	f
destroy	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^    public function destroy($id)$/;"	f
destroy	.\Source\application\library\Zend\Session\SaveHandler\SaveHandlerInterface.php	/^    public function destroy($id);$/;"	f
destroy	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function destroy(array $options = null)$/;"	f
destroy	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function destroy($ids)$/;"	f
detach	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$detach = array_diff($current, array_keys($records));$/;"	v
detach	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function detach($ids = array(), $touch = true)$/;"	f
detaching	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function sync($ids, $detaching = true)$/;"	v
details	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa.php	/^        $details = openssl_pkey_get_details($key);$/;"	v
detectBom	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    protected static function detectBom($string)$/;"	f
detectFormat	.\Source\application\library\Zend\Validator\Isbn.php	/^    protected function detectFormat()$/;"	f
detectStringEncoding	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    protected static function detectStringEncoding($xml)$/;"	f
detectXmlEncoding	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    protected static function detectXmlEncoding($xml, $fileEncoding)$/;"	f
detectXmlStringEncoding	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    protected static function detectXmlStringEncoding($xml)$/;"	f
detected	.\Source\application\library\Zend\Validator\NotEmpty.php	/^                $detected = 0;$/;"	v
detected	.\Source\application\library\Zend\Validator\NotEmpty.php	/^            $detected = 0;$/;"	v
detected	.\Source\application\library\Zend\Validator\Timezone.php	/^        $detected = 0;$/;"	v
determineCodeAndVariables	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\SerializableClosure.php	/^	protected function determineCodeAndVariables()$/;"	f
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^		$dictionary = $this->getDictionary($items);$/;"	v
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^		$dictionary = $this->getDictionary();$/;"	v
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^		$dictionary = array();$/;"	v
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^		$dictionary = array_except($this->getDictionary(), $keys);$/;"	v
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^		$dictionary = array_only($this->getDictionary(), $keys);$/;"	v
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^		$dictionary = array();$/;"	v
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$dictionary = $this->buildDictionary($results);$/;"	v
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$dictionary = array();$/;"	v
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$dictionary = $this->buildDictionary($results);$/;"	v
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$dictionary = array();$/;"	v
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^		$dictionary = $this->buildDictionary($results);$/;"	v
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^		$dictionary = array();$/;"	v
dictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	protected $dictionary = array();$/;"	v
diff	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^		$diff = new static;$/;"	v
diff	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function diff($items)$/;"	f
diff	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function diff($items)$/;"	f
diff	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $diff = count($vals);$/;"	v
diffCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php	/^        $diffCatalogue = new MessageCatalogue('en', array('messages' => array('b' => 'old_b', 'c' => 'new_c')));$/;"	v
diffFiltered	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffFiltered(CarbonInterval $ci, Closure $callback, Carbon $dt = null, $abs = true)$/;"	f
diffForHumans	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffForHumans(Carbon $other = null, $absolute = false)$/;"	f
diffInDays	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInDays(Carbon $dt = null, $abs = true)$/;"	f
diffInDaysFiltered	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInDaysFiltered(Closure $callback, Carbon $dt = null, $abs = true)$/;"	f
diffInHours	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInHours(Carbon $dt = null, $abs = true)$/;"	f
diffInHoursFiltered	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInHoursFiltered(Closure $callback, Carbon $dt = null, $abs = true)$/;"	f
diffInMinutes	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInMinutes(Carbon $dt = null, $abs = true)$/;"	f
diffInMonths	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInMonths(Carbon $dt = null, $abs = true)$/;"	f
diffInSeconds	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInSeconds(Carbon $dt = null, $abs = true)$/;"	f
diffInWeekdays	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInWeekdays(Carbon $dt = null, $abs = true)$/;"	f
diffInWeekendDays	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInWeekendDays(Carbon $dt = null, $abs = true)$/;"	f
diffInWeeks	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInWeeks(Carbon $dt = null, $abs = true)$/;"	f
diffInYears	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInYears(Carbon $dt = null, $abs = true)$/;"	f
diffInterval	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $diffInterval = $this->diff($other);$/;"	v
diffParts	.\Source\application\library\Zend\Validator\DateStep.php	/^        $diffParts = array_combine($unitKeys, explode('|', $timeDiff->format('%y|%m|%d|%h|%i|%s')));$/;"	v
digit	.\Source\application\library\Zend\Validator\CreditCard.php	/^            $digit = $weight * $value[$i];$/;"	v
digit	.\Source\application\library\Zend\Validator\Hostname.php	/^                $digit = ($hex - 48 < 10) ? $hex - 22$/;"	v
digits	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractPrecisionColumn.php	/^    public function __construct($name, $digits = null, $decimal = null, $nullable = false, $default = null, array $options = array())$/;"	v
digits	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Float.php	/^        $digits = null,$/;"	v
dir	.\Source\application\library\vendor\lcobucci\jwt\test\functional\Keys.php	/^        $dir = 'file:\/\/' . __DIR__;$/;"	v
direction	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$direction = strtolower($direction) == 'asc' ? 'asc' : 'desc';$/;"	v
direction	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orderBy($column, $direction = 'asc')$/;"	v
directories	.\Source\application\library\Zend\Validator\File\Exists.php	/^            $directories = array();$/;"	v
directories	.\Source\application\library\Zend\Validator\File\Exists.php	/^        $directories = $this->getDirectory(true);$/;"	v
directories	.\Source\application\library\Zend\Validator\File\Exists.php	/^        $directories = array_unique($directories);$/;"	v
directories	.\Source\application\library\Zend\Validator\File\NotExists.php	/^        $directories = $this->getDirectory(true);$/;"	v
directories	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^	protected static $directories = array();$/;"	v
directory	.\Source\application\library\Zend\Validator\File\Exists.php	/^            $directory = explode(',', $directory);$/;"	v
directory	.\Source\application\library\Zend\Validator\File\Exists.php	/^            $directory = explode(',', (string) $directory);$/;"	v
directory	.\Source\application\library\Zend\Validator\File\Exists.php	/^        $directory = $this->options['directory'];$/;"	v
directory	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^                $directory = dirname($fullpath);$/;"	v
dirty	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$dirty = $this->getDirty();$/;"	v
dirty	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$dirty = $this->getDirty();$/;"	v
dirty	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$dirty = array();$/;"	v
disableBackup	.\Source\application\library\vendor\symfony\translation\Writer\TranslationWriter.php	/^    public function disableBackup()$/;"	f
disableEntities	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^        $disableEntities = libxml_disable_entity_loader(false);$/;"	v
disableEntities	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $disableEntities = libxml_disable_entity_loader(true);$/;"	v
disableMagicFile	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    public function disableMagicFile($disable)$/;"	f
disableQueryLog	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function disableQueryLog()$/;"	f
disconnect	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    public function disconnect()$/;"	f
disconnect	.\Source\application\library\Zend\Db\Adapter\Driver\ConnectionInterface.php	/^    public function disconnect();$/;"	f
disconnect	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    public function disconnect()$/;"	f
disconnect	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    public function disconnect()$/;"	f
disconnect	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    public function disconnect()$/;"	f
disconnect	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    public function disconnect()$/;"	f
disconnect	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function disconnect()$/;"	f
disconnect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function disconnect()$/;"	f
disconnect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	public function disconnect($name = null)$/;"	f
dispatch	.\Source\application\library\Zend\Stdlib\DispatchableInterface.php	/^    public function dispatch(RequestInterface $request, ResponseInterface $response = null);$/;"	f
dispatcher	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public function dispatcher()$/;"	f
dispatcher	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected static $dispatcher;$/;"	v
display	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public function display($view)$/;"	f
display	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function display()$/;"	f
displayToHtml	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function displayToHtml()$/;"	f
displayToImage	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function displayToImage()$/;"	f
displayToJson	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function displayToJson()$/;"	f
dissociate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function dissociate()$/;"	f
distinct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->distinct = true;$/;"	v
distinct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $distinct = false;$/;"	v
distinct	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function distinct()$/;"	f
divide	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function divide($array)$/;"	f
doLoadCatalogue	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private function doLoadCatalogue($locale)$/;"	f
doVerify	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\BaseSigner.php	/^    abstract public function doVerify($expected, $payload, Key $key);$/;"	f
doVerify	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^    public function doVerify($expected, $payload, Key $key)$/;"	f
doVerify	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac.php	/^    public function doVerify($expected, $payload, Key $key)$/;"	f
doVerify	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa.php	/^    public function doVerify($expected, $payload, Key $key)$/;"	f
doVerifyShouldDelegateToEcdsaSignerUsingPublicKey	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^    public function doVerifyShouldDelegateToEcdsaSignerUsingPublicKey()$/;"	f
doVerifyShouldReturnFalseWhenExpectedHashIsNotString	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\HmacTest.php	/^    public function doVerifyShouldReturnFalseWhenExpectedHashIsNotString()$/;"	f
doVerifyShouldReturnFalseWhenExpectedHashWasNotCreatedWithSameInformation	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\HmacTest.php	/^    public function doVerifyShouldReturnFalseWhenExpectedHashWasNotCreatedWithSameInformation($expected)$/;"	f
doVerifyShouldReturnTrueWhenExpectedHashWasCreatedWithSameInformation	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\HmacTest.php	/^    public function doVerifyShouldReturnTrueWhenExpectedHashWasCreatedWithSameInformation($expected)$/;"	f
does	.\Source\application\library\Zend\Session\AbstractManager.php	/^                    'Unable to locate config class "%s"; class does not exist',$/;"	c
does	.\Source\application\library\Zend\Session\AbstractManager.php	/^                    'Unable to locate storage class "%s"; class does not exist',$/;"	c
does	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^        throw new Exception\\InvalidArgumentException('The iterator class does not exist');$/;"	c
does	.\Source\application\library\vendor\composer\ClassLoader.php	/^            \/\/ Remember that this class does not exist.$/;"	c
doesntHave	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function doesntHave($relation, $boolean = 'and', Closure $callback = null)$/;"	f
dom	.\Source\application\library\vendor\symfony\translation\Dumper\QtFileDumper.php	/^        $dom = new \\DOMDocument('1.0', 'utf-8');$/;"	v
dom	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^        $dom = new \\DOMDocument('1.0', 'utf-8');$/;"	v
dom	.\Source\application\library\vendor\symfony\translation\Loader\QtFileLoader.php	/^            $dom = XmlUtils::loadFile($resource);$/;"	v
dom	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $dom = XmlUtils::loadFile($resource);$/;"	v
dom	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^            $dom = new DOMDocument();$/;"	v
dom	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    public static function scan($xml, DOMDocument $dom = null)$/;"	v
dom	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    public static function scanFile($file, DOMDocument $dom = null)$/;"	v
dom	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^        $dom = new DOMDocument('1.0');$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^            $domain = 'messages';$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\Loader\ArrayLoader.php	/^    public function load($resource, $locale, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\Loader\FileLoader.php	/^    public function load($resource, $locale, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\Loader\IcuDatFileLoader.php	/^    public function load($resource, $locale, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\Loader\IcuResFileLoader.php	/^    public function load($resource, $locale, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\Loader\LoaderInterface.php	/^    public function load($resource, $locale, $domain = 'messages');$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\Loader\QtFileLoader.php	/^    public function load($resource, $locale, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    public function load($resource, $locale, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^            $domain = 'messages';$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^        foreach ($catalogue->all() as $domain => $messages) {$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^        foreach ($values as $domain => $keys) {$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function add($messages, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function defines($id, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function deleteMetadata($key = '', $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function get($id, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function getMetadata($key = '', $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function has($id, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function replace($messages, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function set($id, $translation, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function setMetadata($key, $value, $domain = 'messages')$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function add($messages, $domain = 'messages');$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function defines($id, $domain = 'messages');$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function get($id, $domain = 'messages');$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function has($id, $domain = 'messages');$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function replace($messages, $domain = 'messages');$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function set($id, $translation, $domain = 'messages');$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MetadataAwareInterface.php	/^    public function deleteMetadata($key = '', $domain = 'messages');$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MetadataAwareInterface.php	/^    public function getMetadata($key = '', $domain = 'messages');$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\MetadataAwareInterface.php	/^    public function setMetadata($key, $value, $domain = 'messages');$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\Translator.php	/^            $domain = 'messages';$/;"	v
domain	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function addResource($format, $resource, $locale, $domain = null)$/;"	v
domainPart	.\Source\application\library\Zend\Validator\Hostname.php	/^                            $domainPart = $this->decodePunycode(substr($domainPart, 4));$/;"	v
domainParts	.\Source\application\library\Zend\Validator\Hostname.php	/^        $domainParts = explode('.', $value);$/;"	v
domains	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^            $this->domains = array_values(array_unique(array_merge($this->source->getDomains(), $this->target->getDomains())));$/;"	v
domains	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^        $this->domains = null;$/;"	v
domains	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^    private $domains;$/;"	v
domains	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $domains = $catalogue->all();$/;"	v
dot	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function dot($array, $prepend = '')$/;"	f
dots	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$dots = str_contains($name, '.');$/;"	v
double	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function double($column, $total = null, $places = null)$/;"	f
download	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^	public static function download($file, $name = null, array $headers = array(), $disposition = 'attachment')$/;"	f
drive	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^        $drive = '\\\\' === DIRECTORY_SEPARATOR ? array_shift($parts).'\/' : '';$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^                    $driver = new Driver\\Pdo\\Pdo($parameters);$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^                $driver = ($this->driver instanceof Driver\\Mysqli\\Mysqli || $this->driver instanceof Driver\\Pdo\\Pdo) ? $this->driver : null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^                $driver = ($this->driver instanceof Driver\\Pgsql\\Pgsql || $this->driver instanceof Driver\\Pdo\\Pdo) ? $this->driver : null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^                $driver = new Driver\\IbmDb2\\IbmDb2($parameters);$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^                $driver = new Driver\\Mysqli\\Mysqli($parameters, null, null, $options);$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^                $driver = new Driver\\Oci8\\Oci8($parameters);$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^                $driver = new Driver\\Pgsql\\Pgsql($parameters);$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^                $driver = new Driver\\Sqlsrv\\Sqlsrv($parameters);$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $driver = $this->createDriver($parameters);$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Feature\AbstractFeature.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Feature\AbstractFeature.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $this->driver = $driver;$/;"	v
driver	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    protected $driver = null;$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        DriverInterface $driver = null,$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    protected function buildSqlString(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    protected function processDelete(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    protected function processWhere(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    protected function processInsert(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    protected function processSelect(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^    protected function processLimitOffset(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null, &$sqls, &$parameters)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\SelectDecorator.php	/^    protected function processLimit(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\SelectDecorator.php	/^    protected function processOffset(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^    protected function processLimitOffset(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null, &$sqls, &$parameters)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^    protected function processLimitOffset(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null, &$sqls, &$parameters)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processCombine(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processGroup(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processHaving(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processJoins(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processLimit(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processOffset(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processOrder(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processSelect(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processStatementEnd(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processStatementStart(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processWhere(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function resolveTable($table, PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Update.php	/^    protected function processUpdate(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\Zend\Db\Sql\Update.php	/^    protected function processWhere(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	v
driver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$driver = $this->getDoctrineDriver();$/;"	v
driver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^		$driver = $config['driver'];$/;"	v
driver	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^		$driver = $driver ?: $this->getDefaultDriver();$/;"	v
driver	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^	public function driver($driver = null)$/;"	f
driverName	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^        $driverName = strtolower($parameters['driver']);$/;"	v
driverName	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    protected $driverName;$/;"	v
driverName	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^            $this->driverName = strtolower($connectionParameters['pdodriver']);$/;"	v
driverName	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^            $this->driverName = strtolower($this->resource->getAttribute(\\PDO::ATTR_DRIVER_NAME));$/;"	v
driverName	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^            $this->driverName = strtolower(substr($/;"	v
driverName	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^            $this->driverName = substr($/;"	v
driverName	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $this->driverName = strtolower($this->resource->getAttribute(\\PDO::ATTR_DRIVER_NAME));$/;"	v
driverName	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        if ($name === null && $this->driverName == 'pgsql') {$/;"	v
driverName	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^        $driverName = $this->connection->getDriverName();$/;"	v
drivers	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^	protected $drivers = array();$/;"	v
drop	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function drop()$/;"	f
drop	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	public function drop($table)$/;"	f
dropColumn	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    public function dropColumn($name)$/;"	f
dropColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function dropColumn($columns)$/;"	f
dropColumns	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected $dropColumns = array();$/;"	v
dropConstraint	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    public function dropConstraint($name)$/;"	f
dropConstraints	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected $dropConstraints = array();$/;"	v
dropForeign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function dropForeign($index)$/;"	f
dropIfExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function dropIfExists()$/;"	f
dropIfExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	public function dropIfExists($table)$/;"	f
dropIndex	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function dropIndex($index)$/;"	f
dropIndexCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected function dropIndexCommand($command, $type, $index)$/;"	f
dropPrimary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function dropPrimary($index = null)$/;"	f
dropSoftDeletes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function dropSoftDeletes()$/;"	f
dropStaleInstances	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function dropStaleInstances($abstract)$/;"	f
dropTimestamps	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function dropTimestamps()$/;"	f
dropUnique	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function dropUnique($index)$/;"	f
dsn	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                    $dsn = $value;$/;"	v
dsn	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^            $dsn = $pdoDriver . ':' . implode(';', $dsn);$/;"	v
dsn	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^            $dsn = array();$/;"	v
dsn	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $dsn = $username = $password = $hostname = $database = null;$/;"	v
dsn	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $this->dsn = $dsn;$/;"	v
dsn	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    protected $dsn = null;$/;"	v
dsn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\MySqlConnector.php	/^		$dsn = $this->getDsn($config);$/;"	v
dsn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\PostgresConnector.php	/^		$dsn = "pgsql:{$host}dbname={$database}";$/;"	v
dsn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\PostgresConnector.php	/^		$dsn = $this->getDsn($config);$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $dt = parent::createFromFormat($format, $time);$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $dt = parent::createFromFormat($format, $time, static::safeCreateDateTimeZone($tz));$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $dt = $dt ?: static::now($this->tz);$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $dt = $this->copy()->day(1)->month($this->quarter * 3);$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $dt = $this->copy()->firstOfMonth();$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $dt = $this->copy()->firstOfYear()->modify('+'.$nth.' '.static::$days[$dayOfWeek]);$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function average(Carbon $dt = null)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffFiltered(CarbonInterval $ci, Closure $callback, Carbon $dt = null, $abs = true)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInDays(Carbon $dt = null, $abs = true)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInDaysFiltered(Closure $callback, Carbon $dt = null, $abs = true)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInHours(Carbon $dt = null, $abs = true)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInHoursFiltered(Closure $callback, Carbon $dt = null, $abs = true)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInMinutes(Carbon $dt = null, $abs = true)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInMonths(Carbon $dt = null, $abs = true)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInSeconds(Carbon $dt = null, $abs = true)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInWeekdays(Carbon $dt = null, $abs = true)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInWeekendDays(Carbon $dt = null, $abs = true)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInWeeks(Carbon $dt = null, $abs = true)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffInYears(Carbon $dt = null, $abs = true)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isBirthday(Carbon $dt = null)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function max(Carbon $dt = null)$/;"	v
dt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function min(Carbon $dt = null)$/;"	v
dt1	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $dt1 = $dt2;$/;"	v
dt2	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $dt2 = $temp;$/;"	v
dump	.\Source\application\library\vendor\symfony\translation\Dumper\DumperInterface.php	/^    public function dump(MessageCatalogue $messages, $options = array());$/;"	f
dump	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^    public function dump(MessageCatalogue $messages, $options = array())$/;"	f
dump	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^    public function dump(MessageCatalogue $messages, $options = array())$/;"	f
dumpCatalogue	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private function dumpCatalogue($locale, ConfigCacheInterface $cache)$/;"	f
dumpXliff1	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^    private function dumpXliff1($defaultLocale, MessageCatalogue $messages, $domain, array $options = array())$/;"	f
dumpXliff2	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^    private function dumpXliff2($defaultLocale, MessageCatalogue $messages, $domain, array $options = array())$/;"	f
dumper	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\CsvFileDumperTest.php	/^        $dumper = new CsvFileDumper();$/;"	v
dumper	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^        $dumper = new ConcreteFileDumper();$/;"	v
dumper	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\IcuResFileDumperTest.php	/^        $dumper = new IcuResFileDumper();$/;"	v
dumper	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\IniFileDumperTest.php	/^        $dumper = new IniFileDumper();$/;"	v
dumper	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\JsonFileDumperTest.php	/^        $dumper = new JsonFileDumper();$/;"	v
dumper	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\MoFileDumperTest.php	/^        $dumper = new MoFileDumper();$/;"	v
dumper	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\PhpFileDumperTest.php	/^        $dumper = new PhpFileDumper();$/;"	v
dumper	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\PoFileDumperTest.php	/^        $dumper = new PoFileDumper();$/;"	v
dumper	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\QtFileDumperTest.php	/^        $dumper = new QtFileDumper();$/;"	v
dumper	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php	/^        $dumper = new XliffFileDumper();$/;"	v
dumper	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\YamlFileDumperTest.php	/^        $dumper = new YamlFileDumper();$/;"	v
dumper	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^        $dumper = $this->getMock('Symfony\\Component\\Translation\\Dumper\\DumperInterface');$/;"	v
dumper	.\Source\application\library\vendor\symfony\translation\Writer\TranslationWriter.php	/^        $dumper = $this->dumpers[$format];$/;"	v
dumpers	.\Source\application\library\vendor\symfony\translation\Writer\TranslationWriter.php	/^    private $dumpers = array();$/;"	v
dynamicWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function dynamicWhere($method, $parameters)$/;"	f
e	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^                $e = oci_error($this->resource);$/;"	v
e	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^            $e = oci_error($ociStmt);$/;"	v
e	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^            $e = oci_error($this->resource);$/;"	v
e	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^            $e = oci_error();$/;"	v
e	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^            $e = oci_error($this->oci8);$/;"	v
e	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^            $e = oci_error($this->resource);$/;"	v
e	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function e($value)$/;"	f
each	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function each(Closure $callback)$/;"	f
eagerLoad	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$this->eagerLoad = $eagerLoad;$/;"	v
eagerLoad	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$this->eagerLoad = array_merge($this->eagerLoad, $eagers);$/;"	v
eagerLoad	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected $eagerLoad = array();$/;"	v
eagerLoadRelations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function eagerLoadRelations(array $models)$/;"	f
eagers	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$eagers = $this->parseRelations($relations);$/;"	v
ecdsaKeys	.\Source\application\library\vendor\lcobucci\jwt\test\functional\Keys.php	/^    protected static $ecdsaKeys;$/;"	v
el	.\Source\application\library\Zend\Validator\InArray.php	/^                        $el = (string) $el;$/;"	v
el	.\Source\application\library\Zend\Validator\InArray.php	/^                    $el = $element;$/;"	v
elem	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^                $elem = &$elem[ implode('.', array_slice($parts, $i)) ];$/;"	v
elem	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^            $elem = &$elem[$part];$/;"	v
elem	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^        $elem = &$tree;$/;"	v
empties	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^                $empties = array_fill(0, $count + 1, '-');$/;"	v
emptyWhereProtection	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    protected $emptyWhereProtection = true;$/;"	v
emptyWhereProtection	.\Source\application\library\Zend\Db\Sql\Update.php	/^    protected $emptyWhereProtection = true;$/;"	v
en	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $en = new MessageCatalogue('en');$/;"	v
enableHeaderCheck	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    public function enableHeaderCheck($headerCheck = true)$/;"	f
enableQueryLog	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function enableQueryLog()$/;"	f
enc	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_convert_case($s, $mode, $enc = null) { return p\\Mbstring::mb_convert_case($s, $mode, $enc); }$/;"	v
enc	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strlen($s, $enc = null) { return p\\Mbstring::mb_strlen($s, $enc); }$/;"	v
enc	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strtolower($s, $enc = null) { return p\\Mbstring::mb_strtolower($s, $enc); }$/;"	v
enc	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strtoupper($s, $enc = null) { return p\\Mbstring::mb_strtoupper($s, $enc); }$/;"	v
enc	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strwidth($s, $enc = null) { return p\\Mbstring::mb_strwidth($s, $enc); }$/;"	v
enc	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_substr_count($haystack, $needle, $enc = null) { return p\\Mbstring::mb_substr_count($haystack, $needle, $enc); }$/;"	v
encAttr	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        $encAttr     = $generator('encoding="');$/;"	v
encPos	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        $encPos = strpos($xml, $encAttr);$/;"	v
enclosure	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^        $this->enclosure = $enclosure;$/;"	v
enclosure	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^    private $enclosure = '"';$/;"	v
enclosure	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^    public function setCsvControl($delimiter = ';', $enclosure = '"')$/;"	v
enclosure	.\Source\application\library\vendor\symfony\translation\Loader\CsvFileLoader.php	/^        $this->enclosure = $enclosure;$/;"	v
enclosure	.\Source\application\library\vendor\symfony\translation\Loader\CsvFileLoader.php	/^    private $enclosure = '"';$/;"	v
enclosure	.\Source\application\library\vendor\symfony\translation\Loader\CsvFileLoader.php	/^    public function setCsvControl($delimiter = ';', $enclosure = '"', $escape = '\\\\')$/;"	v
encoder	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^        $this->encoder = $encoder ?: new Encoder();$/;"	v
encoder	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^        Encoder $encoder = null,$/;"	v
encoder	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    private $encoder;$/;"	v
encoder	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^        $this->encoder = $this->getMock(Encoder::class);$/;"	v
encoder	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    protected $encoder;$/;"	v
encoder	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Parsing\EncoderTest.php	/^        $encoder = new Encoder();$/;"	v
encoding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $encoding        = $this->getEncoding();$/;"	v
encoding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $this->encoding = $encodingUpper;$/;"	v
encoding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    protected $encoding = 'UTF-8';$/;"	v
encoding	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^        $encoding        = $this->getEncoding();$/;"	v
encoding	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^        $encoding        = $this->getEncoding();$/;"	v
encoding	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^        $this->encoding = $encodingUpper;$/;"	v
encoding	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^    protected $encoding = 'ASCII';$/;"	v
encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $encoding = null;$/;"	v
encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $encoding = self::$internalEncoding;$/;"	v
encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $encoding = self::getEncoding($encoding);$/;"	v
encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $encoding = strtoupper($encoding);$/;"	v
encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_check_encoding($var = null, $encoding = null)$/;"	v
encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_convert_case($s, $mode, $encoding = null)$/;"	v
encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strlen($s, $encoding = null)$/;"	v
encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strtolower($s, $encoding = null)$/;"	v
encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strtoupper($s, $encoding = null)$/;"	v
encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strwidth($s, $encoding = null)$/;"	v
encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_substr_count($haystack, $needle, $encoding = null)$/;"	v
encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_check_encoding($var = null, $encoding = null) { return p\\Mbstring::mb_check_encoding($var, $encoding); }$/;"	v
encoding	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^        if (false !== $encoding = mb_detect_encoding($string, null, true)) {$/;"	v
encoding	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^        $encoding = strtoupper($dom->encoding);$/;"	v
encoding	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    private function utf8ToCharset($content, $encoding = null)$/;"	v
encoding	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        $encoding = self::substr($xml, $encPos, $quotePos);$/;"	v
encoding	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        foreach (self::getAsciiEncodingMap() as $encoding => $generator) {$/;"	v
encodingList	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $encodingList = array_map('trim', explode(',', $encodingList));$/;"	v
encodingList	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $encodingList = array_map('strtoupper', $encodingList);$/;"	v
encodingList	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $encodingList = array_map('trim', explode(',', $encodingList));$/;"	v
encodingList	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $encodingList = self::$encodingList;$/;"	v
encodingList	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $encodingList = array_map('strtoupper', $encodingList);$/;"	v
encodingList	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    private static $encodingList = array('ASCII', 'UTF-8');$/;"	v
encodingList	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_detect_encoding($str, $encodingList = null, $strict = false)$/;"	v
encodingList	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_detect_encoding($str, $encodingList = null, $strict = false) { return p\\Mbstring::mb_detect_encoding($str, $encodingList, $strict); }$/;"	v
encodingMap	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        $encodingMap = self::getAsciiEncodingMap();$/;"	v
encodingUpper	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $encodingUpper = strtoupper($encoding);$/;"	v
encodingUpper	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^        $encodingUpper      = strtoupper($encoding);$/;"	v
encodingUpper	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^        $encodingUpper = strtoupper($encoding);$/;"	v
encodings	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^    protected static $encodings = array($/;"	v
encodings	.\Source\application\library\Zend\Stdlib\StringWrapper\Intl.php	/^    protected static $encodings = array('UTF-8');$/;"	v
encodings	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^    protected static $encodings = null;$/;"	v
end	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $end = $this;$/;"	v
end	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $end = $dt ?: static::now($this->tz);$/;"	v
endOfCentury	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function endOfCentury()$/;"	f
endOfDay	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function endOfDay()$/;"	f
endOfDecade	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function endOfDecade()$/;"	f
endOfMonth	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function endOfMonth()$/;"	f
endOfWeek	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function endOfWeek()$/;"	f
endOfYear	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function endOfYear()$/;"	f
endsWith	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function endsWith($haystack, $needles)$/;"	f
ends_with	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function ends_with($haystack, $needles)$/;"	f
engine	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public $engine;$/;"	v
entities	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $entities = '';$/;"	v
enum	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function enum($column, array $allowed)$/;"	f
eq	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function eq(Carbon $dt)$/;"	f
equal	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function between(Carbon $dt1, Carbon $dt2, $equal = true)$/;"	v
equalTo	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function equalTo($left, $right, $leftType = self::TYPE_IDENTIFIER, $rightType = self::TYPE_VALUE)$/;"	f
err	.\Source\application\library\Zend\Stdlib\Glob.php	/^        $err = ErrorHandler::stop();$/;"	v
errata	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    protected $errata = array();$/;"	v
errata	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetSet($name, $value, $errata = null, $maxLength = null)$/;"	v
errata	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $errata = array();$/;"	v
erratas	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^            $erratas = array();$/;"	v
error	.\Source\application\library\Alpaca\Log\Log.php	/^    public static function error($string)$/;"	f
error	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^            $error = $this->pdo->errorInfo();$/;"	v
error	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    protected function error($messageKey, $value = null)$/;"	f
error	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $error  = ($reserved) ? self::INVALID_SEGMENT : self::INVALID_MX_RECORD;$/;"	v
error	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $error       = ErrorHandler::stop();$/;"	v
error	.\Source\application\library\Zend\Validator\File\UploadFile.php	/^            $error    = $value['error'];$/;"	v
error	.\Source\application\library\Zend\Validator\File\UploadFile.php	/^            $error    = 0;$/;"	v
error	.\Source\application\library\Zend\Validator\Regex.php	/^        $error         = ErrorHandler::stop();$/;"	v
errorCode	.\Source\application\library\vendor\symfony\translation\Loader\JsonFileLoader.php	/^            if (0 < $errorCode = json_last_error()) {$/;"	v
errorException	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^            $errorException = array_pop(static::$stack);$/;"	v
errorException	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^        $errorException = null;$/;"	v
errorInfo	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^            $errorInfo = $this->resource->errorInfo();$/;"	v
errorInfo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^			$this->errorInfo = $previous->errorInfo;$/;"	v
errorMessage	.\Source\application\library\Alpaca\Tools\Validate.php	/^	private $errorMessage = array($/;"	v
errors	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^            $errors = sqlsrv_errors();$/;"	v
errors	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Exception\ErrorException.php	/^        $this->errors = ($errors === false) ? sqlsrv_errors() : $errors;$/;"	v
errors	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Exception\ErrorException.php	/^    protected $errors = array();$/;"	v
errors	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^            $errors = sqlsrv_errors();$/;"	v
errors	.\Source\application\library\Zend\Validator\Date.php	/^        $errors = DateTime::getLastErrors();$/;"	v
errors	.\Source\application\library\Zend\Validator\DateStep.php	/^        $errors = DateTime::getLastErrors();$/;"	v
errors	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $errors = static::getLastErrors();$/;"	v
errors	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^        $errors = array();$/;"	v
errstr	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^    public static function addError($errno, $errstr = '', $errfile = '', $errline = 0)$/;"	v
es	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $es = new MessageCatalogue('es');$/;"	v
escape	.\Source\application\library\vendor\symfony\translation\Dumper\PoFileDumper.php	/^    private function escape($str)$/;"	f
escape	.\Source\application\library\vendor\symfony\translation\Loader\CsvFileLoader.php	/^        $this->escape = $escape;$/;"	v
escape	.\Source\application\library\vendor\symfony\translation\Loader\CsvFileLoader.php	/^    private $escape = '\\\\';$/;"	v
escapeTarget	.\Source\application\library\vendor\symfony\translation\Dumper\IniFileDumper.php	/^            $escapeTarget = str_replace('"', '\\"', $target);$/;"	v
event	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^        $this->event = ($tableGatewayEvent) ?: new EventFeature\\TableGatewayEvent();$/;"	v
event	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    protected $event = null;$/;"	v
event	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\AggregateHydrator.php	/^        $event = new ExtractEvent($this, $object);$/;"	v
event	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\AggregateHydrator.php	/^        $event = new HydrateEvent($this, $object, $data);$/;"	v
event	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$event = "eloquent.{$event}: ".get_class($this);$/;"	v
eventManager	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^        $this->eventManager = ($eventManager instanceof EventManagerInterface)$/;"	v
eventManager	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^        EventManagerInterface $eventManager = null,$/;"	v
eventManager	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    protected $eventManager = null;$/;"	v
eventManager	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\AggregateHydrator.php	/^        $this->eventManager = $eventManager;$/;"	v
eventManager	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\AggregateHydrator.php	/^    protected $eventManager;$/;"	v
eventManipulation	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->eventManipulation = $eventManipulation;$/;"	v
eventManipulation	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $eventManipulation;$/;"	v
eventObjectCatalog	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->eventObjectCatalog = $eventObjectCatalog;$/;"	v
eventObjectCatalog	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $eventObjectCatalog;$/;"	v
eventObjectSchema	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->eventObjectSchema = $eventObjectSchema;$/;"	v
eventObjectSchema	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $eventObjectSchema;$/;"	v
eventObjectTable	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->eventObjectTable = $eventObjectTable;$/;"	v
eventObjectTable	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $eventObjectTable;$/;"	v
events	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->events = $events;$/;"	v
events	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $events;$/;"	v
events	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^		$events = $this->app['events'];$/;"	v
everythingShouldWorkWhenUsingATokenGeneratedByOtherLibs	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^    public function everythingShouldWorkWhenUsingATokenGeneratedByOtherLibs()$/;"	f
everythingShouldWorkWhenUsingATokenGeneratedByOtherLibs	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^    public function everythingShouldWorkWhenUsingATokenGeneratedByOtherLibs()$/;"	f
everythingShouldWorkWhenUsingATokenGeneratedByOtherLibs	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^    public function everythingShouldWorkWhenUsingATokenGeneratedByOtherLibs()$/;"	f
except	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    public function except($select, $modifier = '')$/;"	f
except	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function except($keys)$/;"	f
except	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$except = $except ?: [$/;"	v
except	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function replicate(array $except = null)$/;"	v
except	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function except($array, $keys)$/;"	f
exception	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    public function collect(Request $request, Response $response, \\Exception $exception = null)$/;"	v
exceptionClass	.\Source\application\library\Zend\Stdlib\Guard\ArrayOrTraversableGuardTrait.php	/^        $exceptionClass = 'Zend\\Stdlib\\Exception\\InvalidArgumentException'$/;"	v
exceptionClass	.\Source\application\library\Zend\Stdlib\Guard\EmptyGuardTrait.php	/^        $exceptionClass = 'Zend\\Stdlib\\Exception\\InvalidArgumentException'$/;"	v
exceptionClass	.\Source\application\library\Zend\Stdlib\Guard\GuardUtils.php	/^        $exceptionClass = self::DEFAULT_EXCEPTION_CLASS$/;"	v
exceptionClass	.\Source\application\library\Zend\Stdlib\Guard\NullGuardTrait.php	/^        $exceptionClass = 'Zend\\Stdlib\\Exception\\InvalidArgumentException'$/;"	v
exchangeArray	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function exchangeArray($array)$/;"	f
exchangeArray	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function exchangeArray($input)$/;"	f
exchangeArray	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function exchangeArray($data)$/;"	f
exchangeArray	.\Source\application\library\Zend\Stdlib\ArraySerializableInterface.php	/^    public function exchangeArray(array $array);$/;"	f
exclude	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\MethodMatchFilter.php	/^        $this->exclude = $exclude;$/;"	v
exclude	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\MethodMatchFilter.php	/^    protected $exclude = null;$/;"	v
exclude	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\MethodMatchFilter.php	/^    public function __construct($method, $exclude = true)$/;"	v
exclude	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $this->exclude = $exclude;$/;"	v
exclude	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    protected $exclude = null;$/;"	v
execute	.\Source\application\library\Zend\Db\Adapter\Driver\ConnectionInterface.php	/^    public function execute($sql);$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    public function execute($sql)$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function execute($parameters = null)$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    public function execute($sql)$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function execute($parameters = null)$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    public function execute($sql)$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function execute($parameters = null)$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function execute($sql)$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function execute($parameters = null)$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    public function execute($sql)$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    public function execute($parameters = null)$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function execute($sql)$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function execute($parameters = null)$/;"	f
execute	.\Source\application\library\Zend\Db\Adapter\Driver\StatementInterface.php	/^    public function execute($parameters = null);$/;"	f
execute	.\Source\application\library\Zend\Validator\StaticValidator.php	/^    public static function execute($value, $classBaseName, array $args = array())$/;"	f
executeDelete	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    protected function executeDelete(Delete $delete)$/;"	f
executeInsert	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    protected function executeInsert(Insert $insert)$/;"	f
executeSelect	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    protected function executeSelect(Select $select)$/;"	f
executeUpdate	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    protected function executeUpdate(Update $update)$/;"	f
exists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$this->exists = false;$/;"	v
exists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->exists = true;$/;"	v
exists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public $exists = false;$/;"	v
exists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function newInstance($attributes = array(), $exists = false)$/;"	v
exists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function setTimestampsOnAttach(array $record, $exists = false)$/;"	v
exists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^		$this->exists = $exists;$/;"	v
exists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	public function __construct(Model $parent, $attributes, $table, $exists = false)$/;"	v
exists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^		$this->exists = true;$/;"	v
exists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function exists()$/;"	f
expandToTree	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^    public static function expandToTree(array $messages)$/;"	f
expectSuccess	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^    protected function validateMatrix($nplural, $matrix, $expectSuccess = true)$/;"	v
expected	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^        $expected = [$/;"	v
expected	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^        $expected = $this->createExpectedData($id);$/;"	v
expected	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^        $expected = $this->createExpectedData();$/;"	v
expected	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^        $expected = $this->createExpectedData(null, $sub);$/;"	v
expected	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^        $expected = $this->createExpectedData(null, null, $iss);$/;"	v
expected	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^        $expected = $this->createExpectedData(null, null, null, $aud);$/;"	v
expected	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^        $expected = $this->createExpectedData(null, null, null, null, 2);$/;"	v
expectedLength	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac.php	/^        $expectedLength = strlen($expected);$/;"	v
expectedMessages	.\Source\application\library\vendor\symfony\translation\Tests\DataCollectorTranslatorTest.php	/^        $expectedMessages = array();$/;"	v
expectedMessages	.\Source\application\library\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php	/^        $expectedMessages = array($/;"	v
expireByExpiryTime	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    protected function expireByExpiryTime(Storage $storage, $name, $key)$/;"	f
expireByHops	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    protected function expireByHops(Storage $storage, $name, $key)$/;"	f
expireKeys	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    protected function expireKeys($key = null)$/;"	f
expireSessionCookie	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function expireSessionCookie();$/;"	f
expireSessionCookie	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function expireSessionCookie()$/;"	f
expired	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $expired = $this->expireKeys($key);$/;"	v
expired	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^        $expired = new ValidationData(self::CURRENT_TIME + 3020);$/;"	v
expires	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $expires   = array_filter($vars, function ($value) use ($container) {$/;"	v
expires	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $expires   = array_flip($expires);$/;"	v
expires	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $expires   = array_map(function () use ($hops, $ts) {$/;"	v
expires	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $expires   = array_map(function () use ($ts) {$/;"	v
explicitRules	.\Source\application\library\vendor\symfony\translation\MessageSelector.php	/^        $explicitRules = array();$/;"	v
explodeLimit	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ExplodeStrategy.php	/^        $this->explodeLimit = ($explodeLimit === null) ? null : (int) $explodeLimit;$/;"	v
explodeLimit	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ExplodeStrategy.php	/^    private $explodeLimit;$/;"	v
explodeLimit	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ExplodeStrategy.php	/^    public function __construct($delimiter = ',', $explodeLimit = null)$/;"	v
expr	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $expr = 1;$/;"	v
expression	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\Check.php	/^        $this->expression = $expression;$/;"	v
expression	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\Check.php	/^    protected $expression;$/;"	v
expression	.\Source\application\library\Zend\Db\Sql\Expression.php	/^        $expression = str_replace('%', '%%', $this->expression);$/;"	v
expression	.\Source\application\library\Zend\Db\Sql\Expression.php	/^        $expression = str_replace(self::PLACEHOLDER, '%s', $expression, $count);$/;"	v
expression	.\Source\application\library\Zend\Db\Sql\Expression.php	/^        $this->expression = $expression;$/;"	v
expression	.\Source\application\library\Zend\Db\Sql\Expression.php	/^        if (!is_string($expression) || $expression == '') {$/;"	v
expression	.\Source\application\library\Zend\Db\Sql\Expression.php	/^    protected $expression = '';$/;"	v
expression	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function expression($expression, $parameters)$/;"	f
expressionParamIndex	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $expressionParamIndex = &$this->instanceParameterIndex[$namedParameterPrefix];$/;"	v
extend	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function extend($abstract, Closure $closure)$/;"	f
extend	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	public function extend($name, callable $resolver)$/;"	f
extend	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^	public function extend(Builder $builder)$/;"	f
extend	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^	public function extend($driver, Closure $callback)$/;"	f
extender	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			$extender = $this->getExtender($abstract, $closure);$/;"	v
extending	.\Source\application\library\Zend\Session\Storage\Factory.php	/^     * Create a storage object from a class extending AbstractSessionArrayStorage$/;"	c
extension	.\Source\application\library\Zend\Validator\File\ExcludeExtension.php	/^        $extension  = substr($filename, strrpos($filename, '.') + 1);$/;"	v
extension	.\Source\application\library\Zend\Validator\File\Extension.php	/^            $extension = explode(',', $extension);$/;"	v
extension	.\Source\application\library\Zend\Validator\File\Extension.php	/^        $extension  = substr($filename, strrpos($filename, '.') + 1);$/;"	v
extension	.\Source\application\library\Zend\Validator\File\Extension.php	/^        $extension = explode(',', $this->options['extension']);$/;"	v
extensions	.\Source\application\library\Zend\Validator\File\ExcludeExtension.php	/^        $extensions = $this->getExtension();$/;"	v
extensions	.\Source\application\library\Zend\Validator\File\Extension.php	/^        $extensions = $this->getExtension();$/;"	v
extensions	.\Source\application\library\Zend\Validator\File\Extension.php	/^        $extensions = array_unique($extensions);$/;"	v
extensions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	protected $extensions = array();$/;"	v
extensions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^	protected $extensions = ['ForceDelete', 'Restore', 'WithTrashed', 'OnlyTrashed'];$/;"	v
extra	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$extra = $this->addUpdatedAtColumn($extra);$/;"	v
extraOpts	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $extraOpts = array($/;"	v
extract	.\Source\application\library\Zend\Stdlib\Extractor\ExtractionInterface.php	/^    public function extract($object);$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\AggregateHydrator.php	/^    public function extract($object)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\ArraySerializable.php	/^    public function extract($object)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    public function extract($object)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\DelegatingHydrator.php	/^    public function extract($object)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\ArrayMapNamingStrategy.php	/^    public function extract($name)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\CompositeNamingStrategy.php	/^    public function extract($name)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\IdentityNamingStrategy.php	/^    public function extract($name)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\MapNamingStrategy.php	/^    public function extract($name)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\NamingStrategyInterface.php	/^    public function extract($name);$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\UnderscoreNamingStrategy.php	/^    public function extract($name)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^    public function extract($object)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^    public function extract($object)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\BooleanStrategy.php	/^    public function extract($value)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^    public function extract($value, $object = null)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DateTimeFormatterStrategy.php	/^    public function extract($value)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DefaultStrategy.php	/^    public function extract($value)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ExplodeStrategy.php	/^    public function extract($value)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^    public function extract($value)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyChain.php	/^    public function extract($value)$/;"	f
extract	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyInterface.php	/^    public function extract($value);$/;"	f
extract	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function extract()$/;"	f
extract	.\Source\application\library\vendor\symfony\translation\Extractor\ChainExtractor.php	/^    public function extract($directory, MessageCatalogue $catalogue)$/;"	f
extract	.\Source\application\library\vendor\symfony\translation\Extractor\ExtractorInterface.php	/^    public function extract($resource, MessageCatalogue $catalogue);$/;"	f
extract	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    private function extract($resource, MessageCatalogue $catalogue, $domain)$/;"	f
extractAlias	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function extractAlias(array $definition)$/;"	f
extractFiles	.\Source\application\library\vendor\symfony\translation\Extractor\AbstractFileExtractor.php	/^    protected function extractFiles($resource)$/;"	f
extractFromDirectory	.\Source\application\library\vendor\symfony\translation\Extractor\AbstractFileExtractor.php	/^    abstract protected function extractFromDirectory($resource);$/;"	f
extractFunc	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^            $this->extractFunc = $extractFunc;$/;"	v
extractFunc	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^            $this->extractFunc = function ($value) {$/;"	v
extractFunc	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^    protected $extractFunc = null;$/;"	v
extractName	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function extractName($name, $object = null)$/;"	f
extractSignature	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^    private function extractSignature($value)$/;"	f
extractValue	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function extractValue($name, $value, $object = null)$/;"	f
extractXliff1	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    private function extractXliff1(\\DOMDocument $dom, MessageCatalogue $catalogue, $domain)$/;"	f
extractXliff2	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    private function extractXliff2(\\DOMDocument $dom, MessageCatalogue $catalogue, $domain)$/;"	f
extracted	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^            $extracted = $this->extractName($name, $object);$/;"	v
extractedData	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^        $this->extractedData = $extractedData;$/;"	v
extractedData	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^        $this->extractedData = array_merge($this->extractedData, $additionalData);$/;"	v
extractedData	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^    protected $extractedData = array();$/;"	v
extractedName	.\Source\application\library\Zend\Stdlib\Hydrator\ArraySerializable.php	/^            $extractedName = $this->extractName($name, $object);$/;"	v
extractedNode	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^            $extractedNode = $queue->extract();$/;"	v
extractionMap	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\ArrayMapNamingStrategy.php	/^        $this->extractionMap = $extractionMap;$/;"	v
extractionMap	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\ArrayMapNamingStrategy.php	/^    private $extractionMap = array();$/;"	v
extractionMethodsCache	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    private $extractionMethodsCache = array();$/;"	v
extractionObject	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^        $this->extractionObject = $extractionObject;$/;"	v
extractionObject	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^    protected $extractionObject;$/;"	v
extractionStrategies	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyChain.php	/^        $extractionStrategies = ArrayUtils::iteratorToArray($extractionStrategies);$/;"	v
extractionStrategies	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyChain.php	/^        $this->extractionStrategies = array_map($/;"	v
extractionStrategies	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyChain.php	/^    private $extractionStrategies;$/;"	v
extractors	.\Source\application\library\vendor\symfony\translation\Extractor\ChainExtractor.php	/^    private $extractors = array();$/;"	v
f	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^				$f = function() {};$/;"	v
factories	.\Source\application\Bootstrap.php	/^                        $factories = array_merge($factories, $m->getFactories()['factories']);$/;"	v
factories	.\Source\application\Bootstrap.php	/^        $factories = array(   $/;"	v
factories	.\Source\application\Bootstrap.php	/^        $factories = array();$/;"	v
factories	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^            $this->factories = array();$/;"	v
factories	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^        $this->factories = $factories;$/;"	v
factories	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^        $this->factories = array_merge($this->factories,$factories);$/;"	v
factories	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^    private $factories = array();$/;"	v
factories	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^    private static function getInstance(array $factories = null)$/;"	v
factories	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^    public function __construct(array $factories = null)$/;"	v
factories	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^    public static function factory(array $factories = null)$/;"	v
factories	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorPluginManager.php	/^    protected $factories = array($/;"	v
factory	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^    public static function factory(array $factories = null)$/;"	f
factory	.\Source\application\library\Zend\Session\Storage\Factory.php	/^    public static function factory($type, $options = array())$/;"	f
factory	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^		$factory = new ConnectionFactory($this->container);$/;"	v
factory	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^		$this->factory = $factory;$/;"	v
factory	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	protected $factory;$/;"	v
factory	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\FactoryTest.php	/^        $factory = new Factory(['test' => $callback]);$/;"	v
failingLangcodes	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^    public function failingLangcodes()$/;"	f
fallback	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $fallback = new MessageCatalogue('fr_FR');$/;"	v
fallback	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $fallback = $catalogue->getFallbackCatalogue();$/;"	v
fallback	.\Source\application\library\vendor\symfony\translation\Translator.php	/^            $fallback = $fallbackCatalogue->getLocale();$/;"	v
fallbackCatalogue	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^                $fallbackCatalogue = $fallbackCatalogue->getFallBackCatalogue();$/;"	v
fallbackCatalogue	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^            $fallbackCatalogue = $catalogue->getFallBackCatalogue();$/;"	v
fallbackCatalogue	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^        $this->fallbackCatalogue = $catalogue;$/;"	v
fallbackCatalogue	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    private $fallbackCatalogue;$/;"	v
fallbackCatalogue	.\Source\application\library\vendor\symfony\translation\Translator.php	/^            $fallbackCatalogue = $fallbackCatalogue->getFallbackCatalogue();$/;"	v
fallbackCatalogue	.\Source\application\library\vendor\symfony\translation\Translator.php	/^            $fallbackCatalogue = new MessageCatalogue($fallback, $this->catalogues[$fallback]->all());$/;"	v
fallbackCatalogue	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $fallbackCatalogue = $catalogue->getFallbackCatalogue();$/;"	v
fallbackContent	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $fallbackContent = $this->getFallbackContent($this->catalogues[$locale]);$/;"	v
fallbackContent	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $fallbackContent = '';$/;"	v
fallbackDirsPsr0	.\Source\application\library\vendor\composer\ClassLoader.php	/^                $this->fallbackDirsPsr0 = array_merge($/;"	v
fallbackDirsPsr0	.\Source\application\library\vendor\composer\ClassLoader.php	/^            $this->fallbackDirsPsr0 = (array) $paths;$/;"	v
fallbackDirsPsr0	.\Source\application\library\vendor\composer\ClassLoader.php	/^    private $fallbackDirsPsr0 = array();$/;"	v
fallbackDirsPsr4	.\Source\application\library\vendor\composer\ClassLoader.php	/^                $this->fallbackDirsPsr4 = array_merge($/;"	v
fallbackDirsPsr4	.\Source\application\library\vendor\composer\ClassLoader.php	/^            $this->fallbackDirsPsr4 = (array) $paths;$/;"	v
fallbackDirsPsr4	.\Source\application\library\vendor\composer\ClassLoader.php	/^    private $fallbackDirsPsr4 = array();$/;"	v
fallbackGlob	.\Source\application\library\Zend\Stdlib\Glob.php	/^    protected static function fallbackGlob($pattern, $flags)$/;"	f
fallbackIncrementalIterationLogic	.\Source\application\library\Zend\Validator\DateStep.php	/^    private function fallbackIncrementalIterationLogic($/;"	f
fallbackLocales	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $this->fallbackLocales = $locales;$/;"	v
fallbackLocales	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private $fallbackLocales = array();$/;"	v
fallbackSuffix	.\Source\application\library\vendor\symfony\translation\Translator.php	/^            $fallbackSuffix = ucfirst(preg_replace($replacementPattern, '_', $fallback));$/;"	v
falseValue	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\BooleanStrategy.php	/^        $this->falseValue = $falseValue;$/;"	v
falseValue	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\BooleanStrategy.php	/^    private $falseValue;$/;"	v
farParent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$this->farParent = $farParent;$/;"	v
farParent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	protected $farParent;$/;"	v
farthest	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function farthest(Carbon $dt1, Carbon $dt2)$/;"	f
feature	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^                $feature = $potentialFeature;$/;"	v
feature	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^        $feature = false;$/;"	v
feature	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^                $feature = $potentialFeature;$/;"	v
feature	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^        $feature = false;$/;"	v
featureSet	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^            $this->featureSet = new Feature\\FeatureSet;$/;"	v
featureSet	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    protected $featureSet = null;$/;"	v
featureSet	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^            $this->featureSet = new Feature\\FeatureSet;$/;"	v
featureSet	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    protected $featureSet = null;$/;"	v
featureSet	.\Source\application\library\Zend\Db\TableGateway\TableGateway.php	/^                $this->featureSet = $features;$/;"	v
featureSet	.\Source\application\library\Zend\Db\TableGateway\TableGateway.php	/^                $this->featureSet = new Feature\\FeatureSet($features);$/;"	v
featureSet	.\Source\application\library\Zend\Db\TableGateway\TableGateway.php	/^            $this->featureSet = new Feature\\FeatureSet();$/;"	v
features	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    protected $features = array();$/;"	v
features	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    protected $features = array();$/;"	v
features	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function __construct(array $features = array())$/;"	v
features	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    protected $features = array();$/;"	v
features	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function __construct(array $features = array())$/;"	v
features	.\Source\application\library\Zend\Db\TableGateway\TableGateway.php	/^                $features = array($features);$/;"	v
features	.\Source\application\library\Zend\Db\TableGateway\TableGateway.php	/^    public function __construct($table, AdapterInterface $adapter, $features = null, ResultSetInterface $resultSetPrototype = null, Sql $sql = null)$/;"	v
fetch	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function fetch($key)$/;"	f
fetch	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function fetch($array, $key)$/;"	f
fetch	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function fetch($key)$/;"	f
fetchMode	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^        $this->fetchMode = (int) $fetchMode;$/;"	v
fetchMode	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    protected $fetchMode = \\PDO::FETCH_ASSOC;$/;"	v
fetchMode	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->fetchMode = $fetchMode;$/;"	v
fetchMode	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $fetchMode = PDO::FETCH_ASSOC;$/;"	v
fetchPragma	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function fetchPragma($name, $value = null, $schema = null)$/;"	f
field	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $this->field  = (string) $field;$/;"	v
field	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    protected $field = '';$/;"	v
fieldCount	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->fieldCount = $dataSource->getFieldCount();$/;"	v
fieldCount	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->fieldCount = $row->count();$/;"	v
fieldCount	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->fieldCount = 0;$/;"	v
fieldCount	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $this->fieldCount = count($first);$/;"	v
fieldCount	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^        $this->fieldCount = count($row);$/;"	v
fieldCount	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    protected $fieldCount = null;$/;"	v
file	.\Source\application\library\Zend\Validator\File\Count.php	/^            $file = array($file);$/;"	v
file	.\Source\application\library\Zend\Validator\File\Count.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\Crc32.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Crc32.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\Crc32.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Crc32.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\ExcludeExtension.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\ExcludeExtension.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\ExcludeExtension.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\ExcludeExtension.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\Exists.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Exists.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\Exists.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Exists.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\Extension.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Extension.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\Extension.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Extension.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^                $file = $files;$/;"	v
file	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\Hash.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Hash.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\Hash.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Hash.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\Md5.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Md5.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\Md5.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Md5.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\NotExists.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\NotExists.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\NotExists.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\NotExists.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\Sha1.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Sha1.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\Sha1.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Sha1.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\Size.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Size.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\Size.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\Size.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\Upload.php	/^            foreach ($this->getFiles() as $file => $content) {$/;"	v
file	.\Source\application\library\Zend\Validator\File\Upload.php	/^        foreach ($files as $file => $content) {$/;"	v
file	.\Source\application\library\Zend\Validator\File\Upload.php	/^        foreach ($this->options['files'] as $file => $content) {$/;"	v
file	.\Source\application\library\Zend\Validator\File\Upload.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\Zend\Validator\File\UploadFile.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\UploadFile.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\WordCount.php	/^            $file     = $file['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\WordCount.php	/^            $file     = $value;$/;"	v
file	.\Source\application\library\Zend\Validator\File\WordCount.php	/^            $file     = $value['tmp_name'];$/;"	v
file	.\Source\application\library\Zend\Validator\File\WordCount.php	/^    public function isValid($value, $file = null)$/;"	v
file	.\Source\application\library\vendor\composer\ClassLoader.php	/^            $file = $this->findFileWithExtension($class, '.hh');$/;"	v
file	.\Source\application\library\vendor\composer\ClassLoader.php	/^        $file = $this->findFileWithExtension($class, '.php');$/;"	v
file	.\Source\application\library\vendor\composer\ClassLoader.php	/^        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {$/;"	v
file	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^		$file = pathinfo($this->creator->create($name, $path, $table, $create), PATHINFO_FILENAME);$/;"	v
file	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$file = $migration->migration;$/;"	v
file	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$file = implode('_', array_slice(explode('_', $file), 4));$/;"	v
file	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^	 * Load the given class file.$/;"	c
file	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^        $file = substr($content, 7);$/;"	v
file	.\Source\application\library\vendor\symfony\translation\Loader\CsvFileLoader.php	/^            $file = new \\SplFileObject($resource, 'rb');$/;"	v
file	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^        $file = $tempDir.'\/messages.en.concrete';$/;"	v
file	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^        $file = $translationsDir.'\/messages.en.concrete';$/;"	v
file	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^        $file = tempnam(sys_get_temp_dir(), 'ZendXml_Security');$/;"	v
fileIdentifier	.\Source\application\library\vendor\composer\autoload_real.php	/^        foreach ($includeFiles as $fileIdentifier => $file) {$/;"	v
fileName	.\Source\application\library\vendor\zendframework\zendxml\tests\Bootstrap.php	/^            $fileName  = str_replace('\\\\', DIRECTORY_SEPARATOR, $namespace) . DIRECTORY_SEPARATOR;$/;"	v
fileName	.\Source\application\library\vendor\zendframework\zendxml\tests\Bootstrap.php	/^        $fileName  = '';$/;"	v
filehash	.\Source\application\library\Zend\Validator\File\Crc32.php	/^        $filehash = hash_file('crc32', $file);$/;"	v
filehash	.\Source\application\library\Zend\Validator\File\Hash.php	/^            $filehash = hash_file($algorithm, $file);$/;"	v
filehash	.\Source\application\library\Zend\Validator\File\Md5.php	/^        $filehash = hash_file('md5', $file);$/;"	v
filehash	.\Source\application\library\Zend\Validator\File\Sha1.php	/^        $filehash = hash_file('sha1', $file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Crc32.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Crc32.php	/^            $filename = $value['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Crc32.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\ExcludeExtension.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\ExcludeExtension.php	/^            $filename = $value['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\ExcludeExtension.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^            $filename = $value['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Exists.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Exists.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Extension.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Extension.php	/^            $filename = $value['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Extension.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Hash.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Hash.php	/^            $filename = $value['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Hash.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^            $filename = $value['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Md5.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Md5.php	/^            $filename = $value['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Md5.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $filename = $value['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\NotExists.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\NotExists.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Sha1.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Sha1.php	/^            $filename = $value['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Sha1.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Size.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Size.php	/^            $filename = $value['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\Size.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\UploadFile.php	/^            $filename = $value['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\UploadFile.php	/^            $filename = basename($file);$/;"	v
filename	.\Source\application\library\Zend\Validator\File\WordCount.php	/^            $filename = $file['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\WordCount.php	/^            $filename = $value['name'];$/;"	v
filename	.\Source\application\library\Zend\Validator\File\WordCount.php	/^            $filename = basename($file);$/;"	v
files	.\Source\application\library\Zend\Validator\File\Count.php	/^    protected $files;$/;"	v
files	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^                $files = $files['tmp_name'];$/;"	v
files	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^        $this->files = array();$/;"	v
files	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^    protected $files;$/;"	v
files	.\Source\application\library\Zend\Validator\File\Upload.php	/^                    $files = array_merge($files, $this->getFiles($file));$/;"	v
files	.\Source\application\library\Zend\Validator\File\Upload.php	/^            $files = array_merge($files, $this->getFiles($value));$/;"	v
files	.\Source\application\library\Zend\Validator\File\Upload.php	/^        $files = array();$/;"	v
files	.\Source\application\library\vendor\composer\ClassLoader.php	/^     * Turns on searching the include path for class files.$/;"	c
files	.\Source\application\library\vendor\composer\autoload_static.php	/^    public static $files = array ($/;"	v
files	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^		$this->files = $files;$/;"	v
files	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	protected $files;$/;"	v
files	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$files = $this->files->glob($path.'\/*_*.php');$/;"	v
files	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$files = $this->getMigrationFiles($path);$/;"	v
files	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$files = array_map(function($file)$/;"	v
files	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$this->files = $files;$/;"	v
files	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	protected $files;$/;"	v
files	.\Source\application\library\vendor\symfony\translation\Extractor\AbstractFileExtractor.php	/^            $files = $this->canBeExtracted($resource) ? array($this->toSplFileInfo($resource)) : array();$/;"	v
files	.\Source\application\library\vendor\symfony\translation\Extractor\AbstractFileExtractor.php	/^            $files = $this->extractFromDirectory($resource);$/;"	v
files	.\Source\application\library\vendor\symfony\translation\Extractor\AbstractFileExtractor.php	/^            $files = array();$/;"	v
filetype	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^            $filetype = $file['type'];$/;"	v
filetype	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^            $filetype = $value['type'];$/;"	v
filetype	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^            $filetype = null;$/;"	v
filetype	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $filetype = $file['type'];$/;"	v
filetype	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $filetype = $value['type'];$/;"	v
filetype	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $filetype = null;$/;"	v
fill	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^				$fill = array($column => $value);$/;"	v
fill	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function fill(array $attributes)$/;"	f
fillable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->fillable = $fillable;$/;"	v
fillable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $fillable = array();$/;"	v
fillable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function fillable(array $fillable)$/;"	f
fillableFromArray	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function fillableFromArray(array $attributes)$/;"	f
filter	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function filter(array $data, $callback, $flag = null)$/;"	f
filter	.\Source\application\library\Zend\Stdlib\Hydrator\ArraySerializable.php	/^        $filter = $this->getFilter();$/;"	v
filter	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^                $filter = new FilterComposite($/;"	v
filter	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^            $filter                                     = $this->filterComposite;$/;"	v
filter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^    public function filter($property)$/;"	f
filter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterInterface.php	/^    public function filter($property);$/;"	f
filter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\GetFilter.php	/^    public function filter($property)$/;"	f
filter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\HasFilter.php	/^    public function filter($property)$/;"	f
filter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\IsFilter.php	/^    public function filter($property)$/;"	f
filter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\MethodMatchFilter.php	/^    public function filter($property)$/;"	f
filter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\NumberOfParameterFilter.php	/^    public function filter($property)$/;"	f
filter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\OptionalParametersFilter.php	/^    public function filter($property)$/;"	f
filter	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\UnderscoreNamingStrategy.php	/^        $filter = new FilterChain();$/;"	v
filter	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^        $filter = $this->getFilter();$/;"	v
filter	.\Source\application\library\Zend\Validator\Digits.php	/^    protected static $filter = null;$/;"	v
filter	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function filter(Closure $callback)$/;"	f
filterComposite	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^        $this->filterComposite = new FilterComposite();$/;"	v
filterComposite	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    protected $filterComposite;$/;"	v
filtered	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^		$filtered = array();$/;"	v
find	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function find($id, $columns = array('*'))$/;"	f
find	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function find($key, $default = null)$/;"	f
find	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function find($id, $columns = array('*'))$/;"	f
find	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function find($id, $columns = array('*'))$/;"	f
findFile	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function findFile($class)$/;"	f
findFileWithExtension	.\Source\application\library\vendor\composer\ClassLoader.php	/^    private function findFileWithExtension($class, $ext)$/;"	f
findMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function findMany($id, $columns = array('*'))$/;"	f
findOrFail	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function findOrFail($id, $columns = array('*'))$/;"	f
findOrFail	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function findOrFail($id, $columns = array('*'))$/;"	f
findOrNew	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function findOrNew($id, $columns = array('*'))$/;"	f
findParameterValue	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $findParameterValue = function (array $names) use ($p) {$/;"	v
findParameterValue	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $findParameterValue = function (array $names) use ($p) {$/;"	v
findParameterValue	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $findParameterValue = function (array $names) use ($p) {$/;"	v
findParameterValue	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $findParameterValue = function (array $names) use ($p) {$/;"	v
finder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$finder = substr($method, 5);$/;"	v
finfo	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^                $this->finfo = finfo_open(FILEINFO_MIME_TYPE);$/;"	v
finfo	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^                $this->finfo = finfo_open(FILEINFO_MIME_TYPE, $mimefile);$/;"	v
finfo	.\Source\application\library\Zend\Validator\File\MimeType.php	/^                $this->finfo = finfo_open(FILEINFO_MIME_TYPE);$/;"	v
finfo	.\Source\application\library\Zend\Validator\File\MimeType.php	/^                $this->finfo = finfo_open(FILEINFO_MIME_TYPE, $mimefile);$/;"	v
finfo	.\Source\application\library\Zend\Validator\File\MimeType.php	/^                $this->finfo = null;$/;"	v
finfo	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $this->finfo = finfo_open(FILEINFO_MIME_TYPE, $file);$/;"	v
finfo	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    protected $finfo;$/;"	v
finish	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^			$finish = $query->offset + $query->limit;$/;"	v
finish	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function finish($value, $cap)$/;"	f
finishSave	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function finishSave(array $options)$/;"	f
fire	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\InstallCommand.php	/^	public function fire()$/;"	f
fire	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^	public function fire()$/;"	f
fire	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^	public function fire()$/;"	f
fire	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RefreshCommand.php	/^	public function fire()$/;"	f
fire	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\ResetCommand.php	/^	public function fire()$/;"	f
fire	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RollbackCommand.php	/^	public function fire()$/;"	f
fire	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^	public function fire()$/;"	f
fire	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function fire($event, $payload = array(), $halt = false)$/;"	f
fireCallbackArray	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function fireCallbackArray($object, array $callbacks)$/;"	f
fireConnectionEvent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected function fireConnectionEvent($event)$/;"	f
fireModelEvent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function fireModelEvent($event, $halt = true)$/;"	f
firePostCreateHooks	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	protected function firePostCreateHooks()$/;"	f
fireResolvingCallbacks	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function fireResolvingCallbacks($abstract, $object)$/;"	f
firing	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	protected $firing = array();$/;"	v
firing	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function firing()$/;"	f
first	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $first = current($dataSource);$/;"	v
first	.\Source\application\library\Zend\Validator\Barcode\Codabar.php	/^            $first = $value[0];$/;"	v
first	.\Source\application\library\vendor\composer\ClassLoader.php	/^        $first = $class[0];$/;"	v
first	.\Source\application\library\vendor\composer\ClassLoader.php	/^        $first = $prefix[0];$/;"	v
first	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function first($columns = array('*'))$/;"	f
first	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function first($columns = array('*'))$/;"	f
first	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function first($columns = array('*'))$/;"	f
first	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$first = $this->wrap($clause['first']);$/;"	v
first	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function first($array, $callback, $default = null)$/;"	f
first	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function first(Closure $callback = null, $default = null)$/;"	f
first	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function first($key = null, $format = null)$/;"	f
firstArgument	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^            $firstArgument = array_shift($options);$/;"	v
firstByAttributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected static function firstByAttributes($attributes)$/;"	f
firstKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$firstKey = $firstKey ?: $this->getForeignKey();$/;"	v
firstKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function hasManyThrough($related, $through, $firstKey = null, $secondKey = null)$/;"	v
firstKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$this->firstKey = $firstKey;$/;"	v
firstKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	protected $firstKey;$/;"	v
firstOfMonth	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function firstOfMonth($dayOfWeek = null)$/;"	f
firstOfQuarter	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function firstOfQuarter($dayOfWeek = null)$/;"	f
firstOfYear	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function firstOfYear($dayOfWeek = null)$/;"	f
firstOrCreate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function firstOrCreate(array $attributes)$/;"	f
firstOrFail	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function firstOrFail($columns = array('*'))$/;"	f
firstOrFail	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function firstOrFail($columns = array('*'))$/;"	f
firstOrNew	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function firstOrNew(array $attributes)$/;"	f
fixXmlLocation	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    private function fixXmlLocation($schemaSource, $xmlUri)$/;"	f
fixum	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $fixum  = strlen($value);$/;"	v
flag	.\Source\application\library\Zend\Db\Sql\Insert.php	/^        if ($this->select && $flag == self::VALUES_MERGE) {$/;"	v
flag	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    public function values($values, $flag = self::VALUES_SET)$/;"	v
flag	.\Source\application\library\Zend\Db\Sql\Update.php	/^    public function set(array $values, $flag = self::VALUES_SET)$/;"	v
flag	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^        $this->flag = $flags;$/;"	v
flag	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    protected $flag;$/;"	v
flag	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function filter(array $data, $callback, $flag = null)$/;"	v
flagMap	.\Source\application\library\Zend\Stdlib\Glob.php	/^            $flagMap = array($/;"	v
flags	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^        $flags = ArrayObject::ARRAY_AS_PROPS,$/;"	v
flags	.\Source\application\library\Zend\Session\Storage\Factory.php	/^            $flags = $options['flags'];$/;"	v
flags	.\Source\application\library\Zend\Session\Storage\Factory.php	/^        $flags         = ArrayObject::ARRAY_AS_PROPS;$/;"	v
flags	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^    public function __construct($input = null, $flags = ArrayObject::ARRAY_AS_PROPS, $iteratorClass = '\\\\ArrayIterator')$/;"	v
flags	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function __construct($input = array(), $flags = self::STD_PROP_LIST, $iteratorClass = 'ArrayIterator')$/;"	v
flags	.\Source\application\library\Zend\Stdlib\Glob.php	/^    public static function glob($pattern, $flags = 0, $forceFallback = false)$/;"	v
flags	.\Source\application\library\vendor\symfony\translation\Dumper\JsonFileDumper.php	/^            $flags = $options['json_encoding'];$/;"	v
flags	.\Source\application\library\vendor\symfony\translation\Dumper\JsonFileDumper.php	/^            $flags = defined('JSON_PRETTY_PRINT') ? JSON_PRETTY_PRINT : 0;$/;"	v
flags	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^                $flags = array();$/;"	v
flags	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^                $flags = array_map('trim', explode(',', substr($line, 2)));$/;"	v
flags	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^        $flags = array();$/;"	v
flatten	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function flatten($array)$/;"	f
flatten	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function flatten()$/;"	f
flatten	.\Source\application\library\vendor\symfony\translation\Loader\ArrayLoader.php	/^    private function flatten(array &$messages, array $subnode = null, $path = null)$/;"	f
flatten	.\Source\application\library\vendor\symfony\translation\Loader\IcuResFileLoader.php	/^    protected function flatten(\\ResourceBundle $rb, array &$messages = array(), $path = null)$/;"	f
flip	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function flip()$/;"	f
flip	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^		$flip = $separator == '-' ? '_' : '-';$/;"	v
flipMapping	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\MapNamingStrategy.php	/^    protected function flipMapping(array $array)$/;"	f
float	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function float($column, $total = 8, $places = 2)$/;"	f
flush	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function flush($event)$/;"	f
flushEventListeners	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function flushEventListeners()$/;"	f
flushQueryLog	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function flushQueryLog()$/;"	f
fmod	.\Source\application\library\Zend\Validator\Step.php	/^        $fmod = $this->fmod($value - $this->baseValue, $this->step);$/;"	v
fmod	.\Source\application\library\Zend\Validator\Step.php	/^    protected function fmod($x, $y)$/;"	f
fname	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $fname = 'set' . ucfirst($name);$/;"	v
fname2	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $fname2 = 'is' . ucfirst($name);$/;"	v
for	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Float.php	/^ * Stub class for backwards compatibility.$/;"	c
for	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^ * Defines an ArrayObject interface for accessing session storage, with options$/;"	i
for	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^ * Utility class for testing and manipulation of PHP arrays.$/;"	c
for	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^ * Utility class for handling strings of different character encodings$/;"	c
for	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphPivot.php	/^	 * Set the morph class for the pivot.$/;"	c
for	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^			\/\/ function for the component which is responsible for making the SQL.$/;"	f
for	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^			\/\/ to run multiple handler methods in a single class for convenience.$/;"	c
for	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	 * Get the mockable class for the bound instance.$/;"	c
for	.\Source\application\library\vendor\lcobucci\jwt\src\Claim.php	/^ * Basic interface for token claims$/;"	i
for	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Validatable.php	/^ * Basic interface for validatable token claims$/;"	i
for	.\Source\application\library\vendor\lcobucci\jwt\src\Signer.php	/^ * Basic interface for token signers$/;"	i
for	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\BaseSigner.php	/^ * Base class for signers$/;"	c
for	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^ * Base class for ECDSA signers$/;"	c
for	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^ * Base class for ECDSA signers$/;"	c
for	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac.php	/^ * Base class for hmac signers$/;"	c
for	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa.php	/^ * Base class for RSASSA-PKCS1 signers$/;"	c
for	.\Source\application\library\vendor\symfony\translation\Exception\ExceptionInterface.php	/^ * Exception interface for all exceptions thrown by the component.$/;"	i
forHumans	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public function forHumans()$/;"	f
forPage	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function forPage($page, $perPage = 15)$/;"	f
force	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RefreshCommand.php	/^		$force = $this->input->getOption('force');$/;"	v
forceDelete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function forceDelete()$/;"	f
forceDelete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function forceDelete()$/;"	f
forceDelete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	public function forceDelete()$/;"	f
forceDeleting	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^		$this->forceDeleting = false;$/;"	v
forceDeleting	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^		$this->forceDeleting = true;$/;"	v
forceDeleting	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	protected $forceDeleting = false;$/;"	v
foreign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^		$foreign = $this->foreignKey;$/;"	v
foreign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$foreign = $this->foreignKey;$/;"	v
foreign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$foreign = $this->getForeignKey();$/;"	v
foreign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$foreign = $this->firstKey;$/;"	v
foreign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^		$foreign = $this->getPlainForeignKey();$/;"	v
foreign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^		$foreign = $this->foreignKey;$/;"	v
foreign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^		$foreign = $this->getAttribute($this->foreignKey);$/;"	v
foreign	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function foreign($columns, $name = null)$/;"	f
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$foreignKey = snake_case($relation).'_id';$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$foreignKey = $foreignKey ?: $name.'_id';$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$foreignKey = $foreignKey ?: $this->getForeignKey();$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function belongsTo($related, $foreignKey = null, $otherKey = null, $relation = null)$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function hasMany($related, $foreignKey = null, $localKey = null)$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function hasOne($related, $foreignKey = null, $localKey = null)$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^		$this->foreignKey = $foreignKey;$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	protected $foreignKey;$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$this->foreignKey = $foreignKey;$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected $foreignKey;$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$foreignKey = $this->related->getTable().'.'.$this->secondKey;$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^		$this->foreignKey = $foreignKey;$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	protected $foreignKey;$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^		$this->foreignKey = $foreignKey;$/;"	v
foreignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	protected $foreignKey;$/;"	v
foreignKeyDeleteRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^        $this->foreignKeyDeleteRule = $foreignKeyDeleteRule;$/;"	v
foreignKeyDeleteRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    protected $foreignKeyDeleteRule = null;$/;"	v
foreignKeyUpdateRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^        $this->foreignKeyUpdateRule = $foreignKeyUpdateRule;$/;"	v
foreignKeyUpdateRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    protected $foreignKeyUpdateRule = null;$/;"	v
foreignKeys	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $foreignKeys = $this->fetchPragma('foreign_key_list', $table, $schema);$/;"	v
foreigns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$foreigns = $this->getCommandsByName($blueprint, 'foreign');$/;"	v
forget	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function forget($event)$/;"	f
forget	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function forget(&$array, $keys)$/;"	f
forget	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function forget($key)$/;"	f
forgetInstance	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function forgetInstance($abstract)$/;"	f
forgetInstances	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function forgetInstances()$/;"	f
forgetMe	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function forgetMe();$/;"	f
forgetMe	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function forgetMe()$/;"	f
forgetQueued	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function forgetQueued()$/;"	f
form	.\Source\application\module\Index\Module.php	/^                \/\/     $form = new TestForm();$/;"	v
format	.\Source\application\library\Zend\Stdlib\DateTime.php	/^            $format = 'Y-m-d\\TH:i:s.uO';$/;"	v
format	.\Source\application\library\Zend\Stdlib\DateTime.php	/^        $format = self::ISO8601;$/;"	v
format	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DateTimeFormatterStrategy.php	/^        $this->format   = (string) $format;$/;"	v
format	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DateTimeFormatterStrategy.php	/^    private $format;$/;"	v
format	.\Source\application\library\Zend\Validator\Date.php	/^        $this->format = (empty($format)) ? self::FORMAT_DEFAULT : $format;$/;"	v
format	.\Source\application\library\Zend\Validator\Date.php	/^    protected $format = self::FORMAT_DEFAULT;$/;"	v
format	.\Source\application\library\Zend\Validator\Iban.php	/^        $format = str_replace($/;"	v
format	.\Source\application\library\Zend\Validator\Iban.php	/^        $format = substr($value, 4) . substr($value, 0, 4);$/;"	v
format	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$format = $this->getDateFormat();$/;"	v
format	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$format = $this->getDateFormat();$/;"	v
format	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^		$format = $this->checkFormat($format);$/;"	v
format	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^		$this->format = $format;$/;"	v
format	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	protected $format = ':message';$/;"	v
format	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function first($key = null, $format = null)$/;"	v
format	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function get($key, $format = null)$/;"	v
format	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $format = preg_replace('#(?<!%)((?:%%)*)%e#', '\\1%#d', $format);$/;"	v
format	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $format = 'some_format';$/;"	v
formatCatalogue	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	f
formatCatalogue	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^    abstract public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array());$/;"	f
formatCatalogue	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	f
formatCatalogue	.\Source\application\library\vendor\symfony\translation\Dumper\IniFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	f
formatCatalogue	.\Source\application\library\vendor\symfony\translation\Dumper\JsonFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	f
formatCatalogue	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	f
formatCatalogue	.\Source\application\library\vendor\symfony\translation\Dumper\PhpFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	f
formatCatalogue	.\Source\application\library\vendor\symfony\translation\Dumper\PoFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	f
formatCatalogue	.\Source\application\library\vendor\symfony\translation\Dumper\QtFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	f
formatCatalogue	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	f
formatCatalogue	.\Source\application\library\vendor\symfony\translation\Dumper\YamlFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	f
formatCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	f
formatHash	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected function formatHash($token, $tokenId)$/;"	f
formatLocalized	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function formatLocalized($format)$/;"	f
formatMessage	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^	protected function formatMessage($sql, $bindings, $previous)$/;"	f
formatParameterName	.\Source\application\library\Zend\Db\Adapter\Driver\DriverInterface.php	/^    public function formatParameterName($name, $type = null);$/;"	f
formatParameterName	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function formatParameterName($name, $type = null)$/;"	f
formatParameterName	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function formatParameterName($name, $type = null)$/;"	f
formatParameterName	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function formatParameterName($name, $type = null)$/;"	f
formatParameterName	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function formatParameterName($name, $type = null)$/;"	f
formatParameterName	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function formatParameterName($name, $type = null)$/;"	f
formatParameterName	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function formatParameterName($name, $type = null)$/;"	f
formatSyncList	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function formatSyncList(array $records)$/;"	f
formats	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            case array_key_exists($name, $formats = array($/;"	v
forward	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public function forward($path)$/;"	f
found	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^                $found = true;$/;"	v
found	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^        $found = false;$/;"	v
found	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^                    $found = true;$/;"	v
found	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^            $found = (0 == $count);$/;"	v
found	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^            $found = (1 == $count);$/;"	v
found	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^            $found = true;$/;"	v
found	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $found  = false;$/;"	v
found	.\Source\application\library\Zend\Validator\NotEmpty.php	/^                        $found = true;$/;"	v
found	.\Source\application\library\Zend\Validator\NotEmpty.php	/^                $found    = false;$/;"	v
foundl	.\Source\application\library\Zend\Validator\CreditCard.php	/^                        $foundl = true;$/;"	v
foundl	.\Source\application\library\Zend\Validator\CreditCard.php	/^        $foundl = false;$/;"	v
foundp	.\Source\application\library\Zend\Validator\CreditCard.php	/^                    $foundp = true;$/;"	v
foundp	.\Source\application\library\Zend\Validator\CreditCard.php	/^        $foundp = false;$/;"	v
fr	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $fr = new MessageCatalogue('fr');$/;"	v
fresh	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^		$fresh = $this->makeConnection($name);$/;"	v
fresh	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$fresh = $this->parent->freshTimestamp();$/;"	v
freshTimestamp	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function freshTimestamp()$/;"	f
freshTimestampString	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function freshTimestampString()$/;"	f
from	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    public function from($table)$/;"	f
from	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function from($table)$/;"	f
from	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $from = $reverse ? $convertEncoding : $encoding;$/;"	v
from	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		\/\/ First we will resolve a "real" instance of the migration class from this$/;"	c
from	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->from = $table;$/;"	v
from	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $from;$/;"	v
from	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function from($table)$/;"	f
from	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^		$from = $this->compileUpdateFrom($query);$/;"	v
from	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^		$from = parent::compileFrom($query, $table);$/;"	v
from	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^		$from = $this->wrapTable($blueprint);$/;"	v
from	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^		$from = $this->wrapTable($blueprint);$/;"	v
from	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$from = $this->wrapTable($blueprint);$/;"	v
from	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^		$from = $this->wrapTable($blueprint);$/;"	v
from	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_convert_encoding($s, $to, $from = null) { return p\\Mbstring::mb_convert_encoding($s, $to, $from); }$/;"	v
fromArray	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function fromArray(array $array)$/;"	f
fromArray	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function fromArray(array $array)$/;"	f
fromArray	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^    public function fromArray(array $array)$/;"	f
fromArray	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^    public function fromArray(array $array);$/;"	f
fromArray	.\Source\application\library\Zend\Stdlib\Parameters.php	/^    public function fromArray(array $values)$/;"	f
fromArray	.\Source\application\library\Zend\Stdlib\ParametersInterface.php	/^    public function fromArray(array $values);$/;"	f
fromByteString	.\Source\application\library\Zend\Validator\File\Size.php	/^    protected function fromByteString($size)$/;"	f
fromDateTime	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function fromDateTime($value)$/;"	f
fromEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^        $fromEncoding = $reverse ? $convertEncoding : $encoding;$/;"	v
fromEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^        $fromEncoding = $reverse ? $convertEncoding : $encoding;$/;"	v
fromEncoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $fromEncoding = 'Windows-1252';$/;"	v
fromEncoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $fromEncoding = $toEncoding;$/;"	v
fromEncoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $fromEncoding = 'UTF-8';$/;"	v
fromEncoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $fromEncoding = self::getEncoding($fromEncoding);$/;"	v
fromEncoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $fromEncoding = self::mb_detect_encoding($s, $fromEncoding);$/;"	v
fromEncoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_convert_encoding($s, $toEncoding, $fromEncoding = null)$/;"	v
fromString	.\Source\application\library\Zend\Stdlib\Parameters.php	/^    public function fromString($string)$/;"	f
fromString	.\Source\application\library\Zend\Stdlib\ParametersInterface.php	/^    public function fromString($string);$/;"	f
fromTable	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^                $fromTable = $column['fromTable'];$/;"	v
fromTable	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $fromTable = '';$/;"	v
fromTable	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $fromTable = $platform->quoteIdentifier($alias);$/;"	v
fromTable	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $fromTable = $table;$/;"	v
fromTable	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $fromTable = '';$/;"	v
froms	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^		$froms = array();$/;"	v
fullKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$fullKey = $related->getQualifiedKeyName();$/;"	v
fullpath	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^            $fullpath = $options['path'].'\/'.$this->getRelativePath($domain, $messages->getLocale());$/;"	v
func	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^        $func = $this->extractFunc;$/;"	v
func	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^        $func = $this->hydrateFunc;$/;"	v
functions	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^        $functions = array();$/;"	v
functions	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^		$functions = array('mb_strtolower', 'mb_strtoupper', 'ucfirst', 'ucwords');$/;"	v
gatherKeysByType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	protected function gatherKeysByType($type)$/;"	f
gc	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    public function gc($maxlifetime)$/;"	f
gc	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^    public function gc($maxlifetime)$/;"	f
gc	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^    public function gc($maxlifetime)$/;"	f
gc	.\Source\application\library\Zend\Session\SaveHandler\SaveHandlerInterface.php	/^    public function gc($maxlifetime);$/;"	f
gcDivisor	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $gcDivisor = (int) $gcDivisor;$/;"	v
gcMaxlifetime	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $gcMaxlifetime = (int) $gcMaxlifetime;$/;"	v
gcProbability	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $gcProbability = (int) $gcProbability;$/;"	v
generateCacheKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function generateCacheKey()$/;"	f
generateHash	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected function generateHash()$/;"	f
generateTestData	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^    protected function generateTestData($plural, $langCodes)$/;"	f
generateTokenId	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected function generateTokenId()$/;"	f
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^        $this->generatedValue = $generatedValue;$/;"	v
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    protected $generatedValue = null;$/;"	v
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function initialize($resource, $generatedValue = null)$/;"	v
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^        $this->generatedValue = $generatedValue;$/;"	v
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    protected $generatedValue = null;$/;"	v
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    protected $generatedValue = null;$/;"	v
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^        $this->generatedValue = $generatedValue;$/;"	v
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    protected $generatedValue = null;$/;"	v
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^        $this->generatedValue = $generatedValue;$/;"	v
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    protected $generatedValue = null;$/;"	v
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^        $this->generatedValue = $generatedValue;$/;"	v
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    protected $generatedValue = null;$/;"	v
generatedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function initialize($resource, $generatedValue = null)$/;"	v
generator	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^        $generator = $generator ?: RandomGeneratorFactory::getRandomGenerator();$/;"	v
generator	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^        RandomNumberGeneratorInterface $generator = null$/;"	v
generator	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^            $generator   = isset($encodingMap[$encoding]) ? $encodingMap[$encoding] : $encodingMap['UTF-8'];$/;"	v
generator	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        $generator   = $encodingMap[$fileEncoding];$/;"	v
get	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^    public function get($class)$/;"	f
get	.\Source\application\library\Zend\Stdlib\Parameters.php	/^    public function get($name, $default = null)$/;"	f
get	.\Source\application\library\Zend\Stdlib\ParametersInterface.php	/^    public function get($name, $default = null);$/;"	f
get	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function get($name)$/;"	f
get	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function get($columns = array('*'))$/;"	f
get	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function get($columns = array('*'))$/;"	f
get	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	public function get($columns = array('*'))$/;"	f
get	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function get($columns = array('*'))$/;"	f
get	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function get($array, $key, $default = null)$/;"	f
get	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function get($key, $default = null)$/;"	f
get	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Cookie.php	/^	public static function get($key = null, $default = null)$/;"	f
get	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Input.php	/^	public static function get($key = null, $default = null)$/;"	f
get	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function get($key, $default = null)$/;"	f
get	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function get($key, $format = null)$/;"	f
get	.\Source\application\library\vendor\lcobucci\jwt\src\ValidationData.php	/^    public function get($name)$/;"	f
get	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function get($id, $domain = 'messages')$/;"	f
get	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function get($id, $domain = 'messages');$/;"	f
get	.\Source\application\library\vendor\symfony\translation\PluralizationRules.php	/^    public static function get($number, $locale)$/;"	f
getActionCondition	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getActionCondition()$/;"	f
getActionOrder	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getActionOrder()$/;"	f
getActionOrientation	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getActionOrientation()$/;"	f
getActionReferenceNewRow	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getActionReferenceNewRow()$/;"	f
getActionReferenceNewTable	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getActionReferenceNewTable()$/;"	f
getActionReferenceOldRow	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getActionReferenceOldRow()$/;"	f
getActionReferenceOldTable	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getActionReferenceOldTable()$/;"	f
getActionStatement	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getActionStatement()$/;"	f
getActionTiming	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getActionTiming()$/;"	f
getAdapter	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function getAdapter()$/;"	f
getAdapter	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function getAdapter()$/;"	f
getAdapter	.\Source\application\library\Zend\Validator\Barcode.php	/^    public function getAdapter()$/;"	f
getAdapter	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function getAdapter()$/;"	f
getAffectedRows	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function getAffectedRows()$/;"	f
getAffectedRows	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function getAffectedRows()$/;"	f
getAffectedRows	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function getAffectedRows()$/;"	f
getAffectedRows	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function getAffectedRows()$/;"	f
getAffectedRows	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function getAffectedRows()$/;"	f
getAffectedRows	.\Source\application\library\Zend\Db\Adapter\Driver\ResultInterface.php	/^    public function getAffectedRows();$/;"	f
getAffectedRows	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function getAffectedRows()$/;"	f
getAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^    abstract public function getAlgorithm();$/;"	f
getAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\Sha256.php	/^    public function getAlgorithm()$/;"	f
getAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\Sha384.php	/^    public function getAlgorithm()$/;"	f
getAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\Sha512.php	/^    public function getAlgorithm()$/;"	f
getAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac.php	/^    abstract public function getAlgorithm();$/;"	f
getAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac\Sha256.php	/^    public function getAlgorithm()$/;"	f
getAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac\Sha384.php	/^    public function getAlgorithm()$/;"	f
getAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac\Sha512.php	/^    public function getAlgorithm()$/;"	f
getAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa.php	/^    abstract public function getAlgorithm();$/;"	f
getAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa\Sha256.php	/^    public function getAlgorithm()$/;"	f
getAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa\Sha384.php	/^    public function getAlgorithm()$/;"	f
getAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa\Sha512.php	/^    public function getAlgorithm()$/;"	f
getAlgorithmId	.\Source\application\library\vendor\lcobucci\jwt\src\Signer.php	/^    public function getAlgorithmId();$/;"	f
getAlgorithmId	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\Sha256.php	/^    public function getAlgorithmId()$/;"	f
getAlgorithmId	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\Sha384.php	/^    public function getAlgorithmId()$/;"	f
getAlgorithmId	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\Sha512.php	/^    public function getAlgorithmId()$/;"	f
getAlgorithmId	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac\Sha256.php	/^    public function getAlgorithmId()$/;"	f
getAlgorithmId	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac\Sha384.php	/^    public function getAlgorithmId()$/;"	f
getAlgorithmId	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac\Sha512.php	/^    public function getAlgorithmId()$/;"	f
getAlgorithmId	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa\Sha256.php	/^    public function getAlgorithmId()$/;"	f
getAlgorithmId	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa\Sha384.php	/^    public function getAlgorithmId()$/;"	f
getAlgorithmId	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa\Sha512.php	/^    public function getAlgorithmId()$/;"	f
getAlgorithmIdMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha256Test.php	/^    public function getAlgorithmIdMustBeCorrect()$/;"	f
getAlgorithmIdMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha384Test.php	/^    public function getAlgorithmIdMustBeCorrect()$/;"	f
getAlgorithmIdMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha512Test.php	/^    public function getAlgorithmIdMustBeCorrect()$/;"	f
getAlgorithmIdMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Hmac\Sha256Test.php	/^    public function getAlgorithmIdMustBeCorrect()$/;"	f
getAlgorithmIdMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Hmac\Sha384Test.php	/^    public function getAlgorithmIdMustBeCorrect()$/;"	f
getAlgorithmIdMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Hmac\Sha512Test.php	/^    public function getAlgorithmIdMustBeCorrect()$/;"	f
getAlgorithmIdMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Rsa\Sha256Test.php	/^    public function getAlgorithmIdMustBeCorrect()$/;"	f
getAlgorithmIdMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Rsa\Sha384Test.php	/^    public function getAlgorithmIdMustBeCorrect()$/;"	f
getAlgorithmIdMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Rsa\Sha512Test.php	/^    public function getAlgorithmIdMustBeCorrect()$/;"	f
getAlgorithmMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha256Test.php	/^    public function getAlgorithmMustBeCorrect()$/;"	f
getAlgorithmMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha384Test.php	/^    public function getAlgorithmMustBeCorrect()$/;"	f
getAlgorithmMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha512Test.php	/^    public function getAlgorithmMustBeCorrect()$/;"	f
getAlgorithmMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Hmac\Sha256Test.php	/^    public function getAlgorithmMustBeCorrect()$/;"	f
getAlgorithmMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Hmac\Sha384Test.php	/^    public function getAlgorithmMustBeCorrect()$/;"	f
getAlgorithmMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Hmac\Sha512Test.php	/^    public function getAlgorithmMustBeCorrect()$/;"	f
getAlgorithmMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Rsa\Sha256Test.php	/^    public function getAlgorithmMustBeCorrect()$/;"	f
getAlgorithmMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Rsa\Sha384Test.php	/^    public function getAlgorithmMustBeCorrect()$/;"	f
getAlgorithmMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Rsa\Sha512Test.php	/^    public function getAlgorithmMustBeCorrect()$/;"	f
getAlias	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function getAlias($abstract)$/;"	f
getAliasedPivotColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function getAliasedPivotColumns()$/;"	f
getAllow	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function getAllow()$/;"	f
getAllow	.\Source\application\library\Zend\Validator\Hostname.php	/^    public function getAllow()$/;"	f
getAllowAbsolute	.\Source\application\library\Zend\Validator\Uri.php	/^    public function getAllowAbsolute()$/;"	f
getAllowRelative	.\Source\application\library\Zend\Validator\Uri.php	/^    public function getAllowRelative()$/;"	f
getAppViewPath	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	protected function getAppViewPath($package)$/;"	f
getArguments	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^	protected function getArguments()$/;"	f
getArrayCopy	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function getArrayCopy()$/;"	f
getArrayCopy	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function getArrayCopy()$/;"	f
getArrayCopy	.\Source\application\library\Zend\Stdlib\ArraySerializableInterface.php	/^    public function getArrayCopy();$/;"	f
getArrayObjectPrototype	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^    public function getArrayObjectPrototype()$/;"	f
getArrayableAppends	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function getArrayableAppends()$/;"	f
getArrayableAttributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function getArrayableAttributes()$/;"	f
getArrayableItems	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function getArrayableItems(array $values)$/;"	f
getArrayableItems	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	protected function getArrayableItems($items)$/;"	f
getArrayableRelations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function getArrayableRelations()$/;"	f
getAsciiEncodingMap	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    protected static function getAsciiEncodingMap()$/;"	f
getAttachId	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function getAttachId($key, $value, array $attributes)$/;"	f
getAttribute	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getAttribute($key)$/;"	f
getAttributeFromArray	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function getAttributeFromArray($key)$/;"	f
getAttributeValue	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function getAttributeValue($key)$/;"	f
getAttributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getAttributes()$/;"	f
getAttributes	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function getAttributes()$/;"	f
getAvailableDrivers	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SqlServerConnector.php	/^	protected function getAvailableDrivers()$/;"	f
getBag	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ViewErrorBag.php	/^	public function getBag($key)$/;"	f
getBags	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ViewErrorBag.php	/^	public function getBags()$/;"	f
getBaseQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function getBaseQuery()$/;"	f
getBaseValue	.\Source\application\library\Zend\Validator\DateStep.php	/^    public function getBaseValue()$/;"	f
getBaseValue	.\Source\application\library\Zend\Validator\Step.php	/^    public function getBaseValue()$/;"	f
getBelongsToManyCaller	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function getBelongsToManyCaller()$/;"	f
getBindings	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function getBindings()$/;"	f
getBindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^	public function getBindings()$/;"	f
getBindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function getBindings()$/;"	f
getBomMap	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    protected static function getBomMap()$/;"	f
getByteString	.\Source\application\library\Zend\Validator\File\Size.php	/^    public function getByteString()$/;"	f
getCache	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function getCache()$/;"	f
getCacheCallback	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function getCacheCallback($columns)$/;"	f
getCacheExpire	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getCacheExpire()$/;"	f
getCacheInfo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function getCacheInfo()$/;"	f
getCacheKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function getCacheKey()$/;"	f
getCacheManager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public function getCacheManager()$/;"	f
getCacheManager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getCacheManager()$/;"	f
getCacheStorage	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    public function getCacheStorage()$/;"	f
getCacheStorge	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    public function getCacheStorge()$/;"	f
getCached	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function getCached($columns = array('*'))$/;"	f
getCachingIterator	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function getCachingIterator($flags = CachingIterator::CALL_TOSTRING)$/;"	f
getCallback	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    public function getCallback()$/;"	f
getCallback	.\Source\application\library\Zend\Validator\Callback.php	/^    public function getCallback()$/;"	f
getCallbackOptions	.\Source\application\library\Zend\Validator\Callback.php	/^    public function getCallbackOptions()$/;"	f
getCamelCaseToUnderscoreFilter	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\UnderscoreNamingStrategy.php	/^    protected function getCamelCaseToUnderscoreFilter()$/;"	f
getCaptureTo	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function getCaptureTo()$/;"	f
getCase	.\Source\application\library\Zend\Validator\File\Extension.php	/^    public function getCase()$/;"	f
getCatalogue	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    public function getCatalogue($locale = null)$/;"	f
getCatalogue	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^    public function getCatalogue($locale = null)$/;"	f
getCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    protected function getCatalogue($locale, $messages, $resources = array())$/;"	f
getCatalogue	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function getCatalogue($locale = null)$/;"	f
getCatalogue	.\Source\application\library\vendor\symfony\translation\TranslatorBagInterface.php	/^    public function getCatalogue($locale = null);$/;"	f
getCatalogueCachePath	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private function getCatalogueCachePath($locale)$/;"	f
getCharacterMaximumLength	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getCharacterMaximumLength()$/;"	f
getCharacterOctetLength	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getCharacterOctetLength()$/;"	f
getCharacters	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    public function getCharacters()$/;"	f
getCharacters	.\Source\application\library\Zend\Validator\Barcode\AdapterInterface.php	/^    public function getCharacters();$/;"	f
getCheckClause	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function getCheckClause()$/;"	f
getCheckOption	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^    public function getCheckOption()$/;"	f
getChecksum	.\Source\application\library\Zend\Validator\Barcode.php	/^    public function getChecksum()$/;"	f
getChecksum	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    public function getChecksum()$/;"	f
getChecksum	.\Source\application\library\Zend\Validator\Barcode\AdapterInterface.php	/^    public function getChecksum();$/;"	f
getChildren	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function getChildren()$/;"	f
getChooseTests	.\Source\application\library\vendor\symfony\translation\Tests\MessageSelectorTest.php	/^    public function getChooseTests()$/;"	f
getClaim	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function getClaim($name, $default = null)$/;"	f
getClaimMustReturnTheDefaultValueWhenIsNotConfigured	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function getClaimMustReturnTheDefaultValueWhenIsNotConfigured()$/;"	f
getClaimShouldRaiseExceptionWhenClaimIsNotConfigured	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function getClaimShouldRaiseExceptionWhenClaimIsNotConfigured()$/;"	f
getClaimShouldReturnTheClaimValueWhenItExists	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function getClaimShouldReturnTheClaimValueWhenItExists()$/;"	f
getClaims	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function getClaims()$/;"	f
getClaimsMustReturnTheConfiguredClaims	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function getClaimsMustReturnTheConfiguredClaims()$/;"	f
getClassMap	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function getClassMap()$/;"	f
getClassName	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^    public function getClassName()$/;"	f
getClassName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	protected function getClassName($name)$/;"	f
getClosure	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function getClosure($abstract, $concrete)$/;"	f
getCode	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\SerializableClosure.php	/^	public function getCode()$/;"	f
getCodingSet	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^    protected function getCodingSet($value)$/;"	f
getCollectedMessages	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    public function getCollectedMessages()$/;"	f
getCollection	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function getCollection()$/;"	f
getColumn	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getColumn($columnName, $table, $schema = null)$/;"	f
getColumn	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getColumn($columnName, $table, $schema = null);$/;"	f
getColumn	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getColumn($columnName, $table, $schema = null)$/;"	f
getColumnDefault	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getColumnDefault()$/;"	f
getColumnListing	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	public function getColumnListing($table)$/;"	f
getColumnListing	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\MySqlBuilder.php	/^	public function getColumnListing($table)$/;"	f
getColumnName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function getColumnName()$/;"	f
getColumnNames	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getColumnNames($table, $schema = null)$/;"	f
getColumnNames	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getColumnNames($table, $schema = null);$/;"	f
getColumnNames	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getColumnNames($table, $schema = null)$/;"	f
getColumns	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getColumns($table, $schema = null)$/;"	f
getColumns	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getColumns($table, $schema = null);$/;"	f
getColumns	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    public function getColumns()$/;"	f
getColumns	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function getColumns()$/;"	f
getColumns	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getColumns($table, $schema = null)$/;"	f
getColumns	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    public function getColumns()$/;"	f
getColumns	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ConstraintInterface.php	/^    public function getColumns();$/;"	f
getColumns	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function getColumns()$/;"	f
getColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function getColumns()$/;"	f
getColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	protected function getColumns(Blueprint $blueprint)$/;"	f
getCommandByName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	protected function getCommandByName(Blueprint $blueprint, $name)$/;"	f
getCommands	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function getCommands()$/;"	f
getCommandsByName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	protected function getCommandsByName(Blueprint $blueprint, $name)$/;"	f
getConcrete	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function getConcrete($abstract)$/;"	f
getConfig	.\Source\application\library\Zend\Db\Adapter\AdapterAbstractServiceFactory.php	/^    protected function getConfig(ServiceLocatorInterface $services)$/;"	f
getConfig	.\Source\application\library\Zend\Session\AbstractManager.php	/^    public function getConfig()$/;"	f
getConfig	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function getConfig();$/;"	f
getConfig	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^    protected function getConfig(ServiceLocatorInterface $services)$/;"	f
getConfig	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getConfig($option)$/;"	f
getConfig	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	protected function getConfig($name)$/;"	f
getConfigCacheFactory	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private function getConfigCacheFactory()$/;"	f
getConnection	.\Source\application\library\Zend\Db\Adapter\Driver\DriverInterface.php	/^    public function getConnection();$/;"	f
getConnection	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function getConnection()$/;"	f
getConnection	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function getConnection()$/;"	f
getConnection	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function getConnection()$/;"	f
getConnection	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function getConnection()$/;"	f
getConnection	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function getConnection()$/;"	f
getConnection	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function getConnection()$/;"	f
getConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public function getConnection($name = null)$/;"	f
getConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getConnection()$/;"	f
getConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	public function getConnection()$/;"	f
getConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migration.php	/^	public function getConnection()$/;"	f
getConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function getConnection()$/;"	f
getConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	public function getConnection()$/;"	f
getConnectionName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getConnectionName()$/;"	f
getConnectionParameters	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    public function getConnectionParameters()$/;"	f
getConnectionResolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function getConnectionResolver()$/;"	f
getConnectionResolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	public function getConnectionResolver()$/;"	f
getConnectionString	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    private function getConnectionString()$/;"	f
getConnections	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	public function getConnections()$/;"	f
getConstraint	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getConstraint($constraintName, $table, $schema = null)$/;"	f
getConstraint	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getConstraint($constraintName, $table, $schema = null);$/;"	f
getConstraint	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getConstraint($constraintName, $table, $schema = null)$/;"	f
getConstraintKeys	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getConstraintKeys($constraint, $table, $schema = null)$/;"	f
getConstraintKeys	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getConstraintKeys($constraint, $table, $schema = null);$/;"	f
getConstraintKeys	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getConstraintKeys($constraint, $table, $schema = null)$/;"	f
getConstraintType	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^    protected function getConstraintType($type)$/;"	f
getConstraints	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getConstraints($table, $schema = null)$/;"	f
getConstraints	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getConstraints($table, $schema = null);$/;"	f
getConstraints	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    public function getConstraints()$/;"	f
getConstraints	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getConstraints($table, $schema = null)$/;"	f
getContainer	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\CapsuleManagerTrait.php	/^	public function getContainer()$/;"	f
getContent	.\Source\application\library\Zend\Stdlib\Message.php	/^    public function getContent()$/;"	f
getContent	.\Source\application\library\Zend\Stdlib\MessageInterface.php	/^    public function getContent();$/;"	f
getContent	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^    public function getContent()$/;"	f
getContentShouldReturnConfiguredData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeyTest.php	/^    public function getContentShouldReturnConfiguredData()$/;"	f
getControl	.\Source\application\library\Zend\Validator\Bitwise.php	/^    public function getControl()$/;"	f
getConvertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    public function getConvertEncoding()$/;"	f
getConvertEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function getConvertEncoding();$/;"	f
getCookieDomain	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function getCookieDomain();$/;"	f
getCookieDomain	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getCookieDomain()$/;"	f
getCookieHttpOnly	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function getCookieHttpOnly();$/;"	f
getCookieHttpOnly	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getCookieHttpOnly()$/;"	f
getCookieLifetime	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function getCookieLifetime();$/;"	f
getCookieLifetime	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getCookieLifetime()$/;"	f
getCookiePath	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function getCookiePath();$/;"	f
getCookiePath	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getCookiePath()$/;"	f
getCookieSecure	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function getCookieSecure();$/;"	f
getCookieSecure	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getCookieSecure()$/;"	f
getCountDefines	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    public function getCountDefines()$/;"	f
getCountFallbacks	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    public function getCountFallbacks()$/;"	f
getCountForSql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^    public function getCountForSql($sql)$/;"	f
getCountForSql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^    public function getCountForSql($sql)$/;"	f
getCountForStatement	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^    public function getCountForStatement(Pdo\\Statement $statement)$/;"	f
getCountForStatement	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^    public function getCountForStatement(Pdo\\Statement $statement)$/;"	f
getCountMissings	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    public function getCountMissings()$/;"	f
getCountryCode	.\Source\application\library\Zend\Validator\Iban.php	/^    public function getCountryCode()$/;"	f
getCrc32	.\Source\application\library\Zend\Validator\File\Crc32.php	/^    public function getCrc32()$/;"	f
getCreated	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getCreated()$/;"	f
getCreatedAtColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getCreatedAtColumn()$/;"	f
getCreatedAtColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	public function getCreatedAtColumn()$/;"	f
getCurrentSchema	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function getCurrentSchema()$/;"	f
getCurrentSchema	.\Source\application\library\Zend\Db\Adapter\Driver\ConnectionInterface.php	/^    public function getCurrentSchema();$/;"	f
getCurrentSchema	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    public function getCurrentSchema()$/;"	f
getCurrentSchema	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    public function getCurrentSchema()$/;"	f
getCurrentSchema	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    public function getCurrentSchema()$/;"	f
getCurrentSchema	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function getCurrentSchema()$/;"	f
getCurrentSchema	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    public function getCurrentSchema()$/;"	f
getCurrentSchema	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function getCurrentSchema()$/;"	f
getData	.\Source\application\library\Zend\Session\Validator\HttpUserAgent.php	/^    public function getData()$/;"	f
getData	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    public function getData()$/;"	f
getData	.\Source\application\library\Zend\Session\Validator\ValidatorInterface.php	/^    public function getData();$/;"	f
getData	.\Source\application\library\Zend\Stdlib\ArrayUtils\MergeReplaceKey.php	/^    public function getData()$/;"	f
getData	.\Source\application\library\Zend\Stdlib\ArrayUtils\MergeReplaceKeyInterface.php	/^    public function getData();$/;"	f
getData	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    private static function getData($file)$/;"	f
getDataColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    public function getDataColumn()$/;"	f
getDataField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function getDataField()$/;"	f
getDataSource	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    public function getDataSource()$/;"	f
getDataType	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getDataType()$/;"	f
getDatabase	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function getDatabase()$/;"	f
getDatabase	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^	protected function getDatabase()$/;"	f
getDatabaseManager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public function getDatabaseManager()$/;"	f
getDatabaseName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getDatabaseName()$/;"	f
getDatabasePlatformName	.\Source\application\library\Zend\Db\Adapter\Driver\DriverInterface.php	/^    public function getDatabasePlatformName($nameFormat = self::NAME_FORMAT_CAMELCASE);$/;"	f
getDatabasePlatformName	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function getDatabasePlatformName($nameFormat = self::NAME_FORMAT_CAMELCASE)$/;"	f
getDatabasePlatformName	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function getDatabasePlatformName($nameFormat = self::NAME_FORMAT_CAMELCASE)$/;"	f
getDatabasePlatformName	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function getDatabasePlatformName($nameFormat = self::NAME_FORMAT_CAMELCASE)$/;"	f
getDatabasePlatformName	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function getDatabasePlatformName($nameFormat = self::NAME_FORMAT_CAMELCASE)$/;"	f
getDatabasePlatformName	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function getDatabasePlatformName($nameFormat = self::NAME_FORMAT_CAMELCASE)$/;"	f
getDatabasePlatformName	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function getDatabasePlatformName($nameFormat = self::NAME_FORMAT_CAMELCASE)$/;"	f
getDateFormat	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function getDateFormat()$/;"	f
getDateFormat	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	public function getDateFormat()$/;"	f
getDateFormat	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	public function getDateFormat()$/;"	f
getDatePrefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	protected function getDatePrefix()$/;"	f
getDates	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getDates()$/;"	f
getDecimal	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractPrecisionColumn.php	/^    public function getDecimal()$/;"	f
getDecorators	.\Source\application\library\Zend\Db\Sql\Platform\AbstractPlatform.php	/^    public function getDecorators()$/;"	f
getDecorators	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    public function getDecorators()$/;"	f
getDeepMxCheck	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function getDeepMxCheck()$/;"	f
getDefault	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function getDefault()$/;"	f
getDefault	.\Source\application\library\Zend\Db\Sql\Ddl\Column\ColumnInterface.php	/^    public function getDefault();$/;"	f
getDefaultConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^	public function getDefaultConnection()$/;"	f
getDefaultConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolverInterface.php	/^	public function getDefaultConnection();$/;"	f
getDefaultConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	public function getDefaultConnection()$/;"	f
getDefaultDriver	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^	abstract public function getDefaultDriver();$/;"	f
getDefaultLayout	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^                $getDefaultLayout ="getDefaultLayout";$/;"	v
getDefaultLayout	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static function getDefaultLayout($layout)$/;"	f
getDefaultLayoutCaptureTo	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static function getDefaultLayoutCaptureTo()$/;"	f
getDefaultLayoutTemplate	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^                $getDefaultLayoutTemplate ="getDefaultLayoutTemplate";$/;"	v
getDefaultLayoutTemplate	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static function getDefaultLayoutTemplate()$/;"	f
getDefaultManager	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public static function getDefaultManager()$/;"	f
getDefaultOptions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\Connector.php	/^	public function getDefaultOptions()$/;"	f
getDefaultPlatform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    protected function getDefaultPlatform()$/;"	f
getDefaultPostProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected function getDefaultPostProcessor()$/;"	f
getDefaultPostProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MySqlConnection.php	/^	protected function getDefaultPostProcessor()$/;"	f
getDefaultPostProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\PostgresConnection.php	/^	protected function getDefaultPostProcessor()$/;"	f
getDefaultPostProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SQLiteConnection.php	/^	protected function getDefaultPostProcessor()$/;"	f
getDefaultPostProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SqlServerConnection.php	/^	protected function getDefaultPostProcessor()$/;"	f
getDefaultQueryGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected function getDefaultQueryGrammar()$/;"	f
getDefaultQueryGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MySqlConnection.php	/^	protected function getDefaultQueryGrammar()$/;"	f
getDefaultQueryGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\PostgresConnection.php	/^	protected function getDefaultQueryGrammar()$/;"	f
getDefaultQueryGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SQLiteConnection.php	/^	protected function getDefaultQueryGrammar()$/;"	f
getDefaultQueryGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SqlServerConnection.php	/^	protected function getDefaultQueryGrammar()$/;"	f
getDefaultSchemaGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected function getDefaultSchemaGrammar() {}$/;"	f
getDefaultSchemaGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MySqlConnection.php	/^	protected function getDefaultSchemaGrammar()$/;"	f
getDefaultSchemaGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\PostgresConnection.php	/^	protected function getDefaultSchemaGrammar()$/;"	f
getDefaultSchemaGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SQLiteConnection.php	/^	protected function getDefaultSchemaGrammar()$/;"	f
getDefaultSchemaGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SqlServerConnection.php	/^	protected function getDefaultSchemaGrammar()$/;"	f
getDefaultTranslator	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public static function getDefaultTranslator()$/;"	f
getDefaultTranslatorTextDomain	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public static function getDefaultTranslatorTextDomain()$/;"	f
getDefaultType	.\Source\application\library\Zend\Validator\NotEmpty.php	/^    public function getDefaultType()$/;"	f
getDefaultValue	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	protected function getDefaultValue($value)$/;"	f
getDefaultView	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $getDefaultView ="getDefaultView";$/;"	v
getDefaultView	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static function getDefaultView($view)$/;"	f
getDefaultViewCaptureTo	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $getDefaultViewCaptureTo ="getDefaultViewCaptureTo";$/;"	v
getDefaultViewCaptureTo	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static function getDefaultViewCaptureTo()$/;"	f
getDefaultViewTemplate	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $getDefaultViewTemplate ="getDefaultViewTemplate";$/;"	v
getDefaultViewTemplate	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static function getDefaultViewTemplate()$/;"	f
getDeleteQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	protected function getDeleteQuery()$/;"	f
getDeleteRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function getDeleteRule()$/;"	f
getDeletedAtColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^	protected function getDeletedAtColumn(Builder $builder)$/;"	f
getDeletedAtColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	public function getDeletedAtColumn()$/;"	f
getDependencies	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function getDependencies($parameters, array $primitives = array())$/;"	f
getDictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function getDictionary($items = null)$/;"	f
getDictionary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	public function getDictionary()$/;"	f
getDigits	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractPrecisionColumn.php	/^    public function getDigits()$/;"	f
getDirectories	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^	public static function getDirectories()$/;"	f
getDirectory	.\Source\application\library\Zend\Validator\File\Exists.php	/^    public function getDirectory($asArray = false)$/;"	f
getDirty	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getDirty()$/;"	f
getDoctrineColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getDoctrineColumn($table, $column)$/;"	f
getDoctrineConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getDoctrineConnection()$/;"	f
getDoctrineDriver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MySqlConnection.php	/^	protected function getDoctrineDriver()$/;"	f
getDoctrineDriver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\PostgresConnection.php	/^	protected function getDoctrineDriver()$/;"	f
getDoctrineDriver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SQLiteConnection.php	/^	protected function getDoctrineDriver()$/;"	f
getDoctrineDriver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SqlServerConnection.php	/^	protected function getDoctrineDriver()$/;"	f
getDoctrineSchemaManager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getDoctrineSchemaManager()$/;"	f
getDoctrineTableDiff	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	protected function getDoctrineTableDiff(Blueprint $blueprint, SchemaManager $schema)$/;"	f
getDomainCheck	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function getDomainCheck()$/;"	f
getDomains	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^    public function getDomains()$/;"	f
getDomains	.\Source\application\library\vendor\symfony\translation\Catalogue\OperationInterface.php	/^    public function getDomains();$/;"	f
getDomains	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function getDomains()$/;"	f
getDomains	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function getDomains();$/;"	f
getDriver	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function getDriver()$/;"	f
getDriver	.\Source\application\library\Zend\Db\Adapter\AdapterInterface.php	/^    public function getDriver();$/;"	f
getDriverName	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    public function getDriverName()$/;"	f
getDriverName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getDriverName()$/;"	f
getDrivers	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^	public function getDrivers()$/;"	f
getDsn	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function getDsn()$/;"	f
getDsn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\MySqlConnector.php	/^	protected function getDsn(array $config)$/;"	f
getDsn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\PostgresConnector.php	/^	protected function getDsn(array $config)$/;"	f
getDsn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SqlServerConnector.php	/^	protected function getDsn(array $config)$/;"	f
getEager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	public function getEager()$/;"	f
getEager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function getEager()$/;"	f
getEagerLoads	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function getEagerLoads()$/;"	f
getEagerModelKeys	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	protected function getEagerModelKeys(array $models)$/;"	f
getElapsedTime	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected function getElapsedTime($start)$/;"	f
getElementByPath	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^    private static function &getElementByPath(array &$tree, array $parts)$/;"	f
getEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    public function getEncoding()$/;"	f
getEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function getEncoding();$/;"	f
getEncoding	.\Source\application\library\Zend\Validator\StringLength.php	/^    public function getEncoding()$/;"	f
getEncoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    private static function getEncoding($encoding)$/;"	f
getEntityComparison	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    protected static function getEntityComparison($xml)$/;"	f
getEntropyFile	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getEntropyFile()$/;"	f
getEntropyLength	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getEntropyLength()$/;"	f
getErrata	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getErrata($errataName)$/;"	f
getErrataIterator	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function getErrataIterator()$/;"	f
getErratas	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getErratas()$/;"	f
getEvent	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function getEvent()$/;"	f
getEventDispatcher	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public function getEventDispatcher()$/;"	f
getEventDispatcher	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getEventDispatcher()$/;"	f
getEventDispatcher	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function getEventDispatcher()$/;"	f
getEventManager	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function getEventManager()$/;"	f
getEventManager	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\AggregateHydrator.php	/^    public function getEventManager()$/;"	f
getEventManipulation	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getEventManipulation()$/;"	f
getEventObjectCatalog	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getEventObjectCatalog()$/;"	f
getEventObjectSchema	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getEventObjectSchema()$/;"	f
getEventObjectTable	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getEventObjectTable()$/;"	f
getExclude	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function getExclude()$/;"	f
getExpression	.\Source\application\library\Zend\Db\Sql\Expression.php	/^    public function getExpression()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractLengthColumn.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractTimestampColumn.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Integer.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\Check.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Expression.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\ExpressionInterface.php	/^    public function getExpressionData();$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Literal.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Predicate\IsNull.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    public function getExpressionData()$/;"	f
getExpressionData	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    public function getExpressionData()$/;"	f
getExtender	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function getExtender($abstract, Closure $closure)$/;"	f
getExtension	.\Source\application\library\Zend\Validator\File\Extension.php	/^    public function getExtension()$/;"	f
getExtension	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^    protected function getExtension()$/;"	f
getExtension	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^    abstract protected function getExtension();$/;"	f
getExtension	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^    protected function getExtension()$/;"	f
getExtension	.\Source\application\library\vendor\symfony\translation\Dumper\IniFileDumper.php	/^    protected function getExtension()$/;"	f
getExtension	.\Source\application\library\vendor\symfony\translation\Dumper\JsonFileDumper.php	/^    protected function getExtension()$/;"	f
getExtension	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^    protected function getExtension()$/;"	f
getExtension	.\Source\application\library\vendor\symfony\translation\Dumper\PhpFileDumper.php	/^    protected function getExtension()$/;"	f
getExtension	.\Source\application\library\vendor\symfony\translation\Dumper\PoFileDumper.php	/^    protected function getExtension()$/;"	f
getExtension	.\Source\application\library\vendor\symfony\translation\Dumper\QtFileDumper.php	/^    protected function getExtension()$/;"	f
getExtension	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^    protected function getExtension()$/;"	f
getExtension	.\Source\application\library\vendor\symfony\translation\Dumper\YamlFileDumper.php	/^    protected function getExtension()$/;"	f
getExtension	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^    protected function getExtension()$/;"	f
getExtractedData	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^    public function getExtractedData()$/;"	f
getExtractionObject	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^    public function getExtractionObject()$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\App.php	/^	protected static function getFacadeAccessor() { return 'app'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Artisan.php	/^	protected static function getFacadeAccessor() { return 'artisan'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Auth.php	/^	protected static function getFacadeAccessor() { return 'auth'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Blade.php	/^	protected static function getFacadeAccessor()$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Cache.php	/^	protected static function getFacadeAccessor() { return 'cache'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Config.php	/^	protected static function getFacadeAccessor() { return 'config'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Cookie.php	/^	protected static function getFacadeAccessor() { return 'cookie'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Crypt.php	/^	protected static function getFacadeAccessor() { return 'encrypter'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\DB.php	/^	protected static function getFacadeAccessor() { return 'db'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Event.php	/^	protected static function getFacadeAccessor() { return 'events'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	protected static function getFacadeAccessor()$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\File.php	/^	protected static function getFacadeAccessor() { return 'files'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Form.php	/^	protected static function getFacadeAccessor() { return 'form'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\HTML.php	/^	protected static function getFacadeAccessor() { return 'html'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Hash.php	/^	protected static function getFacadeAccessor() { return 'hash'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Input.php	/^	protected static function getFacadeAccessor() { return 'request'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Lang.php	/^	protected static function getFacadeAccessor() { return 'translator'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Log.php	/^	protected static function getFacadeAccessor() { return 'log'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Mail.php	/^	protected static function getFacadeAccessor() { return 'mailer'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Paginator.php	/^	protected static function getFacadeAccessor() { return 'paginator'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Password.php	/^	protected static function getFacadeAccessor() { return 'auth.reminder'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Queue.php	/^	protected static function getFacadeAccessor() { return 'queue'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Redirect.php	/^	protected static function getFacadeAccessor() { return 'redirect'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Redis.php	/^	protected static function getFacadeAccessor() { return 'redis'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Request.php	/^	protected static function getFacadeAccessor() { return 'request'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Route.php	/^	protected static function getFacadeAccessor() { return 'router'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\SSH.php	/^	protected static function getFacadeAccessor() { return 'remote'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Schema.php	/^	protected static function getFacadeAccessor()$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Session.php	/^	protected static function getFacadeAccessor() { return 'session'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\URL.php	/^	protected static function getFacadeAccessor() { return 'url'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Validator.php	/^	protected static function getFacadeAccessor() { return 'validator'; }$/;"	f
getFacadeAccessor	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\View.php	/^	protected static function getFacadeAccessor() { return 'view'; }$/;"	f
getFacadeApplication	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	public static function getFacadeApplication()$/;"	f
getFacadeRoot	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	public static function getFacadeRoot()$/;"	f
getFactories	.\Source\application\module\Index\Module.php	/^    public function getFactories()$/;"	f
getFallbackCatalogue	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function getFallbackCatalogue()$/;"	f
getFallbackCatalogue	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function getFallbackCatalogue();$/;"	f
getFallbackContent	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private function getFallbackContent(MessageCatalogue $catalogue)$/;"	f
getFallbackDirs	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function getFallbackDirs()$/;"	f
getFallbackDirsPsr4	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function getFallbackDirsPsr4()$/;"	f
getFallbackLocales	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function getFallbackLocales()$/;"	f
getFeature	.\Source\application\library\Zend\Db\Adapter\Driver\Feature\DriverFeatureInterface.php	/^    public function getFeature($name);$/;"	f
getFeature	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function getFeature($name)$/;"	f
getFeatureByClassName	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function getFeatureByClassName($featureClassName)$/;"	f
getFeatureByClassName	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function getFeatureByClassName($featureClassName)$/;"	f
getFeatureSet	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function getFeatureSet()$/;"	f
getFetchMode	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function getFetchMode()$/;"	f
getFetchMode	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getFetchMode()$/;"	f
getField	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function getField()$/;"	f
getFieldCount	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function getFieldCount()$/;"	f
getFieldCount	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function getFieldCount()$/;"	f
getFieldCount	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function getFieldCount()$/;"	f
getFieldCount	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function getFieldCount()$/;"	f
getFieldCount	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function getFieldCount()$/;"	f
getFieldCount	.\Source\application\library\Zend\Db\Adapter\Driver\ResultInterface.php	/^    public function getFieldCount();$/;"	f
getFieldCount	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function getFieldCount()$/;"	f
getFieldCount	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    public function getFieldCount()$/;"	f
getFieldCount	.\Source\application\library\Zend\Db\ResultSet\ResultSetInterface.php	/^    public function getFieldCount();$/;"	f
getFiles	.\Source\application\library\Zend\Validator\File\Upload.php	/^    public function getFiles($file = null)$/;"	f
getFilesystem	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	public function getFilesystem()$/;"	f
getFilesystem	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function getFilesystem()$/;"	f
getFillable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getFillable()$/;"	f
getFilter	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function getFilter()$/;"	f
getFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterProviderInterface.php	/^    public function getFilter();$/;"	f
getFlags	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function getFlags()$/;"	f
getFlattenedTransTests	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function getFlattenedTransTests()$/;"	f
getForeignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getForeignKey()$/;"	f
getForeignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function getForeignKey()$/;"	f
getForeignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function getForeignKey()$/;"	f
getForeignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function getForeignKey()$/;"	f
getForeignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	public function getForeignKey()$/;"	f
getForeignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function getForeignKey($foreign)$/;"	f
getForeignKeyDeleteRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function getForeignKeyDeleteRule()$/;"	f
getForeignKeyUpdateRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function getForeignKeyUpdateRule()$/;"	f
getFormat	.\Source\application\library\Zend\Validator\Date.php	/^    public function getFormat()$/;"	f
getFormat	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function getFormat()$/;"	f
getFormats	.\Source\application\library\vendor\symfony\translation\Writer\TranslationWriter.php	/^    public function getFormats()$/;"	f
getFresh	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function getFresh($columns = array('*'))$/;"	f
getGcDivisor	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getGcDivisor()$/;"	f
getGcMaxlifetime	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getGcMaxlifetime()$/;"	f
getGcProbability	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getGcProbability()$/;"	f
getGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function getGeneratedValue()$/;"	f
getGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function getGeneratedValue()$/;"	f
getGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function getGeneratedValue()$/;"	f
getGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function getGeneratedValue()$/;"	f
getGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function getGeneratedValue()$/;"	f
getGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\ResultInterface.php	/^    public function getGeneratedValue();$/;"	f
getGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function getGeneratedValue()$/;"	f
getGlobalScope	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function getGlobalScope($scope)$/;"	f
getGlobalScopes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getGlobalScopes()$/;"	f
getGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function getGrammar()$/;"	f
getGroupByKey	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	protected function getGroupByKey($groupBy, $key, $value)$/;"	f
getGuarded	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getGuarded()$/;"	f
getHasCompareKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function getHasCompareKey()$/;"	f
getHasCompareKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	public function getHasCompareKey()$/;"	f
getHasCompareKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function getHasCompareKey()$/;"	f
getHasRelationQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function getHasRelationQuery($relation)$/;"	f
getHash	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function getHash($regenerate = false)$/;"	f
getHash	.\Source\application\library\Zend\Validator\File\Hash.php	/^    public function getHash()$/;"	f
getHashBitsPerCharacter	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getHashBitsPerCharacter()$/;"	f
getHashFunctions	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    protected function getHashFunctions()$/;"	f
getHaystack	.\Source\application\library\Zend\Validator\InArray.php	/^    public function getHaystack()$/;"	f
getHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function getHeader($name, $default = null)$/;"	f
getHeaderCheck	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    public function getHeaderCheck()$/;"	f
getHeaderMustRaiseExceptionWhenHeaderIsNotConfigured	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function getHeaderMustRaiseExceptionWhenHeaderIsNotConfigured()$/;"	f
getHeaderMustReturnTheDefaultValueWhenIsNotConfigured	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function getHeaderMustReturnTheDefaultValueWhenIsNotConfigured()$/;"	f
getHeaderMustReturnTheRequestedHeader	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function getHeaderMustReturnTheRequestedHeader()$/;"	f
getHeaderMustReturnValueWhenItIsAReplicatedClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function getHeaderMustReturnValueWhenItIsAReplicatedClaim()$/;"	f
getHeaderValue	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    private function getHeaderValue($name)$/;"	f
getHeaders	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function getHeaders()$/;"	f
getHeadersMustReturnTheConfiguredHeader	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function getHeadersMustReturnTheConfiguredHeader()$/;"	f
getHelpers	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function getHelpers(\/* $functions *\/)$/;"	f
getHidden	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getHidden()$/;"	f
getHostDsn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\MySqlConnector.php	/^	protected function getHostDsn(array $config)$/;"	f
getHostnameValidator	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function getHostnameValidator()$/;"	f
getHydratedObject	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^    public function getHydratedObject()$/;"	f
getHydrationData	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^    public function getHydrationData()$/;"	f
getHydrator	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^    public function getHydrator()$/;"	f
getHydrator	.\Source\application\library\Zend\Stdlib\Hydrator\DelegatingHydrator.php	/^    protected function getHydrator($object)$/;"	f
getHydrator	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorAwareInterface.php	/^    public function getHydrator();$/;"	f
getHydrator	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorAwareTrait.php	/^    public function getHydrator()$/;"	f
getId	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function getId();$/;"	f
getId	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function getId()$/;"	f
getIdColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    public function getIdColumn()$/;"	f
getIdentifier	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    public function getIdentifier()$/;"	f
getIdentifier	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^    public function getIdentifier()$/;"	f
getIdentifier	.\Source\application\library\Zend\Db\Sql\Predicate\IsNull.php	/^    public function getIdentifier()$/;"	f
getIdentifier	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^    public function getIdentifier()$/;"	f
getIdentifierChainRegularExpression	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function getIdentifierChainRegularExpression()$/;"	f
getIdentifierListRegularExpression	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function getIdentifierListRegularExpression()$/;"	f
getIdentifierRegularExpression	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function getIdentifierRegularExpression()$/;"	f
getIdentifierSeparator	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    public function getIdentifierSeparator()$/;"	f
getIdentifierSeparator	.\Source\application\library\Zend\Db\Adapter\Platform\IbmDb2.php	/^    public function getIdentifierSeparator()$/;"	f
getIdentifierSeparator	.\Source\application\library\Zend\Db\Adapter\Platform\PlatformInterface.php	/^    public function getIdentifierSeparator();$/;"	f
getIdnCheck	.\Source\application\library\Zend\Validator\Hostname.php	/^    public function getIdnCheck()$/;"	f
getImageHeight	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function getImageHeight()$/;"	f
getImageMax	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function getImageMax()$/;"	f
getImageMin	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function getImageMin()$/;"	f
getImageWidth	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function getImageWidth()$/;"	f
getInclusive	.\Source\application\library\Zend\Validator\Between.php	/^    public function getInclusive()$/;"	f
getInclusive	.\Source\application\library\Zend\Validator\GreaterThan.php	/^    public function getInclusive()$/;"	f
getInclusive	.\Source\application\library\Zend\Validator\LessThan.php	/^    public function getInclusive()$/;"	f
getIncrementing	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getIncrementing()$/;"	f
getInitializer	.\Source\application\library\vendor\composer\autoload_static.php	/^    public static function getInitializer(ClassLoader $loader)$/;"	f
getInstance	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^    private static function getInstance(array $factories = null)$/;"	f
getInstance	.\Source\application\library\Alpaca\MVC\Application.php	/^    private static function getInstance(array $config = null)$/;"	f
getInstance	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    private static function getInstance()$/;"	f
getInstance	.\Source\application\library\Alpaca\Tools\Validate.php	/^	private static function getInstance()$/;"	f
getInstance	.\Source\application\service\JwtAuth\JwtManager.php	/^    private static function getInstance()$/;"	f
getIntervalRegexp	.\Source\application\library\vendor\symfony\translation\Interval.php	/^    public static function getIntervalRegexp()$/;"	f
getInvalidLocalesTests	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function getInvalidLocalesTests()$/;"	f
getIpAddress	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    protected function getIpAddress()$/;"	f
getIpValidator	.\Source\application\library\Zend\Validator\Hostname.php	/^    public function getIpValidator()$/;"	f
getIsNullable	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getIsNullable()$/;"	f
getIsSelectContainDistinct	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^    public function getIsSelectContainDistinct()$/;"	f
getIsUpdatable	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^    public function getIsUpdatable()$/;"	f
getIterator	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function getIterator()$/;"	f
getIterator	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function getIterator()$/;"	f
getIterator	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function getIterator()$/;"	f
getIterator	.\Source\application\library\Zend\Stdlib\ArrayStack.php	/^    public function getIterator()$/;"	f
getIterator	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function getIterator()$/;"	f
getIterator	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function getIterator()$/;"	f
getIterator	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function getIterator()$/;"	f
getIteratorClass	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function getIteratorClass()$/;"	f
getJSONErrorMessage	.\Source\application\library\vendor\symfony\translation\Loader\JsonFileLoader.php	/^    private function getJSONErrorMessage($errorCode)$/;"	f
getKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getKey()$/;"	f
getKey	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\BaseSigner.php	/^    private function getKey($key)$/;"	f
getKeyContent	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^    private function getKeyContent(Key $key, $header)$/;"	f
getKeyForSaveQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function getKeyForSaveQuery()$/;"	f
getKeyName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getKeyName()$/;"	f
getKeys	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	protected function getKeys(array $models, $key = null)$/;"	f
getLast	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	public function getLast()$/;"	f
getLast	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationRepositoryInterface.php	/^	public function getLast();$/;"	f
getLastBatchNumber	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	public function getLastBatchNumber()$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\ConnectionInterface.php	/^    public function getLastGeneratedValue($name = null);$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\DriverInterface.php	/^    public function getLastGeneratedValue();$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    public function getLastGeneratedValue($name = null)$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function getLastGeneratedValue()$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    public function getLastGeneratedValue($name = null)$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function getLastGeneratedValue()$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    public function getLastGeneratedValue($name = null)$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function getLastGeneratedValue()$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function getLastGeneratedValue($name = null)$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function getLastGeneratedValue($name = null)$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    public function getLastGeneratedValue($name = null)$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function getLastGeneratedValue($name = null)$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function getLastGeneratedValue($name = null)$/;"	f
getLastGeneratedValue	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function getLastGeneratedValue()$/;"	f
getLastInsertValue	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function getLastInsertValue()$/;"	f
getLastProfile	.\Source\application\library\Zend\Db\Adapter\Profiler\Profiler.php	/^    public function getLastProfile()$/;"	f
getLeft	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    public function getLeft()$/;"	f
getLeftType	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    public function getLeftType()$/;"	f
getLength	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractLengthColumn.php	/^    public function getLength()$/;"	f
getLength	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    public function getLength()$/;"	f
getLength	.\Source\application\library\Zend\Validator\Barcode\AdapterInterface.php	/^    public function getLength();$/;"	f
getLengthExpression	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractLengthColumn.php	/^    protected function getLengthExpression()$/;"	f
getLengthExpression	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractPrecisionColumn.php	/^    protected function getLengthExpression()$/;"	f
getLifetimeColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    public function getLifetimeColumn()$/;"	f
getLifetimeField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function getLifetimeField()$/;"	f
getLike	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^    public function getLike()$/;"	f
getListSelect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function getListSelect($column, $key)$/;"	f
getListeners	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function getListeners($eventName)$/;"	f
getLiteral	.\Source\application\library\Zend\Db\Sql\Literal.php	/^    public function getLiteral()$/;"	f
getLiteral	.\Source\application\library\Zend\Validator\Identical.php	/^    public function getLiteral()$/;"	f
getLoader	.\Source\application\library\vendor\composer\autoload_real.php	/^    public static function getLoader()$/;"	f
getLoaders	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    protected function getLoaders()$/;"	f
getLocale	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function getLocale()$/;"	f
getLocale	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public static function getLocale()$/;"	f
getLocale	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    public function getLocale()$/;"	f
getLocale	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^    public function getLocale()$/;"	f
getLocale	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^    public function getLocale()$/;"	f
getLocale	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function getLocale()$/;"	f
getLocale	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function getLocale();$/;"	f
getLocale	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function getLocale()$/;"	f
getLocale	.\Source\application\library\vendor\symfony\translation\TranslatorInterface.php	/^    public function getLocale();$/;"	f
getMXRecord	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function getMXRecord()$/;"	f
getMacro	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function getMacro($name)$/;"	f
getMagicFile	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    public function getMagicFile()$/;"	f
getMagicMethodSpecifications	.\Source\application\library\Zend\Db\RowGateway\Feature\AbstractFeature.php	/^    public function getMagicMethodSpecifications()$/;"	f
getMagicMethodSpecifications	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function getMagicMethodSpecifications()$/;"	f
getManager	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function getManager()$/;"	f
getMatchOption	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function getMatchOption()$/;"	f
getMax	.\Source\application\library\Zend\Validator\Between.php	/^    public function getMax()$/;"	f
getMax	.\Source\application\library\Zend\Validator\File\Count.php	/^    public function getMax()$/;"	f
getMax	.\Source\application\library\Zend\Validator\File\Size.php	/^    public function getMax($raw = false)$/;"	f
getMax	.\Source\application\library\Zend\Validator\File\WordCount.php	/^    public function getMax()$/;"	f
getMax	.\Source\application\library\Zend\Validator\LessThan.php	/^    public function getMax()$/;"	f
getMax	.\Source\application\library\Zend\Validator\StringLength.php	/^    public function getMax()$/;"	f
getMaxHeight	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function getMaxHeight()$/;"	f
getMaxLengthIterator	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function getMaxLengthIterator()$/;"	f
getMaxValue	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    public function getMaxValue()$/;"	f
getMaxWidth	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function getMaxWidth()$/;"	f
getMd5	.\Source\application\library\Zend\Validator\File\Md5.php	/^    public function getMd5()$/;"	f
getMessageBag	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Contracts\MessageProviderInterface.php	/^	public function getMessageBag();$/;"	f
getMessageBag	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function getMessageBag()$/;"	f
getMessageLength	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public static function getMessageLength()$/;"	f
getMessageTemplates	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function getMessageTemplates()$/;"	f
getMessageVariables	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function getMessageVariables()$/;"	f
getMessages	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function getMessages()$/;"	f
getMessages	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function getMessages()$/;"	f
getMessages	.\Source\application\library\Zend\Validator\ValidatorInterface.php	/^    public function getMessages();$/;"	f
getMessages	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function getMessages()$/;"	f
getMessages	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^    public function getMessages($domain)$/;"	f
getMessages	.\Source\application\library\vendor\symfony\translation\Catalogue\OperationInterface.php	/^    public function getMessages($domain);$/;"	f
getMessages	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    public function getMessages()$/;"	f
getMetadata	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function getMetadata($key = null)$/;"	f
getMetadata	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function getMetadata($key = null)$/;"	f
getMetadata	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^    public function getMetadata($key = null);$/;"	f
getMetadata	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    public function getMetadata()$/;"	f
getMetadata	.\Source\application\library\Zend\Stdlib\Message.php	/^    public function getMetadata($key = null, $default = null)$/;"	f
getMetadata	.\Source\application\library\Zend\Stdlib\MessageInterface.php	/^    public function getMetadata($key = null);$/;"	f
getMetadata	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function getMetadata($key = '', $domain = 'messages')$/;"	f
getMetadata	.\Source\application\library\vendor\symfony\translation\MetadataAwareInterface.php	/^    public function getMetadata($key = '', $domain = 'messages');$/;"	f
getMetadatum	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    public function getMetadatum($name)$/;"	f
getMigrationFiles	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function getMigrationFiles($path)$/;"	f
getMigrationPath	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\BaseCommand.php	/^	protected function getMigrationPath()$/;"	f
getMimeType	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    public function getMimeType($asArray = false)$/;"	f
getMin	.\Source\application\library\Zend\Validator\Between.php	/^    public function getMin()$/;"	f
getMin	.\Source\application\library\Zend\Validator\File\Count.php	/^    public function getMin()$/;"	f
getMin	.\Source\application\library\Zend\Validator\File\Size.php	/^    public function getMin($raw = false)$/;"	f
getMin	.\Source\application\library\Zend\Validator\File\WordCount.php	/^    public function getMin()$/;"	f
getMin	.\Source\application\library\Zend\Validator\GreaterThan.php	/^    public function getMin()$/;"	f
getMin	.\Source\application\library\Zend\Validator\StringLength.php	/^    public function getMin()$/;"	f
getMinHeight	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function getMinHeight()$/;"	f
getMinValue	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    public function getMinValue()$/;"	f
getMinWidth	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function getMinWidth()$/;"	f
getMockableClass	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	protected static function getMockableClass()$/;"	f
getModel	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function getModel()$/;"	f
getModel	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\ModelNotFoundException.php	/^	public function getModel()$/;"	f
getModels	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function getModels($columns = array('*'))$/;"	f
getModifiedColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    public function getModifiedColumn()$/;"	f
getModifiedField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function getModifiedField()$/;"	f
getModules	.\Source\application\library\Alpaca\MVC\Application.php	/^    public function getModules()$/;"	f
getMorphClass	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getMorphClass()$/;"	f
getMorphClass	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	public function getMorphClass()$/;"	f
getMorphClass	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	public function getMorphClass()$/;"	f
getMorphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	public function getMorphType()$/;"	f
getMorphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	public function getMorphType()$/;"	f
getMorphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	public function getMorphType()$/;"	f
getMorphs	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function getMorphs($name, $type, $id)$/;"	f
getMutatedAttributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getMutatedAttributes()$/;"	f
getMxCheck	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function getMxCheck()$/;"	f
getName	.\Source\application\library\Zend\Db\Adapter\Driver\Feature\AbstractFeature.php	/^    abstract public function getName();$/;"	f
getName	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Adapter\Platform\IbmDb2.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Adapter\Platform\Mysql.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Adapter\Platform\Oracle.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Adapter\Platform\PlatformInterface.php	/^    public function getName();$/;"	f
getName	.\Source\application\library\Zend\Db\Adapter\Platform\Postgresql.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Adapter\Platform\Sql92.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Adapter\Platform\Sqlite.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\RowGateway\Feature\AbstractFeature.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\Sql\Ddl\Column\ColumnInterface.php	/^    public function getName();$/;"	f
getName	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function getName();$/;"	f
getName	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function getName();$/;"	f
getName	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Session\Validator\HttpUserAgent.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\Zend\Session\Validator\ValidatorInterface.php	/^    public function getName();$/;"	f
getName	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getName()$/;"	f
getName	.\Source\application\library\vendor\lcobucci\jwt\src\Claim.php	/^    public function getName();$/;"	f
getName	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Basic.php	/^    public function getName()$/;"	f
getName	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    public function getName()$/;"	f
getNameColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    public function getNameColumn()$/;"	f
getNameField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function getNameField()$/;"	f
getNameShouldReturnTheClaimName	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\BasicTest.php	/^    public function getNameShouldReturnTheClaimName()$/;"	f
getNamedArray	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function getNamedArray()$/;"	f
getNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function getNamingStrategy()$/;"	f
getNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategyEnabledInterface.php	/^    public function getNamingStrategy();$/;"	f
getNestedLevel	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^    public static function getNestedLevel()$/;"	f
getNewMessages	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^    public function getNewMessages($domain)$/;"	f
getNewMessages	.\Source\application\library\vendor\symfony\translation\Catalogue\OperationInterface.php	/^    public function getNewMessages($domain);$/;"	f
getNextBatchNumber	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	public function getNextBatchNumber()$/;"	f
getNextBatchNumber	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationRepositoryInterface.php	/^	public function getNextBatchNumber();$/;"	f
getNonMatchingMessages	.\Source\application\library\vendor\symfony\translation\Tests\MessageSelectorTest.php	/^    public function getNonMatchingMessages()$/;"	f
getNotes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function getNotes()$/;"	f
getNumericPrecision	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getNumericPrecision()$/;"	f
getNumericScale	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getNumericScale()$/;"	f
getNumericUnsigned	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getNumericUnsigned()$/;"	f
getObjectPrototype	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^    public function getObjectPrototype()$/;"	f
getObservableEvents	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getObservableEvents()$/;"	f
getObsoleteMessages	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^    public function getObsoleteMessages($domain)$/;"	f
getObsoleteMessages	.\Source\application\library\vendor\symfony\translation\Catalogue\OperationInterface.php	/^    public function getObsoleteMessages($domain);$/;"	f
getOnDeleteRule	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    public function getOnDeleteRule()$/;"	f
getOnUpdateRule	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    public function getOnUpdateRule()$/;"	f
getOperator	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    public function getOperator()$/;"	f
getOperator	.\Source\application\library\Zend\Validator\Bitwise.php	/^    public function getOperator()$/;"	f
getOption	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function getOption($option);$/;"	f
getOption	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getOption($option)$/;"	f
getOption	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function getOption($option)$/;"	f
getOptions	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function getOptions()$/;"	f
getOptions	.\Source\application\library\Zend\Db\Sql\Ddl\Column\ColumnInterface.php	/^    public function getOptions();$/;"	f
getOptions	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function getOptions();$/;"	f
getOptions	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getOptions()$/;"	f
getOptions	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function getOptions()$/;"	f
getOptions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\Connector.php	/^	public function getOptions(array $config)$/;"	f
getOptions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\InstallCommand.php	/^	protected function getOptions()$/;"	f
getOptions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^	protected function getOptions()$/;"	f
getOptions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^	protected function getOptions()$/;"	f
getOptions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RefreshCommand.php	/^	protected function getOptions()$/;"	f
getOptions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\ResetCommand.php	/^	protected function getOptions()$/;"	f
getOptions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RollbackCommand.php	/^	protected function getOptions()$/;"	f
getOptions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^	protected function getOptions()$/;"	f
getOrdinalPosition	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getOrdinalPosition()$/;"	f
getOrdinalPosition	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function getOrdinalPosition()$/;"	f
getOriginal	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getOriginal($key = null, $default = null)$/;"	f
getOtherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function getOtherKey()$/;"	f
getOtherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function getOtherKey()$/;"	f
getOtherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	public function getOtherKey()$/;"	f
getPackageNamespace	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	protected function getPackageNamespace($package, $namespace)$/;"	f
getPaginationCount	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function getPaginationCount()$/;"	f
getPaginator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getPaginator()$/;"	f
getParam	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    public function getParam($name, $default = null)$/;"	f
getParameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function getParameterContainer()$/;"	f
getParameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function getParameterContainer()$/;"	f
getParameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function getParameterContainer()$/;"	f
getParameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function getParameterContainer()$/;"	f
getParameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    public function getParameterContainer()$/;"	f
getParameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function getParameterContainer()$/;"	f
getParameterContainer	.\Source\application\library\Zend\Db\Adapter\StatementContainer.php	/^    public function getParameterContainer()$/;"	f
getParameterContainer	.\Source\application\library\Zend\Db\Adapter\StatementContainerInterface.php	/^    public function getParameterContainer();$/;"	f
getParameters	.\Source\application\library\Zend\Db\Sql\Expression.php	/^    public function getParameters()$/;"	f
getParams	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    public function getParams()$/;"	f
getParent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function getParent()$/;"	f
getParentKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function getParentKey()$/;"	f
getPassphrase	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^    public function getPassphrase()$/;"	f
getPassphraseShouldReturnConfiguredData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeyTest.php	/^    public function getPassphraseShouldReturnConfiguredData()$/;"	f
getPath	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	protected function getPath($name, $path)$/;"	f
getPattern	.\Source\application\library\Zend\Validator\Regex.php	/^    public function getPattern()$/;"	f
getPayload	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function getPayload()$/;"	f
getPayloadShouldReturnAStringWithTheTwoEncodePartsThatGeneratedTheToken	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function getPayloadShouldReturnAStringWithTheTwoEncodePartsThatGeneratedTheToken()$/;"	f
getPdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getPdo()$/;"	f
getPdoForSelect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected function getPdoForSelect($useReadPdo = true)$/;"	f
getPerPage	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getPerPage()$/;"	f
getPlainForeignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function getPlainForeignKey()$/;"	f
getPlainMorphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	public function getPlainMorphType()$/;"	f
getPlatform	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function getPlatform()$/;"	f
getPlatform	.\Source\application\library\Zend\Db\Adapter\AdapterInterface.php	/^    public function getPlatform();$/;"	f
getPluginManager	.\Source\application\library\Zend\Validator\StaticValidator.php	/^    public static function getPluginManager()$/;"	f
getPluginManager	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function getPluginManager()$/;"	f
getPosition	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^    private function getPosition($data)$/;"	f
getPositionInUniqueConstraint	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function getPositionInUniqueConstraint()$/;"	f
getPositionalArray	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function getPositionalArray()$/;"	f
getPostProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getPostProcessor()$/;"	f
getPredicates	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    public function getPredicates()$/;"	f
getPrefixes	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function getPrefixes()$/;"	f
getPrefixesPsr4	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function getPrefixesPsr4()$/;"	f
getPrepareType	.\Source\application\library\Zend\Db\Adapter\Driver\DriverInterface.php	/^    public function getPrepareType();$/;"	f
getPrepareType	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function getPrepareType()$/;"	f
getPrepareType	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function getPrepareType()$/;"	f
getPrepareType	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function getPrepareType()$/;"	f
getPrepareType	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function getPrepareType()$/;"	f
getPrepareType	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function getPrepareType()$/;"	f
getPrepareType	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function getPrepareType()$/;"	f
getPrivateKey	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^    public function getPrivateKey(Key $key)$/;"	f
getPrivateKey	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Keychain.php	/^    public function getPrivateKey($key, $passphrase = null)$/;"	f
getPrivateKey	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^    private function getPrivateKey()$/;"	f
getPrivateKeyShouldAskSerializerToParseTheKey	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^    public function getPrivateKeyShouldAskSerializerToParseTheKey()$/;"	f
getPrivateKeyShouldRaiseExceptionWhenAWrongKeyWasGiven	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^    public function getPrivateKeyShouldRaiseExceptionWhenAWrongKeyWasGiven()$/;"	f
getPrivateKeyShouldReturnAKey	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeychainTest.php	/^    public function getPrivateKeyShouldReturnAKey()$/;"	f
getProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function getProcessor()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function getProfiler()$/;"	f
getProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function getProfiler()$/;"	f
getProfiles	.\Source\application\library\Zend\Db\Adapter\Profiler\Profiler.php	/^    public function getProfiles()$/;"	f
getPublicKey	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^    public function getPublicKey(Key $key)$/;"	f
getPublicKey	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Keychain.php	/^    public function getPublicKey($certificate)$/;"	f
getPublicKey	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^    private function getPublicKey()$/;"	f
getPublicKeyShouldAskSerializerToParseTheKey	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^    public function getPublicKeyShouldAskSerializerToParseTheKey()$/;"	f
getPublicKeyShouldRaiseExceptionWhenAWrongKeyWasGiven	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^    public function getPublicKeyShouldRaiseExceptionWhenAWrongKeyWasGiven()$/;"	f
getPublicKeyShouldReturnAValidResource	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeychainTest.php	/^    public function getPublicKeyShouldReturnAValidResource()$/;"	f
getQualifiedDeletedAtColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	public function getQualifiedDeletedAtColumn()$/;"	f
getQualifiedForeignKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function getQualifiedForeignKey()$/;"	f
getQualifiedKeyName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getQualifiedKeyName()$/;"	f
getQualifiedOtherKeyName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function getQualifiedOtherKeyName()$/;"	f
getQualifiedParentKeyName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function getQualifiedParentKeyName()$/;"	f
getQualifiedParentKeyName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function getQualifiedParentKeyName()$/;"	f
getQueries	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	protected function getQueries($migration, $method)$/;"	f
getQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function getQuery()$/;"	f
getQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function getQuery()$/;"	f
getQueryGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getQueryGrammar()$/;"	f
getQueryLog	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getQueryLog()$/;"	f
getQueryResultSetPrototype	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function getQueryResultSetPrototype()$/;"	f
getQueue	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    protected function getQueue()$/;"	f
getQuoteIdentifierSymbol	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    public function getQuoteIdentifierSymbol()$/;"	f
getQuoteIdentifierSymbol	.\Source\application\library\Zend\Db\Adapter\Platform\PlatformInterface.php	/^    public function getQuoteIdentifierSymbol();$/;"	f
getQuoteIdentifierSymbol	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^    public function getQuoteIdentifierSymbol()$/;"	f
getQuoteValueSymbol	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    public function getQuoteValueSymbol()$/;"	f
getQuoteValueSymbol	.\Source\application\library\Zend\Db\Adapter\Platform\PlatformInterface.php	/^    public function getQuoteValueSymbol();$/;"	f
getRan	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	public function getRan()$/;"	f
getRan	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationRepositoryInterface.php	/^	public function getRan();$/;"	f
getRawBindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function getRawBindings()$/;"	f
getRawState	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    public function getRawState($key = null)$/;"	f
getRawState	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    public function getRawState($key = null)$/;"	f
getRawState	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    public function getRawState($key = null)$/;"	f
getRawState	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    public function getRawState($key = null)$/;"	f
getRawState	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    public function getRawState($key = null)$/;"	f
getRawState	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function getRawState($key = null)$/;"	f
getRawState	.\Source\application\library\Zend\Db\Sql\Update.php	/^    public function getRawState($key = null)$/;"	f
getReadConfig	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	protected function getReadConfig(array $config)$/;"	f
getReadPdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getReadPdo()$/;"	f
getReadWriteConfig	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	protected function getReadWriteConfig(array $config, $type)$/;"	f
getReboundCallbacks	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function getReboundCallbacks($abstract)$/;"	f
getRecursive	.\Source\application\library\Zend\Validator\InArray.php	/^    public function getRecursive()$/;"	f
getReferenceColumn	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    public function getReferenceColumn()$/;"	f
getReferenceTable	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    public function getReferenceTable()$/;"	f
getReferencedColumnName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function getReferencedColumnName()$/;"	f
getReferencedColumns	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function getReferencedColumns()$/;"	f
getReferencedTableName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function getReferencedTableName()$/;"	f
getReferencedTableName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function getReferencedTableName()$/;"	f
getReferencedTableSchema	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function getReferencedTableSchema()$/;"	f
getReferencedTableSchema	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function getReferencedTableSchema()$/;"	f
getReflProperties	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^    protected static function getReflProperties($input)$/;"	f
getRegisteredWrappers	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    public static function getRegisteredWrappers()$/;"	f
getRelated	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function getRelated()$/;"	f
getRelatedFreshUpdate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function getRelatedFreshUpdate()$/;"	f
getRelatedIds	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function getRelatedIds()$/;"	f
getRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function getRelation($relation)$/;"	f
getRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getRelation($relation)$/;"	f
getRelationCountHash	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function getRelationCountHash()$/;"	f
getRelationCountQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function getRelationCountQuery(Builder $query, Builder $parent)$/;"	f
getRelationCountQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function getRelationCountQuery(Builder $query, Builder $parent)$/;"	f
getRelationCountQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	public function getRelationCountQuery(Builder $query, Builder $parent)$/;"	f
getRelationCountQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	public function getRelationCountQuery(Builder $query, Builder $parent)$/;"	f
getRelationCountQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	public function getRelationCountQuery(Builder $query, Builder $parent)$/;"	f
getRelationCountQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function getRelationCountQuery(Builder $query, Builder $parent)$/;"	f
getRelationCountQueryForSelfJoin	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function getRelationCountQueryForSelfJoin(Builder $query, Builder $parent)$/;"	f
getRelationName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function getRelationName()$/;"	f
getRelationValue	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	protected function getRelationValue(array $dictionary, $key, $type)$/;"	f
getRelations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getRelations()$/;"	f
getRelationshipFromMethod	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function getRelationshipFromMethod($key, $camelKey)$/;"	f
getRelativePath	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^    private function getRelativePath($domain, $locale)$/;"	f
getRememberMeSeconds	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function getRememberMeSeconds();$/;"	f
getRememberMeSeconds	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getRememberMeSeconds()$/;"	f
getRenamedDiff	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	protected function getRenamedDiff(Blueprint $blueprint, Fluent $command, Column $column, SchemaManager $schema)$/;"	f
getRepository	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function getRepository()$/;"	f
getRequestAccessTime	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function getRequestAccessTime()$/;"	f
getRequestAccessTime	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function getRequestAccessTime()$/;"	f
getRequestAccessTime	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^    public function getRequestAccessTime();$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\ConnectionInterface.php	/^    public function getResource();$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\ResultInterface.php	/^    public function getResource();$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function getResource()$/;"	f
getResource	.\Source\application\library\Zend\Db\Adapter\Driver\StatementInterface.php	/^    public function getResource();$/;"	f
getResource	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    public function getResource()$/;"	f
getResources	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function getResources()$/;"	f
getResources	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function getResources();$/;"	f
getResult	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^    public function getResult()$/;"	f
getResult	.\Source\application\library\vendor\symfony\translation\Catalogue\OperationInterface.php	/^    public function getResult();$/;"	f
getResultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function getResultPrototype()$/;"	f
getResultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function getResultPrototype()$/;"	f
getResultSetPrototype	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function getResultSetPrototype()$/;"	f
getResults	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function getResults()$/;"	f
getResults	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function getResults()$/;"	f
getResults	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasMany.php	/^	public function getResults()$/;"	f
getResults	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	public function getResults()$/;"	f
getResults	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOne.php	/^	public function getResults()$/;"	f
getResults	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphMany.php	/^	public function getResults()$/;"	f
getResults	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOne.php	/^	public function getResults()$/;"	f
getResults	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	abstract public function getResults();$/;"	f
getResultsByType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	protected function getResultsByType($type)$/;"	f
getReturnType	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^    public function getReturnType()$/;"	f
getRight	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    public function getRight()$/;"	f
getRightType	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    public function getRightType()$/;"	f
getRowCountClosure	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^    public function getRowCountClosure($context)$/;"	f
getRowCountClosure	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^    public function getRowCountClosure($context)$/;"	f
getSalt	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function getSalt()$/;"	f
getSaveHandler	.\Source\application\library\Zend\Session\AbstractManager.php	/^    public function getSaveHandler()$/;"	f
getSaveHandler	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function getSaveHandler();$/;"	f
getSaveOptions	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function getSaveOptions()$/;"	f
getSavePath	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function getSavePath();$/;"	f
getSavePath	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getSavePath()$/;"	f
getSchema	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^    public function getSchema()$/;"	f
getSchema	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function getSchema()$/;"	f
getSchema	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    private function getSchema($xliffVersion)$/;"	f
getSchemaBuilder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getSchemaBuilder()$/;"	f
getSchemaBuilder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MySqlConnection.php	/^	public function getSchemaBuilder()$/;"	f
getSchemaGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getSchemaGrammar()$/;"	f
getSchemaName	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getSchemaName()$/;"	f
getSchemaName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function getSchemaName()$/;"	f
getSchemas	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getSchemas()$/;"	f
getSchemas	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getSchemas();$/;"	f
getSchemas	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getSchemas()$/;"	f
getSeeder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^	protected function getSeeder()$/;"	f
getSelect	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function getSelect()$/;"	f
getSelectColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function getSelectColumns(array $columns = array('*'))$/;"	f
getSelectColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	protected function getSelectColumns(array $columns = array('*'))$/;"	f
getSeparator	.\Source\application\library\Zend\Validator\Isbn.php	/^    public function getSeparator()$/;"	f
getSerializer	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^    public function getSerializer()$/;"	f
getSerializerOptions	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^    public function getSerializerOptions()$/;"	f
getService	.\Source\application\library\Zend\Validator\CreditCard.php	/^    public function getService()$/;"	f
getSession	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function getSession()$/;"	f
getSessionManager	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^    protected function getSessionManager(ServiceLocatorInterface $services)$/;"	f
getSessionName	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function getSessionName()$/;"	f
getSha1	.\Source\application\library\Zend\Validator\File\Sha1.php	/^    public function getSha1()$/;"	f
getShouldReturnNullWhenItemIsNotDefined	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    public function getShouldReturnNullWhenItemIsNotDefined()$/;"	f
getShouldReturnTheItemValue	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    public function getShouldReturnTheItemValue()$/;"	f
getSignatureLength	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^    abstract public function getSignatureLength();$/;"	f
getSignatureLength	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\Sha256.php	/^    public function getSignatureLength()$/;"	f
getSignatureLength	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\Sha384.php	/^    public function getSignatureLength()$/;"	f
getSignatureLength	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\Sha512.php	/^    public function getSignatureLength()$/;"	f
getSignatureLengthMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha256Test.php	/^    public function getSignatureLengthMustBeCorrect()$/;"	f
getSignatureLengthMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha384Test.php	/^    public function getSignatureLengthMustBeCorrect()$/;"	f
getSignatureLengthMustBeCorrect	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha512Test.php	/^    public function getSignatureLengthMustBeCorrect()$/;"	f
getSigner	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^    private function getSigner()$/;"	f
getSingleByteEncodings	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    public static function getSingleByteEncodings()$/;"	f
getSize	.\Source\application\library\Zend\Validator\File\Size.php	/^    protected function getSize()$/;"	f
getSlaveAdapter	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^    public function getSlaveAdapter()$/;"	f
getSlaveSql	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^    public function getSlaveSql()$/;"	f
getSocketDsn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\MySqlConnector.php	/^	protected function getSocketDsn(array $config)$/;"	f
getSpecification	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    public function getSpecification()$/;"	f
getSpecification	.\Source\application\library\Zend\Db\Sql\Predicate\IsNull.php	/^    public function getSpecification()$/;"	f
getSpecification	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^    public function getSpecification()$/;"	f
getSql	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function getSql()$/;"	f
getSql	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function getSql()$/;"	f
getSql	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function getSql()$/;"	f
getSql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function getSql()$/;"	f
getSql	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    public function getSql()$/;"	f
getSql	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function getSql()$/;"	f
getSql	.\Source\application\library\Zend\Db\Adapter\StatementContainer.php	/^    public function getSql()$/;"	f
getSql	.\Source\application\library\Zend\Db\Adapter\StatementContainerInterface.php	/^    public function getSql();$/;"	f
getSql	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function getSql()$/;"	f
getSql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^	public function getSql()$/;"	f
getSqlInsertOffsets	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^    protected function getSqlInsertOffsets($sql)$/;"	f
getSqlInsertOffsets	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^    protected function getSqlInsertOffsets($sql)$/;"	f
getSqlPlatform	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function getSqlPlatform()$/;"	f
getSqlString	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^    public function getSqlString(PlatformInterface $adapterPlatform = null)$/;"	f
getSqlString	.\Source\application\library\Zend\Db\Sql\Platform\AbstractPlatform.php	/^    public function getSqlString(PlatformInterface $adapterPlatform = null)$/;"	f
getSqlString	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    public function getSqlString(PlatformInterface $adapterPlatform = null)$/;"	f
getSqlString	.\Source\application\library\Zend\Db\Sql\SqlInterface.php	/^    public function getSqlString(PlatformInterface $adapterPlatform = null);$/;"	f
getSqlStringForSqlObject	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function getSqlStringForSqlObject(SqlInterface $sqlObject, PlatformInterface $platform = null)$/;"	f
getStatementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function getStatementPrototype()$/;"	f
getStatementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function getStatementPrototype()$/;"	f
getStaticAdapter	.\Source\application\library\Zend\Db\TableGateway\Feature\GlobalAdapterFeature.php	/^    public static function getStaticAdapter()$/;"	f
getStep	.\Source\application\library\Zend\Validator\DateStep.php	/^    public function getStep()$/;"	f
getStep	.\Source\application\library\Zend\Validator\Step.php	/^    public function getStep()$/;"	f
getStorage	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    protected function getStorage()$/;"	f
getStorage	.\Source\application\library\Zend\Session\AbstractManager.php	/^    public function getStorage()$/;"	f
getStorage	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function getStorage();$/;"	f
getStorage	.\Source\application\library\Zend\Session\ValidatorChain.php	/^    public function getStorage()$/;"	f
getStorageOption	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    public function getStorageOption($storageOption)$/;"	f
getStorageOption	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getStorageOption($storageOption)$/;"	f
getStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function getStrategy($name)$/;"	f
getStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\StrategyEnabledInterface.php	/^    public function getStrategy($name);$/;"	f
getStrict	.\Source\application\library\Zend\Validator\Bitwise.php	/^    public function getStrict()$/;"	f
getStrict	.\Source\application\library\Zend\Validator\Identical.php	/^    public function getStrict()$/;"	f
getStrict	.\Source\application\library\Zend\Validator\InArray.php	/^    public function getStrict()$/;"	f
getStringWrapper	.\Source\application\library\Zend\Validator\StringLength.php	/^    public function getStringWrapper()$/;"	f
getStub	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	protected function getStub($table, $create)$/;"	f
getStubPath	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	public function getStubPath()$/;"	f
getSubpart	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    private static function getSubpart($pos, $part, $haystack, $encoding)$/;"	f
getSupportedEncodings	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^    public static function getSupportedEncodings()$/;"	f
getSupportedEncodings	.\Source\application\library\Zend\Stdlib\StringWrapper\Intl.php	/^    public static function getSupportedEncodings()$/;"	f
getSupportedEncodings	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^    public static function getSupportedEncodings()$/;"	f
getSupportedEncodings	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^    public static function getSupportedEncodings()$/;"	f
getSupportedEncodings	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public static function getSupportedEncodings();$/;"	f
getTable	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getTable($tableName, $schema = null)$/;"	f
getTable	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getTable($tableName, $schema = null);$/;"	f
getTable	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getTable($tableName, $schema = null)$/;"	f
getTable	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function getTable()$/;"	f
getTable	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^    public function getTable()$/;"	f
getTable	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function getTable()$/;"	f
getTable	.\Source\application\library\Zend\Db\TableGateway\TableGatewayInterface.php	/^    public function getTable();$/;"	f
getTable	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function getTable()$/;"	f
getTable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getTable()$/;"	f
getTable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function getTable()$/;"	f
getTable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function getTable()$/;"	f
getTableAndSchema	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^    public function getTableAndSchema()$/;"	f
getTableName	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function getTableName()$/;"	f
getTableName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function getTableName()$/;"	f
getTableNames	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getTableNames($schema = null, $includeViews = false)$/;"	f
getTableNames	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getTableNames($schema = null, $includeViews = false);$/;"	f
getTableNames	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getTableNames($schema = null, $includeViews = false)$/;"	f
getTablePrefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function getTablePrefix()$/;"	f
getTablePrefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	public function getTablePrefix()$/;"	f
getTables	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getTables($schema = null, $includeViews = false)$/;"	f
getTables	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getTables($schema = null, $includeViews = false);$/;"	f
getTables	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getTables($schema = null, $includeViews = false)$/;"	f
getTarget	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    public function getTarget()$/;"	f
getTemplate	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $getTemplate = null;$/;"	v
getTestNow	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function getTestNow()$/;"	f
getTests	.\Source\application\library\vendor\symfony\translation\Tests\IntervalTest.php	/^    public function getTests()$/;"	f
getTimeout	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function getTimeout()$/;"	f
getTimezone	.\Source\application\library\Zend\Validator\DateStep.php	/^    public function getTimezone()$/;"	f
getTldCheck	.\Source\application\library\Zend\Validator\Hostname.php	/^    public function getTldCheck()$/;"	f
getToeknString	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function getToeknString()$/;"	f
getToken	.\Source\application\library\Zend\Validator\Identical.php	/^    public function getToken()$/;"	f
getToken	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function getToken()$/;"	f
getTokenFromHash	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected function getTokenFromHash($hash)$/;"	f
getTokenIdFromHash	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected function getTokenIdFromHash($hash)$/;"	f
getTokenMustReturnANewTokenWithCurrentConfiguration	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function getTokenMustReturnANewTokenWithCurrentConfiguration()$/;"	f
getTouchedRelations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getTouchedRelations()$/;"	f
getTransChoiceTests	.\Source\application\library\vendor\symfony\translation\Tests\IdentityTranslatorTest.php	/^    public function getTransChoiceTests()$/;"	f
getTransChoiceTests	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function getTransChoiceTests()$/;"	f
getTransFileTests	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function getTransFileTests()$/;"	f
getTransTests	.\Source\application\library\vendor\symfony\translation\Tests\IdentityTranslatorTest.php	/^    public function getTransTests()$/;"	f
getTransTests	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function getTransTests()$/;"	f
getTranslator	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function getTranslator()$/;"	f
getTranslator	.\Source\application\library\Zend\Validator\Translator\TranslatorAwareInterface.php	/^    public function getTranslator();$/;"	f
getTranslator	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function getTranslator()$/;"	f
getTranslator	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public static function getTranslator()$/;"	f
getTranslator	.\Source\application\library\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php	/^    private function getTranslator()$/;"	f
getTranslatorTextDomain	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function getTranslatorTextDomain()$/;"	f
getTranslatorTextDomain	.\Source\application\library\Zend\Validator\Translator\TranslatorAwareInterface.php	/^    public function getTranslatorTextDomain();$/;"	f
getTrigger	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getTrigger($triggerName, $schema = null)$/;"	f
getTrigger	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getTrigger($triggerName, $schema = null);$/;"	f
getTrigger	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getTrigger($triggerName, $schema = null)$/;"	f
getTriggerNames	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getTriggerNames($schema = null)$/;"	f
getTriggerNames	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getTriggerNames($schema = null);$/;"	f
getTriggerNames	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getTriggerNames($schema = null)$/;"	f
getTriggers	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getTriggers($schema = null)$/;"	f
getTriggers	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getTriggers($schema = null);$/;"	f
getTriggers	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getTriggers($schema = null)$/;"	f
getType	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function getType()$/;"	f
getType	.\Source\application\library\Zend\Validator\CreditCard.php	/^    public function getType()$/;"	f
getType	.\Source\application\library\Zend\Validator\Isbn.php	/^    public function getType()$/;"	f
getType	.\Source\application\library\Zend\Validator\NotEmpty.php	/^    public function getType()$/;"	f
getType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	protected function getType(Fluent $column)$/;"	f
getTypeDecorator	.\Source\application\library\Zend\Db\Sql\Platform\AbstractPlatform.php	/^    public function getTypeDecorator($subject)$/;"	f
getTypeDecorator	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    public function getTypeDecorator($subject, $adapterOrPlatform = null)$/;"	f
getTypes	.\Source\application\library\Zend\Db\Sql\Expression.php	/^    public function getTypes()$/;"	f
getUnderscoreSeparatedKeys	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    public function getUnderscoreSeparatedKeys()$/;"	f
getUnderscoreToStudlyCaseFilter	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\UnderscoreNamingStrategy.php	/^    protected function getUnderscoreToStudlyCaseFilter()$/;"	f
getUpdateRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function getUpdateRule()$/;"	f
getUpdatedAtColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function getUpdatedAtColumn()$/;"	f
getUpdatedAtColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	public function getUpdatedAtColumn()$/;"	f
getUriHandler	.\Source\application\library\Zend\Validator\Uri.php	/^    public function getUriHandler()$/;"	f
getUseCookies	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function getUseCookies();$/;"	f
getUseCookies	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function getUseCookies()$/;"	f
getUseIncludePath	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function getUseIncludePath()$/;"	f
getUseProxy	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    public static function getUseProxy()$/;"	f
getUtf8StringWrapper	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^    public function getUtf8StringWrapper()$/;"	f
getValidLocalesTests	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function getValidLocalesTests()$/;"	f
getValidatableClaims	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    private function getValidatableClaims()$/;"	f
getValidationToken	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected function getValidationToken($tokenId = null)$/;"	f
getValidator	.\Source\application\library\Zend\Validator\Explode.php	/^    public function getValidator()$/;"	f
getValidatorChain	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function getValidatorChain();$/;"	f
getValidatorChain	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function getValidatorChain()$/;"	f
getValidatorPluginManager	.\Source\application\library\Zend\Validator\Explode.php	/^    public function getValidatorPluginManager()$/;"	f
getValidatorPluginManager	.\Source\application\library\Zend\Validator\ValidatorPluginManagerAwareInterface.php	/^    public function getValidatorPluginManager();$/;"	f
getValidators	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function getValidators()$/;"	f
getValue	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    protected function getValue()$/;"	f
getValue	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	public function getValue($expression)$/;"	f
getValue	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Expression.php	/^	public function getValue()$/;"	f
getValue	.\Source\application\library\vendor\lcobucci\jwt\src\Claim.php	/^    public function getValue();$/;"	f
getValue	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Basic.php	/^    public function getValue()$/;"	f
getValueDelimiter	.\Source\application\library\Zend\Validator\Explode.php	/^    public function getValueDelimiter()$/;"	f
getValueSet	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^    public function getValueSet()$/;"	f
getValueShouldReturnTheClaimValue	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\BasicTest.php	/^    public function getValueShouldReturnTheClaimValue()$/;"	f
getVariables	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\SerializableClosure.php	/^	public function getVariables()$/;"	f
getVersionNumber	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    private function getVersionNumber(\\DOMDocument $dom)$/;"	f
getView	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getView($viewName, $schema = null)$/;"	f
getView	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getView($viewName, $schema = null);$/;"	f
getView	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getView($viewName, $schema = null)$/;"	f
getViewDefinition	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^    public function getViewDefinition()$/;"	f
getViewNames	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getViewNames($schema = null)$/;"	f
getViewNames	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getViewNames($schema = null);$/;"	f
getViewNames	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getViewNames($schema = null)$/;"	f
getViews	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getViews($schema = null)$/;"	f
getViews	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getViews($schema = null);$/;"	f
getViews	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getViews($schema = null)$/;"	f
getWeekEndsAt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function getWeekEndsAt()$/;"	f
getWeekStartsAt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function getWeekStartsAt()$/;"	f
getWeekendDays	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function getWeekendDays()$/;"	f
getWildcardListeners	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	protected function getWildcardListeners($eventName)$/;"	f
getWrapper	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    public static function getWrapper($encoding = 'UTF-8', $convertEncoding = null)$/;"	f
getWriteConfig	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	protected function getWriteConfig(array $config)$/;"	f
getXml	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^    protected function getXml()$/;"	f
getXmlErrors	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    private function getXmlErrors($internalErrors)$/;"	f
getXmlWithXXE	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^    public function getXmlWithXXE()$/;"	f
getXmlWithoutXXE	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^    public function getXmlWithoutXXE()$/;"	f
getter	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^        $getter = 'get' . str_replace('_', '', $key);$/;"	v
glob	.\Source\application\library\Zend\Stdlib\Glob.php	/^    public static function glob($pattern, $flags = 0, $forceFallback = false)$/;"	f
globFlags	.\Source\application\library\Zend\Stdlib\Glob.php	/^            $globFlags = 0;$/;"	v
globalResolvingCallbacks	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected $globalResolvingCallbacks = array();$/;"	v
globalScopes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected static $globalScopes = array();$/;"	v
glue	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function implode($column, $glue = null)$/;"	v
glue	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function implode($value, $glue = null)$/;"	v
grammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$grammar = $this->getQueryGrammar();$/;"	v
grammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$grammar = $conn->getQueryGrammar();$/;"	v
grammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->grammar = $grammar;$/;"	v
grammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected $grammar;$/;"	v
grammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^		$this->grammar = $connection->getSchemaGrammar();$/;"	v
grammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	protected $grammar;$/;"	v
greaterThan	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function greaterThan($left, $right, $leftType = self::TYPE_IDENTIFIER, $rightType = self::TYPE_VALUE)$/;"	f
greaterThanOrEqualTo	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function greaterThanOrEqualTo($left, $right, $leftType = self::TYPE_IDENTIFIER, $rightType = self::TYPE_VALUE)$/;"	f
group	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $this->group = null;$/;"	v
group	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $group = null;$/;"	v
group	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function group($group)$/;"	f
group	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^		$group = $segments[0];$/;"	v
groupAndItem	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^		$groupAndItem = array_slice($this->parseBasicSegments($itemSegments), 1);$/;"	v
groupBy	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function groupBy()$/;"	f
groupBy	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function groupBy($groupBy)$/;"	f
groupedPaginate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function groupedPaginate($paginator, $perPage, $columns)$/;"	f
groupedPaginate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function groupedPaginate($paginator, $perPage, $columns)$/;"	f
groups	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $groups = array();$/;"	v
groups	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^			$this->groups = array_merge((array) $this->groups, is_array($arg) ? $arg : [$arg]);$/;"	v
groups	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $groups;$/;"	v
gt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function gt(Carbon $dt)$/;"	f
gte	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function gte(Carbon $dt)$/;"	f
gtin	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    protected function gtin($value)$/;"	f
guard	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function guard(array $guarded)$/;"	f
guardAgainstEmpty	.\Source\application\library\Zend\Stdlib\Guard\EmptyGuardTrait.php	/^    protected function guardAgainstEmpty($/;"	f
guardAgainstEmpty	.\Source\application\library\Zend\Stdlib\Guard\GuardUtils.php	/^    public static function guardAgainstEmpty($/;"	f
guardAgainstNull	.\Source\application\library\Zend\Stdlib\Guard\GuardUtils.php	/^    public static function guardAgainstNull($/;"	f
guardAgainstNull	.\Source\application\library\Zend\Stdlib\Guard\NullGuardTrait.php	/^    protected function guardAgainstNull($/;"	f
guardForArrayOrTraversable	.\Source\application\library\Zend\Stdlib\Guard\ArrayOrTraversableGuardTrait.php	/^    protected function guardForArrayOrTraversable($/;"	f
guardForArrayOrTraversable	.\Source\application\library\Zend\Stdlib\Guard\GuardUtils.php	/^    public static function guardForArrayOrTraversable($/;"	f
guarded	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->guarded = $guarded;$/;"	v
guarded	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		return count($this->fillable) == 0 && $this->guarded == array('*');$/;"	v
guarded	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		return in_array($key, $this->guarded) || $this->guarded == array('*');$/;"	v
guarded	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $guarded = array('*');$/;"	v
guarded	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	protected $guarded = array();$/;"	v
guessInverseRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function guessInverseRelation()$/;"	f
guessPackagePath	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	public function guessPackagePath()$/;"	f
h	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^                        $h = (string) $h;$/;"	v
h	.\Source\application\library\Zend\Validator\InArray.php	/^                        $h = (string) $h;$/;"	v
h	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->h = $val;$/;"	v
halt	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function fireModelEvent($event, $halt = true)$/;"	v
handle	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^        $handle = fopen('php:\/\/memory', 'rb+');$/;"	v
handleError	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    protected function handleError($code, $message)$/;"	f
has	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Float.php	/^ * named that and retain PHP 7 compatibility. The original class has been$/;"	c
has	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^     * class has not been loaded.$/;"	c
has	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function has($relation, $operator = '>=', $count = 1, $boolean = 'and', Closure $callback = null)$/;"	f
has	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function has($array, $key)$/;"	f
has	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function has($key)$/;"	f
has	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Cookie.php	/^	public static function has($key)$/;"	f
has	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function has($key = null)$/;"	f
has	.\Source\application\library\vendor\lcobucci\jwt\src\ValidationData.php	/^    public function has($name)$/;"	f
has	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        \/\/ If the class has a test now set and we are trying to create a now()$/;"	c
has	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function has($id, $domain = 'messages')$/;"	f
has	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function has($id, $domain = 'messages');$/;"	f
hasBag	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ViewErrorBag.php	/^	public function hasBag($key = 'default')$/;"	f
hasChildren	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function hasChildren()$/;"	f
hasClaim	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function hasClaim($name)$/;"	f
hasClaimMustReturnFalseWhenItIsNotConfigured	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function hasClaimMustReturnFalseWhenItIsNotConfigured()$/;"	f
hasClaimMustReturnTrueWhenItIsConfigured	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function hasClaimMustReturnTrueWhenItIsConfigured()$/;"	f
hasColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	public function hasColumn($table, $column)$/;"	f
hasColumns	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function hasColumns()$/;"	f
hasConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^	public function hasConnection($name)$/;"	f
hasDefaultTranslator	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public static function hasDefaultTranslator()$/;"	f
hasFilter	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function hasFilter($name)$/;"	f
hasFilter	.\Source\application\library\Zend\Stdlib\Hydrator\FilterEnabledInterface.php	/^    public function hasFilter($name);$/;"	f
hasFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^    public function hasFilter($name)$/;"	f
hasGetMutator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function hasGetMutator($key)$/;"	f
hasGlobalScope	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function hasGlobalScope($scope)$/;"	f
hasHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function hasHeader($name)$/;"	f
hasHeaderMustReturnFalseWhenItIsNotConfigured	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function hasHeaderMustReturnFalseWhenItIsNotConfigured()$/;"	f
hasHeaderMustReturnTrueWhenItIsConfigured	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function hasHeaderMustReturnTrueWhenItIsConfigured()$/;"	f
hasIntegerKeys	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function hasIntegerKeys($value, $allowEmpty = false)$/;"	f
hasListeners	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function hasListeners($eventName)$/;"	f
hasMacro	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\MacroableTrait.php	/^	public static function hasMacro($name)$/;"	f
hasMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function hasMany($related, $foreignKey = null, $localKey = null)$/;"	f
hasManyThrough	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function hasManyThrough($related, $through, $firstKey = null, $secondKey = null)$/;"	f
hasMetadataArrayInfo	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^    private function hasMetadataArrayInfo($key, $metadata = null)$/;"	f
hasNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function hasNamingStrategy()$/;"	f
hasNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategyEnabledInterface.php	/^    public function hasNamingStrategy();$/;"	f
hasNested	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function hasNested($relations, $operator = '>=', $count = 1, $boolean = 'and', $callback = null)$/;"	f
hasNumericKeys	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function hasNumericKeys($value, $allowEmpty = false)$/;"	f
hasOne	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function hasOne($related, $foreignKey = null, $localKey = null)$/;"	f
hasOption	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function hasOption($option);$/;"	f
hasOption	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function hasOption($option)$/;"	f
hasPcreUnicodeSupport	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    protected static $hasPcreUnicodeSupport = null;$/;"	v
hasPcreUnicodeSupport	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    public static function hasPcreUnicodeSupport()$/;"	f
hasPivotColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function hasPivotColumn($column)$/;"	f
hasPriority	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function hasPriority($priority)$/;"	f
hasQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$hasQuery = $hasQuery->getModel()->removeGlobalScopes($hasQuery);$/;"	v
hasRelativeKeywords	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function hasRelativeKeywords($time)$/;"	f
hasSchema	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^    public function hasSchema()$/;"	f
hasSetMutator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function hasSetMutator($key)$/;"	f
hasShouldReturnFalseWhenItemIsEmpty	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    public function hasShouldReturnFalseWhenItemIsEmpty()$/;"	f
hasShouldReturnFalseWhenItemIsNotDefined	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    public function hasShouldReturnFalseWhenItemIsNotDefined()$/;"	f
hasShouldReturnTrueWhenItemIsNotEmpty	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    public function hasShouldReturnTrueWhenItemIsNotEmpty()$/;"	f
hasStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function hasStrategy($name)$/;"	f
hasStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\StrategyEnabledInterface.php	/^    public function hasStrategy($name);$/;"	f
hasStringKeys	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function hasStringKeys($value, $allowEmpty = false)$/;"	f
hasTable	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function hasTable()$/;"	f
hasTable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	public function hasTable($table)$/;"	f
hasTable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\MySqlBuilder.php	/^	public function hasTable($table)$/;"	f
hasTestNow	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function hasTestNow()$/;"	f
hasTimestampAttributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	public function hasTimestampAttributes()$/;"	f
hasTranslator	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function hasTranslator()$/;"	f
hasTranslator	.\Source\application\library\Zend\Validator\Translator\TranslatorAwareInterface.php	/^    public function hasTranslator();$/;"	f
hasValidCharacters	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    public function hasValidCharacters($value)$/;"	f
hasValidCharacters	.\Source\application\library\Zend\Validator\Barcode\AdapterInterface.php	/^    public function hasValidCharacters($value);$/;"	f
hasValidCharacters	.\Source\application\library\Zend\Validator\Barcode\Codabar.php	/^    public function hasValidCharacters($value)$/;"	f
hasValidCharacters	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^    public function hasValidCharacters($value)$/;"	f
hasValidCharacters	.\Source\application\library\Zend\Validator\Barcode\Issn.php	/^    public function hasValidCharacters($value)$/;"	f
hasValidCharacters	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^    public function hasValidCharacters($value)$/;"	f
hasValidChecksum	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    public function hasValidChecksum($value)$/;"	f
hasValidChecksum	.\Source\application\library\Zend\Validator\Barcode\AdapterInterface.php	/^    public function hasValidChecksum($value);$/;"	f
hasValidChecksum	.\Source\application\library\Zend\Validator\Barcode\Issn.php	/^    public function hasValidChecksum($value)$/;"	f
hasValidLength	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    public function hasValidLength($value)$/;"	f
hasValidLength	.\Source\application\library\Zend\Validator\Barcode\AdapterInterface.php	/^    public function hasValidLength($value);$/;"	f
hasValidLength	.\Source\application\library\Zend\Validator\Barcode\Ean8.php	/^    public function hasValidLength($value)$/;"	f
hasValidLength	.\Source\application\library\Zend\Validator\Barcode\Upce.php	/^    public function hasValidLength($value)$/;"	f
hash	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^     * $hash = array($/;"	v
hash	.\Source\application\library\Zend\Validator\Csrf.php	/^        $hash = $this->getHash();$/;"	v
hash	.\Source\application\library\Zend\Validator\Csrf.php	/^        $hash = $this->getValidationToken($tokenId);$/;"	v
hash	.\Source\application\library\Zend\Validator\Csrf.php	/^        $this->hash = $this->formatHash($token, $this->generateTokenId());$/;"	v
hash	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected $hash;$/;"	v
hash	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        $hash = $this->decoder->base64UrlDecode($data);$/;"	v
hash	.\Source\application\library\vendor\lcobucci\jwt\src\Signature.php	/^        $this->hash = $hash;$/;"	v
hash	.\Source\application\library\vendor\lcobucci\jwt\src\Signature.php	/^    protected $hash;$/;"	v
hash	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\HmacTest.php	/^        $hash = hash_hmac('sha256', 'test', '123', true);$/;"	v
hashBitsPerCharacter	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^        $hashBitsPerCharacter = (int) $hashBitsPerCharacter;$/;"	v
hashBitsPerCharacter	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $hashBitsPerCharacter = (int) $hashBitsPerCharacter;$/;"	v
hashCache	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected static $hashCache;$/;"	v
hashEquals	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac.php	/^    public function hashEquals($expected, $generated)$/;"	f
hashEqualsShouldReturnFalseWhenExpectedHashHasDifferentLengthThanGenerated	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\HmacTest.php	/^    public function hashEqualsShouldReturnFalseWhenExpectedHashHasDifferentLengthThanGenerated()$/;"	f
hashEqualsShouldReturnFalseWhenExpectedHashIsDifferentThanGenerated	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\HmacTest.php	/^    public function hashEqualsShouldReturnFalseWhenExpectedHashIsDifferentThanGenerated($expected)$/;"	f
hashEqualsShouldReturnTrueWhenExpectedHashIsEqualsThanGenerated	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\HmacTest.php	/^    public function hashEqualsShouldReturnTrueWhenExpectedHashIsEqualsThanGenerated($expected)$/;"	f
hashFunction	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^        $hashFunction = (string) $hashFunction;$/;"	v
hashes	.\Source\application\library\Zend\Validator\File\Crc32.php	/^        $hashes = array_unique(array_keys($this->getHash()));$/;"	v
hashes	.\Source\application\library\Zend\Validator\File\Hash.php	/^        $hashes = array_unique(array_keys($this->getHash()));$/;"	v
hashes	.\Source\application\library\Zend\Validator\File\Md5.php	/^        $hashes = array_unique(array_keys($this->getHash()));$/;"	v
hashes	.\Source\application\library\Zend\Validator\File\Sha1.php	/^        $hashes = array_unique(array_keys($this->getHash()));$/;"	v
having	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $this->having = new Having;$/;"	v
having	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $this->having = $predicate;$/;"	v
having	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $this->having = clone $this->having;$/;"	v
having	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $this->having = new Having;$/;"	v
having	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $having = null;$/;"	v
having	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function having($predicate, $combination = Predicate\\PredicateSet::OP_AND)$/;"	f
having	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function having($column, $operator = null, $value = null, $boolean = 'and')$/;"	f
havingRaw	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function havingRaw($sql, array $bindings = array(), $boolean = 'and')$/;"	f
havings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $havings;$/;"	v
haystack	.\Source\application\library\Zend\Validator\InArray.php	/^        $haystack = $this->getHaystack();$/;"	v
haystack	.\Source\application\library\Zend\Validator\InArray.php	/^        $this->haystack = $haystack;$/;"	v
haystack	.\Source\application\library\Zend\Validator\InArray.php	/^    protected $haystack;$/;"	v
haystack	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $haystack = self::mb_substr($haystack, $offset, 2147483647, $encoding);$/;"	v
haystack	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $haystack = self::mb_substr($haystack, 0, $offset, $encoding);$/;"	v
haystack	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $haystack = self::mb_convert_case($haystack, self::MB_CASE_FOLD, $encoding);$/;"	v
head	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function head($array)$/;"	f
header	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        $header = $this->parseHeader($data[0]);$/;"	v
header	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        $header = (array) $this->decoder->jsonDecode($this->decoder->base64UrlDecode($data));$/;"	v
header	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^        $header = $this->headers[$name];$/;"	v
header	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^        $header = pack('vC2v4C12@32',$/;"	v
header	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^        $header = array($/;"	v
headers	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^        $this->headers = ['typ'=> 'JWT', 'alg' => 'none'];$/;"	v
headers	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    private $headers;$/;"	v
headers	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^        $this->headers = $headers;$/;"	v
headers	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^        array $headers = ['alg' => 'none'],$/;"	v
headers	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    private $headers;$/;"	v
headers	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\BaseSignerTest.php	/^        $headers = ['typ' => 'JWT'];$/;"	v
height	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^        $this->height = $size[1];$/;"	v
height	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    protected $height;$/;"	v
here	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		\/\/ and if we have minutes we will use the typical remember function here.$/;"	f
heuristicScan	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    protected static function heuristicScan($xml)$/;"	f
hex	.\Source\application\library\Zend\Validator\Hostname.php	/^                $hex   = ord($encoded[$indexe++]);$/;"	v
hidden	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->hidden = $hidden;$/;"	v
hidden	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $hidden = array();$/;"	v
host	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $host = array($host);$/;"	v
host	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $host = gethostbynamel($host);$/;"	v
host	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\PostgresConnector.php	/^		$host = isset($host) ? "host={$host};" : '';$/;"	v
hostname	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $hostname = $findParameterValue(array('hostname', 'host'));$/;"	v
hostname	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                    $hostname = (string) $value;$/;"	v
hostname	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $hostname = $this->validateHostnamePart();$/;"	v
hostname	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $hostname = $this->validateMXRecords();$/;"	v
hostname	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $hostname = $this->getHostnameValidator()->setTranslator($this->getTranslator())$/;"	v
hostname	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $this->hostname  = $matches[2];$/;"	v
hostname	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        foreach ($this->mxRecord as $hostname => $weight) {$/;"	v
hostname	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected $hostname;$/;"	v
hostnameValidator	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function setHostnameValidator(Hostname $hostnameValidator = null)$/;"	v
hour	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $hour = date('G');$/;"	v
hour	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $hour = $time[0];$/;"	v
hour	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $this->hour = $value;$/;"	v
hour	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function hour($value)$/;"	f
hours	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->hours = $arg;$/;"	v
hours	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^            $this->hours = $this->hours + $interval->h * $sign;$/;"	v
html	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static function html( $data = null , $type = self::VIEW_TYPE_HTML)$/;"	f
html_encoding_callback	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    private static function html_encoding_callback($m)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\AggregateHydrator.php	/^    public function hydrate(array $data, $object)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\ArraySerializable.php	/^    public function hydrate(array $data, $object)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    public function hydrate(array $data, $object)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\DelegatingHydrator.php	/^    public function hydrate(array $data, $object)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\HydrationInterface.php	/^    public function hydrate(array $data, $object);$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\ArrayMapNamingStrategy.php	/^    public function hydrate($name)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\CompositeNamingStrategy.php	/^    public function hydrate($name)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\IdentityNamingStrategy.php	/^    public function hydrate($name)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\MapNamingStrategy.php	/^    public function hydrate($name)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\NamingStrategyInterface.php	/^    public function hydrate($name);$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\UnderscoreNamingStrategy.php	/^    public function hydrate($name)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^    public function hydrate(array $data, $object)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^    public function hydrate(array $data, $object)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\BooleanStrategy.php	/^    public function hydrate($value)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^    public function hydrate($value, $data = null)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DateTimeFormatterStrategy.php	/^    public function hydrate($value)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DefaultStrategy.php	/^    public function hydrate($value)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ExplodeStrategy.php	/^    public function hydrate($value)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^    public function hydrate($value)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyChain.php	/^    public function hydrate($value)$/;"	f
hydrate	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyInterface.php	/^    public function hydrate($value);$/;"	f
hydrate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function hydrate(array $items, $connection = null)$/;"	f
hydrateFunc	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^            $this->hydrateFunc = $hydrateFunc;$/;"	v
hydrateFunc	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^            $this->hydrateFunc = function ($value) {$/;"	v
hydrateFunc	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^    protected $hydrateFunc = null;$/;"	v
hydrateFunc	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^    public function __construct($extractFunc = null, $hydrateFunc = null)$/;"	v
hydrateName	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function hydrateName($name, $data = null)$/;"	f
hydratePivotRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function hydratePivotRelation(array $models)$/;"	f
hydrateRaw	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function hydrateRaw($query, $bindings = array(), $connection = null)$/;"	f
hydrateValue	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function hydrateValue($name, $value, $data = null)$/;"	f
hydrated	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DateTimeFormatterStrategy.php	/^            $hydrated = DateTime::createFromFormat($this->format, $value);$/;"	v
hydrated	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DateTimeFormatterStrategy.php	/^            $hydrated = DateTime::createFromFormat($this->format, $value, $this->timezone);$/;"	v
hydratedObject	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^        $this->hydratedObject = $hydratedObject;$/;"	v
hydratedObject	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^    protected $hydratedObject;$/;"	v
hydrationData	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^        $this->hydrationData  = $hydrationData;$/;"	v
hydrationData	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^        $this->hydrationData = $hydrationData;$/;"	v
hydrationData	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^    protected $hydrationData;$/;"	v
hydrationMap	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\ArrayMapNamingStrategy.php	/^        $this->hydrationMap  = array_flip($extractionMap);$/;"	v
hydrationMap	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\ArrayMapNamingStrategy.php	/^    private $hydrationMap = array();$/;"	v
hydrationMethodsCache	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^        $this->hydrationMethodsCache = $this->extractionMethodsCache = array();$/;"	v
hydrationMethodsCache	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    private $hydrationMethodsCache = array();$/;"	v
hydrationStrategies	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyChain.php	/^        $this->hydrationStrategies = array_reverse($extractionStrategies);$/;"	v
hydrationStrategies	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyChain.php	/^    private $hydrationStrategies;$/;"	v
hydrator	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^        $this->hydrator = $hydrator;$/;"	v
hydrator	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^    protected $hydrator = null;$/;"	v
hydrator	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^    public function __construct(HydratorInterface $hydrator = null, $objectPrototype = null)$/;"	v
hydrator	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydratorListener.php	/^        $this->hydrator = $hydrator;$/;"	v
hydrator	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydratorListener.php	/^    protected $hydrator;$/;"	v
hydrator	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorAwareTrait.php	/^        $this->hydrator = $hydrator;$/;"	v
hydrator	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorAwareTrait.php	/^    protected $hydrator = null;$/;"	v
hydrators	.\Source\application\library\Zend\Stdlib\Hydrator\DelegatingHydrator.php	/^        $this->hydrators = $hydrators;$/;"	v
hydrators	.\Source\application\library\Zend\Stdlib\Hydrator\DelegatingHydrator.php	/^    protected $hydrators;$/;"	v
i	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^            foreach ($this->statementBindValues['values'] as $i => &$f) {$/;"	v
i	.\Source\application\library\Zend\Db\Sql\Combine.php	/^        foreach ($this->combine as $i => $combine) {$/;"	v
i	.\Source\application\library\Zend\Db\Sql\Expression.php	/^                foreach ($parameters as $i=>$parameter) {$/;"	v
i	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^        foreach ($selectParameters[0] as $i => $columnParameters) {$/;"	v
i	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^        foreach ($this->addColumns as $i => $column) {$/;"	v
i	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^        foreach ($this->columns as $i => $column) {$/;"	v
i	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^        foreach ($selectParameters[0] as $i => $columnParameters) {$/;"	v
i	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^        foreach ($selectParameters[0] as $i => $columnParameters) {$/;"	v
i	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->i = $val;$/;"	v
i	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $i = 0;$/;"	v
i	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $i = 1;$/;"	v
i	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^        foreach ($parts as $i => $part) {$/;"	v
i5	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $this->i5 = (php_uname('s') == 'OS400');$/;"	v
i5	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    protected $i5;$/;"	v
ibanRegex	.\Source\application\library\Zend\Validator\Iban.php	/^    protected static $ibanRegex = array($/;"	v
ibmDb2Platform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^        $ibmDb2Platform    = new IbmDb2\\IbmDb2();$/;"	v
id	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^                $id = $fk['id'];$/;"	v
id	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $id = $name = null;$/;"	v
id	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$id = $id ?: $name.'_id';$/;"	v
id	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$id = $query->insertGetId($attributes, $keyName = $this->getKeyName());$/;"	v
id	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		foreach ($records as $id => $attributes)$/;"	v
id	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		if ($id instanceof Model) $id = $id->getKey();$/;"	v
id	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\PostgresProcessor.php	/^		$id = $result[$sequence];$/;"	v
id	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\Processor.php	/^		$id = $query->getConnection()->getPdo()->lastInsertId($sequence);$/;"	v
id	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\SqlServerProcessor.php	/^		$id = $query->getConnection()->getPdo()->lastInsertId();$/;"	v
id	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^        $id = null,$/;"	v
id	.\Source\application\library\vendor\symfony\translation\Catalogue\MergeOperation.php	/^        foreach ($this->source->all($domain) as $id => $message) {$/;"	v
id	.\Source\application\library\vendor\symfony\translation\Catalogue\MergeOperation.php	/^        foreach ($this->target->all($domain) as $id => $message) {$/;"	v
id	.\Source\application\library\vendor\symfony\translation\Catalogue\TargetOperation.php	/^        foreach ($this->source->all($domain) as $id => $message) {$/;"	v
id	.\Source\application\library\vendor\symfony\translation\Catalogue\TargetOperation.php	/^        foreach ($this->target->all($domain) as $id => $message) {$/;"	v
id	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^        $id = (string) $id;$/;"	v
id	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^        foreach ($toolInfo as $id => $value) {$/;"	v
id	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^        $id = (string) $id;$/;"	v
id	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator->addResource('array', array((string) $id => $translation), $locale, $domain);$/;"	v
id	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $id = (string) $id;$/;"	v
id	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^        foreach ($messages as $id => $value) {$/;"	v
id	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^        foreach ($node as $id => $value) {$/;"	v
idColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^        $idColumn = (string) $idColumn;$/;"	v
idColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^        $this->idColumn = $idColumn;$/;"	v
idColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    protected $idColumn = 'id';$/;"	v
ident	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^        foreach ($this->abstractOptions['messageVariables'] as $ident => $property) {$/;"	v
identcode	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    protected function identcode($value)$/;"	f
identifier	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^        $identifier = '';$/;"	v
identifier	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^            $identifier = $this->getIdentifierRegularExpression();$/;"	v
identifier	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^        $this->identifier = $identifier;$/;"	v
identifier	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    protected $identifier    = null;$/;"	v
identifier	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^        $identifier = $this->getIdentifier();$/;"	v
identifier	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^        $this->identifier = $identifier;$/;"	v
identifier	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^    protected $identifier;$/;"	v
identifier	.\Source\application\library\Zend\Db\Sql\Predicate\IsNull.php	/^        $identifier = $this->normalizeArgument($this->identifier, self::TYPE_IDENTIFIER);$/;"	v
identifier	.\Source\application\library\Zend\Db\Sql\Predicate\IsNull.php	/^        $this->identifier = $identifier;$/;"	v
identifier	.\Source\application\library\Zend\Db\Sql\Predicate\IsNull.php	/^    protected $identifier;$/;"	v
identifier	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^        $this->identifier = $identifier;$/;"	v
identifier	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^    protected $identifier = '';$/;"	v
identifierChain	.\Source\application\library\Zend\Db\Adapter\Platform\IbmDb2.php	/^            $identifierChain = implode('"' . $this->identifierSeparator . '"', $identifierChain);$/;"	v
identifierChain	.\Source\application\library\Zend\Db\Adapter\Platform\IbmDb2.php	/^        $identifierChain = str_replace('"', '\\\\"', $identifierChain);$/;"	v
identifierChain	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^            $identifierChain = $this->getIdentifierChainRegularExpression();$/;"	v
identifierList	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^            $identifierList = $this->getIdentifierListRegularExpression();$/;"	v
identifierSeparator	.\Source\application\library\Zend\Db\Adapter\Platform\IbmDb2.php	/^            $this->identifierSeparator = $options['identifier_separator'];$/;"	v
identifierSeparator	.\Source\application\library\Zend\Db\Adapter\Platform\IbmDb2.php	/^    protected $identifierSeparator = '.';$/;"	v
identifierSpecFragment	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^            $identifierSpecFragment = '%s';$/;"	v
identifierSpecFragment	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^            $identifierSpecFragment = '(' . implode(', ', array_fill(0, count($identifier), '%s')) . ')';$/;"	v
idnLength	.\Source\application\library\Zend\Validator\Hostname.php	/^    protected $idnLength = array($/;"	v
idnToAscii	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected function idnToAscii($email)$/;"	f
idnToUtf8	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected function idnToUtf8($email)$/;"	f
ids	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$ids = is_array($ids) ? $ids : func_get_args();$/;"	v
ids	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$ids = $this->getRelatedIds();$/;"	v
ids	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$ids = (array) $ids;$/;"	v
ids	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		if ($ids instanceof Collection) $ids = $ids->modelKeys();$/;"	v
ids	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		if ($ids instanceof Model) $ids = (array) $ids->getKey();$/;"	v
ids	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^            $ids = array('singular' => $singularId, 'plural' => $pluralId);$/;"	v
image	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static function image( $data = null , $type = self::VIEW_TYPE_IMAGE)$/;"	f
implemented	.\Source\application\library\vendor\symfony\translation\Dumper\DumperInterface.php	/^ * DumperInterface is the interface implemented by all translation dumpers.$/;"	i
implemented	.\Source\application\library\vendor\symfony\translation\Loader\LoaderInterface.php	/^ * LoaderInterface is the interface implemented by all translation loaders.$/;"	i
implementing	.\Source\application\library\Zend\Session\Storage\Factory.php	/^                    'Unrecognized type "%s" provided; expects a class implementing %s\\StorageInterface',$/;"	c
implode	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function implode($column, $glue = null)$/;"	f
implode	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function implode($value, $glue = null)$/;"	f
in	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function in($identifier, $valueSet = null)$/;"	f
in	.\Source\application\library\vendor\composer\ClassLoader.php	/^ * In this example, if you try to use a class in the Symfony\\Component$/;"	c
inArray	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function inArray($needle, array $haystack, $strict = false)$/;"	f
inAttributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$inAttributes = array_key_exists($key, $this->attributes);$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    protected $inTransaction = false;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    public function inTransaction()$/;"	f
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $this->inTransaction = false;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $this->inTransaction = true;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $this->inTransaction = false;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $this->inTransaction = true;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^            $this->inTransaction = false;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $this->inTransaction = false;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $this->inTransaction = true;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^            $this->inTransaction = false;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^            $this->inTransaction = true;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $this->inTransaction           = false;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $this->inTransaction = false;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $this->inTransaction = true;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $this->inTransaction = false;$/;"	v
inTransaction	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $this->inTransaction = true;$/;"	v
includeFile	.\Source\application\library\vendor\composer\ClassLoader.php	/^function includeFile($file)$/;"	f
includeFiles	.\Source\application\library\vendor\composer\autoload_real.php	/^            $includeFiles = Composer\\Autoload\\ComposerStaticInit9ce445a4f92bda8f8ef4d37e4296111f::$files;$/;"	v
includeFiles	.\Source\application\library\vendor\composer\autoload_real.php	/^            $includeFiles = require __DIR__ . '\/autoload_files.php';$/;"	v
includeReturn	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^            $includeReturn = include $this->Template;$/;"	v
includeViews	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getTableNames($schema = null, $includeViews = false)$/;"	v
includeViews	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getTables($schema = null, $includeViews = false)$/;"	v
includeViews	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getTableNames($schema = null, $includeViews = false);$/;"	v
includeViews	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getTables($schema = null, $includeViews = false);$/;"	v
includeViews	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getTableNames($schema = null, $includeViews = false)$/;"	v
includeViews	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getTables($schema = null, $includeViews = false)$/;"	v
inclusive	.\Source\application\library\Zend\Validator\GreaterThan.php	/^        $this->inclusive = $inclusive;$/;"	v
inclusive	.\Source\application\library\Zend\Validator\GreaterThan.php	/^    protected $inclusive;$/;"	v
inclusive	.\Source\application\library\Zend\Validator\LessThan.php	/^        $this->inclusive = $inclusive;$/;"	v
inclusive	.\Source\application\library\Zend\Validator\LessThan.php	/^    protected $inclusive;$/;"	v
increment	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function increment($column, $amount = 1, array $extra = array())$/;"	f
increment	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function increment($column, $amount = 1)$/;"	f
increment	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function increment($column, $amount = 1, array $extra = array())$/;"	f
incrementOrDecrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function incrementOrDecrement($column, $amount, $method)$/;"	f
incrementOrDecrementAttributeValue	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function incrementOrDecrementAttributeValue($column, $amount, $method)$/;"	f
incrementing	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->incrementing = $value;$/;"	v
incrementing	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public $incrementing = true;$/;"	v
increments	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function increments($column)$/;"	f
index	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^        $index = array_search((string) $wrapper, static::$wrapperRegistry, true);$/;"	v
index	.\Source\application\library\Zend\Validator\Hostname.php	/^        $index = 0;$/;"	v
index	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$index = 0;$/;"	v
index	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^			$index = $this->createIndexName($type, $columns);$/;"	v
index	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^		$index = strtolower($this->table.'_'.implode('_', $columns).'_'.$type);$/;"	v
index	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function index($columns, $name = null)$/;"	f
index2Action	.\Source\application\module\Index\Controller\IndexController.php	/^    public function index2Action()$/;"	f
indexAction	.\Source\application\library\Alpaca\MVC\Controller\AlpacaController.php	/^    public function indexAction()$/;"	f
indexAction	.\Source\application\module\Index\Controller\IndexController.php	/^    public function indexAction()$/;"	f
indexAction	.\Source\application\module\Index\Controller\PassportController.php	/^    public function indexAction()$/;"	f
indexCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected function indexCommand($type, $columns, $index)$/;"	f
indexIso885916	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^            $indexIso885916 = array_search('ISO-8859-16', static::$encodings, true);$/;"	v
indexName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function morphs($name, $indexName = null)$/;"	v
indexes	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $indexes = $this->fetchPragma('index_list', $table, $schema);$/;"	v
indexes	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^            $indexes = array_flip($data);$/;"	v
inflect	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^	protected static function inflect($value, $source, $irregular)$/;"	f
inflected	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^				$inflected = preg_replace($pattern, $inflected, $value);$/;"	v
info	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $info = db2_server_info($this->resource);$/;"	v
info	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $info = $this->data['columns'][$schema][$table][$columnName];$/;"	v
info	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $info = $this->data['constraints'][$schema][$table][$constraintName];$/;"	v
info	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $info = $this->data['triggers'][$schema][$triggerName];$/;"	v
info	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^            $info = $this->fetchPragma('index_info', $index['name'], $schema);$/;"	v
info	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $info = array($/;"	v
init	.\Source\application\library\Alpaca\MVC\Controller\AbstractController.php	/^    protected function init()$/;"	f
init	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $init ="init";$/;"	v
init	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public function init()$/;"	f
init	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function init($input = null)$/;"	f
init	.\Source\application\library\Zend\Session\Storage\StorageInitializationInterface.php	/^    public function init($input = null);$/;"	f
init	.\Source\application\library\Zend\Stdlib\InitializableInterface.php	/^    public function init();$/;"	f
init	.\Source\application\library\Zend\Validator\Hostname.php	/^            $init   = false;$/;"	v
init	.\Source\application\library\Zend\Validator\Hostname.php	/^        $init  = true;$/;"	v
init	.\Source\application\module\Index\Controller\IndexController.php	/^    public function init()$/;"	f
init	.\Source\application\module\Index\Controller\PassportController.php	/^    public function init(){$/;"	f
initAction	.\Source\application\library\Alpaca\MVC\Controller\AbstractController.php	/^    protected function initAction()$/;"	f
initCsrfToken	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected function initCsrfToken()$/;"	f
initData	.\Source\application\library\Alpaca\MVC\Controller\AbstractController.php	/^    protected function initData()$/;"	f
initLayout	.\Source\application\library\Alpaca\MVC\Controller\AbstractController.php	/^    protected function initLayout()$/;"	f
initRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function initRelation(array $models, $relation)$/;"	f
initRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function initRelation(array $models, $relation)$/;"	f
initRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasMany.php	/^	public function initRelation(array $models, $relation)$/;"	f
initRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	public function initRelation(array $models, $relation)$/;"	f
initRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOne.php	/^	public function initRelation(array $models, $relation)$/;"	f
initRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphMany.php	/^	public function initRelation(array $models, $relation)$/;"	f
initRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOne.php	/^	public function initRelation(array $models, $relation)$/;"	f
initRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	abstract public function initRelation(array $models, $relation);$/;"	f
initResult	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $initResult = $controllerClass->$init();$/;"	v
initResult	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $initResult = $moduleClass->$init();$/;"	v
initResult	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $initResult = $this->init();$/;"	v
initResult	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $initResult = null;$/;"	v
initial	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function reduce(callable $callback, $initial = null)$/;"	v
initialParameters	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $initialParameters = new ParameterContainer((is_array($initialParameters) ? $initialParameters : array()));$/;"	v
initialParameters	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function createStatement($initialSql = null, $initialParameters = null)$/;"	v
initialize	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function initialize($resource, $generatedValue = null)$/;"	f
initialize	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function initialize($resource)$/;"	f
initialize	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function initialize($resource, $generatedValue, $isBuffered = null)$/;"	f
initialize	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function initialize(\\mysqli $mysqli)$/;"	f
initialize	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function initialize($resource \/*, $generatedValue, $isBuffered = null*\/)$/;"	f
initialize	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function initialize($oci8)$/;"	f
initialize	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function initialize(PDOStatement $resource, $generatedValue, $rowCount = null)$/;"	f
initialize	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function initialize(\\PDO $connectionResource)$/;"	f
initialize	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function initialize($resource, $generatedValue)$/;"	f
initialize	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    public function initialize($pgsql)$/;"	f
initialize	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function initialize($resource, $generatedValue = null)$/;"	f
initialize	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function initialize($resource)$/;"	f
initialize	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    public function initialize($dataSource)$/;"	f
initialize	.\Source\application\library\Zend\Db\ResultSet\ResultSetInterface.php	/^    public function initialize($dataSource);$/;"	f
initialize	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function initialize()$/;"	f
initialize	.\Source\application\library\Zend\Db\RowGateway\Feature\AbstractFeature.php	/^    public function initialize()$/;"	f
initialize	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function initialize()$/;"	f
initialize	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function initialize()$/;"	f
initializeCacheCatalogue	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private function initializeCacheCatalogue($locale)$/;"	f
initializeCatalogue	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    protected function initializeCatalogue($locale)$/;"	f
initializeValidatorChain	.\Source\application\library\Zend\Session\SessionManager.php	/^    protected function initializeValidatorChain()$/;"	f
injectTranslator	.\Source\application\library\Zend\Validator\ValidatorPluginManager.php	/^    public function injectTranslator($validator)$/;"	f
injectValidatorPluginManager	.\Source\application\library\Zend\Validator\ValidatorPluginManager.php	/^    public function injectValidatorPluginManager($validator)$/;"	f
input	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $input = $input->getArrayCopy();$/;"	v
input	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $input = (array) $input;$/;"	v
input	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^                $input = (array) $input;$/;"	v
input	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^            $input = $_SESSION;$/;"	v
input	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^            $input = array();$/;"	v
input	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^        $input = array(),$/;"	v
input	.\Source\application\library\Zend\Session\Storage\Factory.php	/^            $input = $options['input'];$/;"	v
input	.\Source\application\library\Zend\Session\Storage\Factory.php	/^        $input         = array();$/;"	v
input	.\Source\application\library\Zend\Session\Storage\Factory.php	/^        $input = null;$/;"	v
input	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^                $input = (array) $input;$/;"	v
input	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^            $input = $_SESSION;$/;"	v
input	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^            $input = array();$/;"	v
input	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^            $input = get_class($input);$/;"	v
insert	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public function insert($insertQuery)$/;"	f
insert	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^            $insert = $this->sql->insert();$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                        $insert = ' AUTO_INCREMENT';$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                        $insert = ' COLUMN_FORMAT ' . strtoupper($coValue);$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                        $insert = ' COMMENT ' . $adapterPlatform->quoteValue($coValue);$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                        $insert = ' STORAGE ' . strtoupper($coValue);$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                        $insert = ' UNSIGNED';$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                        $insert = ' ZEROFILL';$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                $insert = '';$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                        $insert = ' AUTO_INCREMENT';$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                        $insert = ' COLUMN_FORMAT ' . strtoupper($coValue);$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                        $insert = ' COMMENT ' . $platform->quoteValue($coValue);$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                        $insert = ' STORAGE ' . strtoupper($coValue);$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                        $insert = ' UNSIGNED';$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                        $insert = ' ZEROFILL';$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                $insert = '';$/;"	v
insert	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function insert($table = null)$/;"	f
insert	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $insert = $this->sql->insert();$/;"	v
insert	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function insert($set)$/;"	f
insert	.\Source\application\library\Zend\Db\TableGateway\TableGatewayInterface.php	/^    public function insert($set);$/;"	f
insert	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function insert($name, $value, $priority = 0)$/;"	f
insert	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function insert($data, $priority = 1)$/;"	f
insert	.\Source\application\library\Zend\Stdlib\SplPriorityQueue.php	/^    public function insert($datum, $priority)$/;"	f
insert	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function insert($query, $bindings = array())$/;"	f
insert	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function insert($query, $bindings = array());$/;"	f
insert	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function insert(array $values)$/;"	f
insertAndSetId	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function insertAndSetId(Builder $query, $attributes)$/;"	f
insertGetId	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function insertGetId(array $values, $sequence = null)$/;"	f
insertPos	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^            $insertPos = strpos($sql, ' ' . $needle);$/;"	v
insertPos	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^            $insertPos = strpos($sql, ' ' . $needle);$/;"	v
insertStart	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^            $insertStart   = $this->getSqlInsertOffsets($sql);$/;"	v
insertStart	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^        $insertStart = array();$/;"	v
insertStart	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^            $insertStart   = $this->getSqlInsertOffsets($sql);$/;"	v
insertStart	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^        $insertStart = array();$/;"	v
insertStartCount	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                    $insertStartCount = count($insertStart);$/;"	v
insertStartCount	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                    $insertStartCount = count($insertStart);$/;"	v
insertState	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $insertState = $insert->getRawState();$/;"	v
insertWith	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function insertWith(Insert $insert)$/;"	f
instance	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^    private static $instance;$/;"	v
instance	.\Source\application\library\Alpaca\MVC\Application.php	/^    private static $instance;$/;"	v
instance	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    private static $instance;$/;"	v
instance	.\Source\application\library\Alpaca\Tools\Validate.php	/^    public static $instance;$/;"	v
instance	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$instance = $this->make($abstract);$/;"	v
instance	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		\/\/ If we can not resolve the class instance, we will check to see if the value$/;"	c
instance	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function instance($abstract, $instance)$/;"	f
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$instance = new $class;$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$instance = $this->newInstance(array(), true);$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$instance = new $related;$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$instance = new static;$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$instance = static::firstOrNew($attributes);$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	 * Get the global scopes for this class instance.$/;"	c
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^		$instance = $this->getResults();$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$instance = $this->related->newInstance($attributes);$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^		$instance = $this->related->newInstance($attributes);$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^		$instance = $this->related->newInstance($attributes);$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^		$instance = $this->createModelByType($type);$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^		$instance = new static;$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$instance = $this->resolve($file);$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Seeder.php	/^			$instance = $this->container->make($class);$/;"	v
instance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Seeder.php	/^			$instance = new $class;$/;"	v
instance	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^			\/\/ received in this method into this listener class instance's methods.$/;"	c
instance	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^		$instance = static::getFacadeRoot();$/;"	v
instance	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\CapsuleManagerTrait.php	/^	protected static $instance;$/;"	v
instance	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function instance(DateTime $dt)$/;"	f
instance	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^        $instance = new static($di->y, $di->m, 0, $di->d, $di->h, $di->i, $di->s);$/;"	v
instance	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public static function instance(DateInterval $di)$/;"	f
instance	.\Source\application\service\JwtAuth\JwtManager.php	/^	protected static $instance;$/;"	v
instanceParameterIndex	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^    protected $instanceParameterIndex = array();$/;"	v
instances	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$instances = $this->getDependencies($/;"	v
instances	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$this->instances = array();$/;"	v
instances	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected $instances = array();$/;"	v
instances	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$instances = array();$/;"	v
instances	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^		$instances = array();$/;"	v
integer	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function integer($column, $autoIncrement = false, $unsigned = false)$/;"	f
internalEncoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    private static $internalEncoding = 'UTF-8';$/;"	v
internalErrors	.\Source\application\library\vendor\symfony\translation\Loader\QtFileLoader.php	/^        $internalErrors = libxml_use_internal_errors(true);$/;"	v
internalErrors	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^        $internalErrors = libxml_use_internal_errors(true);$/;"	v
internalErrors	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $internalErrors = libxml_use_internal_errors(true);$/;"	v
internalFlag	.\Source\application\library\Zend\Stdlib\Glob.php	/^            foreach ($flagMap as $internalFlag => $globFlag) {$/;"	v
intersect	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    public function intersect($select, $modifier = '')$/;"	f
intersect	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^        $intersect = array_intersect($rowchkvalue, $colchkvalue);$/;"	v
intersect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^		$intersect = new static;$/;"	v
intersect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function intersect($items)$/;"	f
intersect	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function intersect($items)$/;"	f
interval	.\Source\application\library\vendor\symfony\translation\Interval.php	/^        $interval = trim($interval);$/;"	v
interval	.\Source\application\library\vendor\symfony\translation\MessageSelector.php	/^        foreach ($explicitRules as $interval => $m) {$/;"	v
intervalMaxSeconds	.\Source\application\library\Zend\Validator\DateStep.php	/^        $intervalMaxSeconds = $this->computeIntervalMaxSeconds($intervalParts);$/;"	v
intervalParts	.\Source\application\library\Zend\Validator\DateStep.php	/^        $intervalParts = array_combine($unitKeys, $intervalParts);$/;"	v
intervalParts	.\Source\application\library\Zend\Validator\DateStep.php	/^        $intervalParts = explode('|', $step->format('%y|%m|%d|%h|%i|%s'));$/;"	v
intervalUnit	.\Source\application\library\Zend\Validator\DateStep.php	/^                    $intervalUnit = $key;$/;"	v
intervalUnit	.\Source\application\library\Zend\Validator\DateStep.php	/^            $intervalUnit = null;$/;"	v
into	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    public function into($table)$/;"	f
into	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^			\/\/ We need to transform all instances of the DateTime class into an actual$/;"	c
invalidAudience	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^        $invalidAudience = new ValidationData(self::CURRENT_TIME - 10);$/;"	v
invalidConectionType	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^            $invalidConectionType = ($type !== PGSQL_CONNECT_ASYNC);$/;"	v
invalidConectionType	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $invalidConectionType = ($type !== PGSQL_CONNECT_FORCE_NEW);$/;"	v
invalidIssuer	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^        $invalidIssuer = new ValidationData(self::CURRENT_TIME - 10);$/;"	v
invalidOperatorAndValue	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function invalidOperatorAndValue($operator, $value)$/;"	f
invalidValidationData	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^    public function invalidValidationData()$/;"	f
inverse	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^		$this->inverse = $inverse;$/;"	v
inverse	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	protected $inverse;$/;"	v
inverse	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $inverse = true;$/;"	v
inverse	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $inverse = false;$/;"	v
invokableClasses	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorPluginManager.php	/^    protected $invokableClasses = array($/;"	v
invokableClasses	.\Source\application\library\Zend\Validator\ValidatorPluginManager.php	/^    protected $invokableClasses = array($/;"	v
invokeHeuristicScan	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^    public function invokeHeuristicScan($xml)$/;"	f
ip2long	.\Source\application\library\Zend\Validator\Ip.php	/^        $ip2long = ip2long($value);$/;"	v
ipValidator	.\Source\application\library\Zend\Validator\Hostname.php	/^            $ipValidator = new Ip();$/;"	v
ipValidator	.\Source\application\library\Zend\Validator\Hostname.php	/^    public function setIpValidator(Ip $ipValidator = null)$/;"	v
irregular	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^				$irregular = static::matchCase($irregular, $value);$/;"	v
irregular	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^		$irregular = array_flip(static::$irregular);$/;"	v
irregular	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^		foreach ($irregular as $irregular => $pattern)$/;"	v
irregular	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^	public static $irregular = array($/;"	v
is	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Float.php	/^ * renamed to "Floating", and this class is now an extension of it. It raises an$/;"	c
is	.\Source\application\library\vendor\composer\ClassLoader.php	/^     * Finds the path to the file where the class is defined.$/;"	c
is	.\Source\application\library\vendor\composer\ClassLoader.php	/^ * This class is loosely based on the Symfony UniversalClassLoader.$/;"	c
is	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			\/\/ If the class is null, it means the dependency is a string or some other$/;"	c
is	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function is($pattern, $value)$/;"	f
isAlias	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function isAlias($name)$/;"	f
isBigEndian	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^            $isBigEndian = false;$/;"	v
isBigEndian	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^            $isBigEndian = true;$/;"	v
isBirthday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isBirthday(Carbon $dt = null)$/;"	f
isBreakOnFirstFailure	.\Source\application\library\Zend\Validator\Explode.php	/^    public function isBreakOnFirstFailure()$/;"	f
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function isBuffered()$/;"	f
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function createResult($resource, $isBuffered = null)$/;"	v
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^                $this->isBuffered = true;$/;"	v
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^            $this->isBuffered = $isBuffered;$/;"	v
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^            $this->isBuffered = true;$/;"	v
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    protected $isBuffered = null;$/;"	v
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function initialize($resource, $generatedValue, $isBuffered = null)$/;"	v
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function isBuffered()$/;"	f
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function createResult($resource, $isBuffered = null)$/;"	v
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    protected $isBuffered = null;$/;"	v
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function initialize($resource \/*, $generatedValue, $isBuffered = null*\/)$/;"	v
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function isBuffered()$/;"	f
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function isBuffered()$/;"	f
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function isBuffered()$/;"	f
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\ResultInterface.php	/^    public function isBuffered();$/;"	f
isBuffered	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function isBuffered()$/;"	f
isBuffered	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    public function isBuffered()$/;"	f
isBuildable	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function isBuildable($concrete, $abstract)$/;"	f
isCheck	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function isCheck()$/;"	f
isClassMapAuthoritative	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function isClassMapAuthoritative()$/;"	f
isColumns	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^        $isColumns = array($/;"	v
isColumns	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $isColumns = array($/;"	v
isColumns	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        $isColumns = array($/;"	v
isColumns	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        $isColumns = array($/;"	v
isConnected	.\Source\application\library\Zend\Db\Adapter\Driver\ConnectionInterface.php	/^    public function isConnected();$/;"	f
isConnected	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    public function isConnected()$/;"	f
isConnected	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    public function isConnected()$/;"	f
isConnected	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    public function isConnected()$/;"	f
isConnected	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function isConnected()$/;"	f
isConnected	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    public function isConnected()$/;"	f
isConnected	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function isConnected()$/;"	f
isDeferred	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	public function isDeferred()$/;"	f
isDirty	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function isDirty($attributes = null)$/;"	f
isEmpty	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function isEmpty()$/;"	f
isEmpty	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function isEmpty()$/;"	f
isEmpty	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function isEmpty()$/;"	f
isExpression	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	public function isExpression($value)$/;"	f
isFK	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^                $isFK = ('FOREIGN KEY' == $row['CONSTRAINT_TYPE']);$/;"	v
isFK	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^                $isFK = ('R' == $row['CONSTRAINT_TYPE']);$/;"	v
isFK	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $isFK = false;$/;"	v
isFK	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^                $isFK = ('FOREIGN KEY' == $row['constraint_type']);$/;"	v
isFK	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^                $isFK = ('FOREIGN KEY' == $row['CONSTRAINT_TYPE']);$/;"	v
isFK	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        $isFK = false;$/;"	v
isFile	.\Source\application\library\vendor\symfony\translation\Extractor\AbstractFileExtractor.php	/^    protected function isFile($file)$/;"	f
isFillable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function isFillable($key)$/;"	f
isForeignKey	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function isForeignKey()$/;"	f
isFresh	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    public function isFresh($timestamp)$/;"	f
isFriday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isFriday()$/;"	f
isFuture	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $isFuture = $diffInterval->invert === 1;$/;"	v
isFuture	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isFuture()$/;"	f
isGuarded	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function isGuarded($key)$/;"	f
isHashTable	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function isHashTable($value, $allowEmpty = false)$/;"	f
isI5	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    protected function isI5()$/;"	f
isIdentifier	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^                $isIdentifier = (bool) $column['isIdentifier'];$/;"	v
isIdentifier	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $isIdentifier = false;$/;"	v
isImmutable	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function isImmutable()$/;"	f
isImmutable	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^        $this->isImmutable = true;$/;"	v
isImmutable	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    protected $isImmutable = false;$/;"	v
isImmutable	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function isImmutable()$/;"	f
isImmutable	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^    public function isImmutable()$/;"	f
isImmutable	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^    public function isImmutable();$/;"	f
isIncrementalStepping	.\Source\application\library\Zend\Validator\DateStep.php	/^        $isIncrementalStepping               = $baseDate < $valueDate;$/;"	v
isInitialized	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^        $this->isInitialized = true;$/;"	v
isInitialized	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    protected $isInitialized = false;$/;"	v
isInitialized	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $this->isInitialized = true;$/;"	v
isInitialized	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    protected $isInitialized = false;$/;"	v
isInitialized	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function isInitialized()$/;"	f
isLIFO	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^                $this->isLIFO = $isLifo;$/;"	v
isLIFO	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    protected $isLIFO = 1;$/;"	v
isLIFO	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function isLIFO($flag = null)$/;"	f
isLeapYear	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isLeapYear()$/;"	f
isLifo	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^            $isLifo = $flag === true ? 1 : -1;$/;"	v
isList	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function isList($value, $allowEmpty = false)$/;"	f
isLocked	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function isLocked($key = null)$/;"	f
isLocked	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function isLocked($key = null)$/;"	f
isLocked	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^    public function isLocked($key = null);$/;"	f
isMagicFileDisabled	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    public function isMagicFileDisabled()$/;"	f
isMock	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	protected static function isMock()$/;"	f
isMonday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isMonday()$/;"	f
isMxSupported	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function isMxSupported()$/;"	f
isNested	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function isNested($name, $relation)$/;"	f
isNotNull	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function isNotNull($identifier)$/;"	f
isNow	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $isNow = $other === null;$/;"	v
isNull	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function isNull($identifier)$/;"	f
isNullable	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        $this->isNullable = $isNullable;$/;"	v
isNullable	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $isNullable = null;$/;"	v
isNullable	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function isNullable()$/;"	f
isNullable	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Boolean.php	/^    protected $isNullable = false;$/;"	v
isNullable	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^        $this->isNullable = (bool) $nullable;$/;"	v
isNullable	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    protected $isNullable = false;$/;"	v
isNullable	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function isNullable()$/;"	f
isNullable	.\Source\application\library\Zend\Db\Sql\Ddl\Column\ColumnInterface.php	/^    public function isNullable();$/;"	f
isNumericUnsigned	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function isNumericUnsigned()$/;"	f
isOperator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$isOperator = in_array($operator, $this->operators);$/;"	v
isPast	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isPast()$/;"	f
isPersistent	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $isPersistent = $findParameterValue(array('persistent', 'PERSISTENT', 'Persistent'));$/;"	v
isPersistent	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $isPersistent = $findParameterValue(array('persistent'));$/;"	v
isPhp54	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    protected static $isPhp54;$/;"	v
isPhpFpm	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    public static function isPhpFpm()$/;"	f
isPkModified	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^                    $isPkModified = true;$/;"	v
isPkModified	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^            $isPkModified = false;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^        $this->isPrepared = true;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    protected $isPrepared = false;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function isPrepared()$/;"	f
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^            $this->isPrepared = false;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $this->isPrepared = true;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    protected $isPrepared = false;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function isPrepared()$/;"	f
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        $this->isPrepared = true;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    protected $isPrepared = false;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function isPrepared()$/;"	f
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $this->isPrepared = false;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $this->isPrepared = true;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    protected $isPrepared = false;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function isPrepared()$/;"	f
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    public function isPrepared()$/;"	f
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^            $this->isPrepared = true;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $this->isPrepared = true;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    protected $isPrepared = false;$/;"	v
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function isPrepared()$/;"	f
isPrepared	.\Source\application\library\Zend\Db\Adapter\Driver\StatementInterface.php	/^    public function isPrepared();$/;"	f
isPrimaryKey	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function isPrimaryKey()$/;"	f
isQuery	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    protected $isQuery = null;$/;"	v
isQuery	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    protected $isQuery = null;$/;"	v
isQueryResult	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function isQueryResult()$/;"	f
isQueryResult	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function isQueryResult()$/;"	f
isQueryResult	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function isQueryResult()$/;"	f
isQueryResult	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function isQueryResult()$/;"	f
isQueryResult	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function isQueryResult()$/;"	f
isQueryResult	.\Source\application\library\Zend\Db\Adapter\Driver\ResultInterface.php	/^    public function isQueryResult();$/;"	f
isQueryResult	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function isQueryResult()$/;"	f
isReserved	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected function isReserved($host)$/;"	f
isSameDay	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isSameDay(Carbon $dt)$/;"	f
isSaturday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isSaturday()$/;"	f
isSelectContainDistinct	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^        $this->isSelectContainDistinct = $isSelectContainDistinct;$/;"	v
isSelectContainDistinct	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^    protected $isSelectContainDistinct= false;$/;"	v
isShared	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function isShared($abstract)$/;"	f
isSingleByteEncoding	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    public static function isSingleByteEncoding($encoding)$/;"	f
isSoftDeleteConstraint	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^	protected function isSoftDeleteConstraint(array $where, $column)$/;"	f
isSunday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isSunday()$/;"	f
isSupported	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    public static function isSupported($encoding, $convertEncoding = null)$/;"	f
isSupported	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^    public static function isSupported($encoding, $convertEncoding = null)$/;"	f
isSupported	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public static function isSupported($encoding, $convertEncoding = null);$/;"	f
isTableReadOnly	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function isTableReadOnly()$/;"	f
isTemporary	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^        $this->isTemporary = (bool) $temporary;$/;"	v
isTemporary	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected $isTemporary = false;$/;"	v
isTemporary	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    public function __construct($table = '', $isTemporary = false)$/;"	v
isTemporary	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    public function isTemporary()$/;"	f
isThursday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isThursday()$/;"	f
isToday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isToday()$/;"	f
isTomorrow	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isTomorrow()$/;"	f
isTranslatorEnabled	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function isTranslatorEnabled()$/;"	f
isTranslatorEnabled	.\Source\application\library\Zend\Validator\Translator\TranslatorAwareInterface.php	/^    public function isTranslatorEnabled();$/;"	f
isTuesday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isTuesday()$/;"	f
isUnique	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $isUnique = $findParameterValue(array('unique'));$/;"	v
isUnique	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function isUnique()$/;"	f
isUnique	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	protected function isUnique($key, $message)$/;"	f
isUpdatable	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^        $this->isUpdatable = $isUpdatable;$/;"	v
isUpdatable	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^    protected $isUpdatable;$/;"	v
isUpdatable	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^    public function isUpdatable()$/;"	f
isValid	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function isValid();$/;"	f
isValid	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function isValid()$/;"	f
isValid	.\Source\application\library\Zend\Session\Validator\HttpUserAgent.php	/^    public function isValid()$/;"	f
isValid	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    public function isValid()$/;"	f
isValid	.\Source\application\library\Zend\Session\Validator\ValidatorInterface.php	/^    public function isValid();$/;"	f
isValid	.\Source\application\library\Zend\Validator\Barcode.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Between.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Bitwise.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Callback.php	/^    public function isValid($value, $context = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\CreditCard.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function isValid($value, $context = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Date.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\DateStep.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Db\NoRecordExists.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Db\RecordExists.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Digits.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Explode.php	/^    public function isValid($value, $context = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\Count.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\Crc32.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\ExcludeExtension.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\Exists.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\Extension.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\Hash.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\Md5.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\NotExists.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\Sha1.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\Size.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\Upload.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\UploadFile.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\File\WordCount.php	/^    public function isValid($value, $file = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\GreaterThan.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Hex.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Hostname.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Iban.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Identical.php	/^    public function isValid($value, $context = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\InArray.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Ip.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Isbn.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\LessThan.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\NotEmpty.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Regex.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Sitemap\Changefreq.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Sitemap\Lastmod.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Sitemap\Loc.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Sitemap\Priority.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Step.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\StringLength.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Timezone.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\Uri.php	/^    public function isValid($value)$/;"	f
isValid	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function isValid($value, $context = null)$/;"	f
isValid	.\Source\application\library\Zend\Validator\ValidatorInterface.php	/^    public function isValid($value);$/;"	f
isValidUtf8	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    public static function isValidUtf8($str)$/;"	f
isValueObscured	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function isValueObscured()$/;"	f
isVulnerableVersion	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        $isVulnerableVersion = ($/;"	v
isWednesday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isWednesday()$/;"	f
isWeekday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isWeekday()$/;"	f
isWeekend	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isWeekend()$/;"	f
isYesterday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function isYesterday()$/;"	f
isbn10	.\Source\application\library\Zend\Validator\Isbn.php	/^                $isbn10 = str_replace($this->getSeparator(), '', $value);$/;"	v
isbn13	.\Source\application\library\Zend\Validator\Isbn.php	/^                $isbn13 = str_replace($this->getSeparator(), '', $value);$/;"	v
iss	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^        $iss = null,$/;"	v
issn	.\Source\application\library\Zend\Validator\Barcode\Issn.php	/^    protected function issn($value)$/;"	f
item	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^			$item = implode('.', array_slice($segments, 1));$/;"	v
item	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^            $item = compact('ids', 'translated');$/;"	v
item	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^                $item = $defaults;$/;"	v
item	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^        $item = $defaults;$/;"	v
itemKey	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^				$itemKey = is_object($item) ? $item->{$key} : $item[$key];$/;"	v
itemSegments	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^		$itemSegments = explode('.', $item);$/;"	v
itemValue	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^			$itemValue = is_object($item) ? $item->{$value} : $item[$value];$/;"	v
items	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^        $this->items  = array();$/;"	v
items	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    protected $items = array();$/;"	v
items	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    protected $items      = array();$/;"	v
items	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^			$this->items = $query->eagerLoadRelations($this->items);$/;"	v
items	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^		$items = is_null($items) ? $this->items : $items;$/;"	v
items	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$items = $instance->getConnection()->select($query, $bindings);$/;"	v
items	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^			$items = $items->all();$/;"	v
items	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^			$items = $items->toArray();$/;"	v
items	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^		$this->items = $items;$/;"	v
items	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^		$this->items = $results;$/;"	v
items	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^		$this->items = array_map($callback, $this->items);$/;"	v
items	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^		$this->items = array_values($this->items);$/;"	v
items	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	protected $items = array();$/;"	v
items	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function __construct(array $items = array())$/;"	v
items	.\Source\application\library\vendor\lcobucci\jwt\src\ValidationData.php	/^        $this->items = [$/;"	v
items	.\Source\application\library\vendor\lcobucci\jwt\src\ValidationData.php	/^    private $items;$/;"	v
iterator	.\Source\application\library\Zend\Validator\InArray.php	/^            $iterator = new RecursiveIteratorIterator(new RecursiveArrayIterator($haystack));$/;"	v
iterator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $iterator = new \\RecursiveIteratorIterator(new \\RecursiveDirectoryIterator($this->tmpDir), \\RecursiveIteratorIterator::CHILD_FIRST);$/;"	v
iteratorClass	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^        $iteratorClass = '\\\\ArrayIterator'$/;"	v
iteratorClass	.\Source\application\library\Zend\Session\Storage\Factory.php	/^            $iteratorClass = $options['iterator_class'];$/;"	v
iteratorClass	.\Source\application\library\Zend\Session\Storage\Factory.php	/^        $iteratorClass = 'ArrayIterator';$/;"	v
iteratorClass	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^                $this->iteratorClass = $class;$/;"	v
iteratorClass	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^            $this->iteratorClass = $class;$/;"	v
iteratorClass	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    protected $iteratorClass;$/;"	v
iteratorToArray	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function iteratorToArray($iterator, $recursive = true)$/;"	f
j	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                        $j = 0;$/;"	v
j	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                        $j = 1;$/;"	v
j	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                        $j = 2;$/;"	v
j	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                    $j = isset($j) ? $j : 0;$/;"	v
j	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                        $j = 0;$/;"	v
j	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                        $j = 1;$/;"	v
j	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                        $j = 2;$/;"	v
j	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                    $j = isset($j) ? $j : 0;$/;"	v
j	.\Source\application\library\Zend\Db\Sql\Select.php	/^        foreach ($this->joins as $j => $join) {$/;"	v
jColumns	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $jColumns = array();$/;"	v
jFromTable	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $jFromTable = is_scalar($jColumn)$/;"	v
jKey	.\Source\application\library\Zend\Db\Sql\Select.php	/^            foreach ($join['columns'] as $jKey => $jColumn) {$/;"	v
join	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function join($name, $on, $columns = self::SQL_STAR, $type = self::JOIN_INNER)$/;"	f
join	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^			$join = new JoinClause($type, $table);$/;"	v
join	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function join($table, $one, $operator = null, $two = null, $type = 'inner', $where = false)$/;"	f
joinAs	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $joinAs = $platform->quoteIdentifier(key($join['name']));$/;"	v
joinAs	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $joinAs = null;$/;"	v
joinName	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $joinName = $joinName->getExpression();$/;"	v
joinName	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $joinName = $joinName->getTableAndSchema();$/;"	v
joinName	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $joinName = $join['name'];$/;"	v
joinName	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $joinName = $platform->quoteIdentifier($joinName);$/;"	v
joinName	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $joinName = '(' . $this->processSubSelect($joinName, $platform, $driver, $parameterContainer) . ')';$/;"	v
joinName	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $joinName = ($joinName[1] ? $platform->quoteIdentifier($joinName[1]) . $platform->getIdentifierSeparator() : '') . $platform->quoteIdentifier($joinName[0]);$/;"	v
joinName	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $joinName = current($join['name']);$/;"	v
joinName	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $joinName = (is_array($join['name'])) ? key($join['name']) : $join['name'];$/;"	v
joinName	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $joinName = null;$/;"	v
joinName	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $joinName = parent::resolveTable($joinName, $platform, $driver, $parameterContainer);$/;"	v
joinSpecArgArray	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $joinSpecArgArray = array();$/;"	v
joinWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function joinWhere($table, $one, $operator, $two, $type = 'inner')$/;"	f
joinWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^		$joinWhere = $this->compileUpdateJoinWheres($query);$/;"	v
joinWheres	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^		$joinWheres = array();$/;"	v
joiner	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$joiner = $union['all'] ? ' union all ' : ' union ';$/;"	v
joiner	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^		$joiner = $union['all'] ? ' union all ' : ' union ';$/;"	v
joining	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function create(array $attributes, array $joining = array(), $touch = true)$/;"	v
joining	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function save(Model $model, array $joining = array(), $touch = true)$/;"	v
joiningTable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function joiningTable($related)$/;"	f
joinings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function createMany(array $records, array $joinings = array())$/;"	v
joinings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function saveMany(array $models, array $joinings = array())$/;"	v
joins	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $this->joins = array();$/;"	v
joins	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $joins = array();$/;"	v
joins	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $joins;$/;"	v
joins	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^			$joins = ' '.$this->compileJoins($query, $query->joins);$/;"	v
joins	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^			$joins = '';$/;"	v
joins	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^			$joins = ' '.$this->compileJoins($query, $query->joins);$/;"	v
json	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public static function json( $data = null , $type = self::VIEW_TYPE_JSON)$/;"	f
json	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^	public static function json($data = array(), $status = 200, array $headers = array(), $options = 0)$/;"	f
json	.\Source\application\library\vendor\lcobucci\jwt\src\Parsing\Encoder.php	/^        $json = json_encode($data);$/;"	v
jsonDecode	.\Source\application\library\vendor\lcobucci\jwt\src\Parsing\Decoder.php	/^    public function jsonDecode($json)$/;"	f
jsonDecodeMustRaiseExceptionWhenAnErrorHasOccured	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Parsing\DecoderTest.php	/^    public function jsonDecodeMustRaiseExceptionWhenAnErrorHasOccured()$/;"	f
jsonDecodeMustReturnTheDecodedData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Parsing\DecoderTest.php	/^    public function jsonDecodeMustReturnTheDecodedData()$/;"	f
jsonEncode	.\Source\application\library\vendor\lcobucci\jwt\src\Parsing\Encoder.php	/^    public function jsonEncode($data)$/;"	f
jsonEncodeMustRaiseExceptionWhenAnErrorHasOccured	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Parsing\EncoderTest.php	/^    public function jsonEncodeMustRaiseExceptionWhenAnErrorHasOccured()$/;"	f
jsonEncodeMustReturnAJSONString	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Parsing\EncoderTest.php	/^    public function jsonEncodeMustReturnAJSONString()$/;"	f
jsonSerialize	.\Source\application\library\Zend\Stdlib\JsonSerializable\PhpLegacyCompatibility.php	/^    public function jsonSerialize();$/;"	f
jsonSerialize	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function jsonSerialize()$/;"	f
jsonSerialize	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function jsonSerialize()$/;"	f
jsonSerialize	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function jsonSerialize()$/;"	f
jsonSerialize	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function jsonSerialize()$/;"	f
jsonSerialize	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Basic.php	/^    public function jsonSerialize()$/;"	f
jsonSerializeShouldReturnTheClaimValue	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\BasicTest.php	/^    public function jsonSerializeShouldReturnTheClaimValue()$/;"	f
jsonp	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^	public static function jsonp($callback, $data = [], $status = 200, array $headers = [], $options = 0)$/;"	f
jwt	.\Source\application\service\JwtAuth\JwtManager.php	/^	public static function jwt()$/;"	f
k	.\Source\application\library\Zend\Db\Sql\Select.php	/^                    $k = $v;$/;"	v
k	.\Source\application\library\Zend\Db\Sql\Select.php	/^        foreach ($order as $k => $v) {$/;"	v
k	.\Source\application\library\Zend\Db\Sql\Select.php	/^        foreach ($this->order as $k => $v) {$/;"	v
k	.\Source\application\library\Zend\Db\Sql\Update.php	/^        foreach ($values as $k => $v) {$/;"	v
k	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^        foreach ($ar as $k => $v) {$/;"	v
key	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^            foreach ($data as $key => $value){$/;"	v
key	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^            foreach ($this->Data as $key => $value){$/;"	v
key	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^        foreach ($data as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function key()$/;"	f
key	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function key()$/;"	f
key	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function key()$/;"	f
key	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        foreach ($this->connectionParameters as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function key()$/;"	f
key	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function key()$/;"	f
key	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        foreach ($this->connectionParameters as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function key()$/;"	f
key	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^                $key = null;$/;"	v
key	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^        foreach ($parameters as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function key()$/;"	f
key	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^                $keys[] = $key = new Object\\ConstraintKeyObject($constraintKeyInfo['column_name']);$/;"	v
key	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        ) as $key => $setMethod) {$/;"	v
key	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        foreach ($matches as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^            $key = key($this->dataSource);$/;"	v
key	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    public function key()$/;"	f
key	.\Source\application\library\Zend\Db\Sql\AbstractExpression.php	/^            $key = key($argument);$/;"	v
key	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^        $key = array_search($this->primaryKeyField, $columns);$/;"	v
key	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^                $key = 'session.' . $storageName;$/;"	v
key	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^                $key = 'url_rewriter.tags';$/;"	v
key	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $key    = strtolower(preg_replace('#(?<=[a-z])([A-Z])#', '_\\1', $option));$/;"	v
key	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        foreach ($options as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^        foreach ($options as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^        foreach ($this as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^        foreach ($b as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^        foreach ($data as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^        foreach ($iterator as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Stdlib\Hydrator\ArraySerializable.php	/^        foreach ($data as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^        foreach ($data as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Stdlib\Message.php	/^        foreach ($spec as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Stdlib\Message.php	/^        foreach ($this->getMetadata() as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function key()$/;"	f
key	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^        foreach ($this->items as $key => $item) {$/;"	v
key	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^        foreach ($messages as $key => $message) {$/;"	v
key	.\Source\application\library\Zend\Validator\Csrf.php	/^        foreach ($options as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Validator\DateStep.php	/^            foreach ($intervalParts as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Validator\File\Exists.php	/^        foreach ($directories as $key => $dir) {$/;"	v
key	.\Source\application\library\Zend\Validator\File\Extension.php	/^        foreach ($extensions as $key => $ext) {$/;"	v
key	.\Source\application\library\Zend\Validator\File\MimeType.php	/^        foreach ($mimetypes as $key => $mt) {$/;"	v
key	.\Source\application\library\Zend\Validator\Hostname.php	/^        foreach ($decoded as $key => $value) {$/;"	v
key	.\Source\application\library\Zend\Validator\Identical.php	/^                    $key = key($token);$/;"	v
key	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		foreach ($parameters as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		foreach ($bindings as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^			foreach ($results as $key => &$value)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function lists($column, $key = null)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^			$key = $key->getKey();$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^				$key = snake_case($key);$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$key = $this->removeTableFromKey($key);$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$key = $instance->getKeyName();$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		foreach ($this->attributes as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		foreach ($this->fillableFromArray($attributes) as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		foreach ($this->getArrayableRelations() as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^		$key = $this->related->getTable().'.'.$this->otherKey;$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$key = $baseTable.'.'.$this->related->getKeyName();$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$key = $this->getRelated()->getKeyName();$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$key = $this->wrap($this->getQualifiedParentKeyName());$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		foreach ($ids as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		foreach ($model->getAttributes() as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		foreach ($models as $key => $model)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		foreach ($records as $key => $record)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^			$key = $model->getKey();$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$key = $this->wrap($parentTable.'.'.$this->firstKey);$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^			$key = $model->getAttribute($this->localKey);$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^		$key = $instance->getKeyName();$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^		$key = $this->wrap($this->getQualifiedParentKeyName());$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	protected function getKeys(array $models, $key = null)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^		foreach ((array) $query->wheres as $key => $where)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^		foreach ($segments as $key => $segment)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^				foreach ($column as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^			foreach ($values as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function lists($column, $key = null)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function remember($minutes, $key = null)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		foreach ($values as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^		foreach ($values as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^		foreach ($this->listeners as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^		foreach ($this->wildcards as $key => $listeners)$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^			$key = array_shift($keys);$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^		foreach ($array as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function pluck($array, $value, $key = null)$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^			$key = data_get($item, $keyBy);$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^		foreach ($this->items as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function lists($value, $key = null)$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^		foreach ($attributes as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^		foreach ($messages as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^		foreach ($this->messages as $key => $messages)$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^		$key = $value.$delimiter;$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^		$key = $value;$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^		foreach ($array as $key => $value)$/;"	v
key	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_pluck($array, $value, $key = null)$/;"	v
key	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\BaseSigner.php	/^            $key = new Key($key);$/;"	v
key	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa.php	/^        $key = openssl_get_privatekey($key->getContent(), $key->getPassphrase());$/;"	v
key	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa.php	/^        $key = openssl_get_publickey($key->getContent());$/;"	v
key	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^        $key = '-----BEGIN PUBLIC KEY-----' . PHP_EOL$/;"	v
key	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\BaseSignerTest.php	/^        $key = new Key('123');$/;"	v
key	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^        $key = new Key('testing');$/;"	v
key	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeyTest.php	/^        $key = new Key('file:\/\/' . vfsStream::url('root\/test.pem'));$/;"	v
key	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeyTest.php	/^        $key = new Key('testing', 'test');$/;"	v
key	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeychainTest.php	/^        $key = $keychain->getPrivateKey('testing', 'test');$/;"	v
key	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeychainTest.php	/^        $key = $keychain->getPublicKey('testing');$/;"	v
key	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^        foreach ($messages as $key => $message) {$/;"	v
key	.\Source\application\library\vendor\symfony\translation\Loader\ArrayLoader.php	/^        foreach ($subnode as $key => $value) {$/;"	v
key	.\Source\application\library\vendor\symfony\translation\Loader\IcuResFileLoader.php	/^        foreach ($rb as $key => $value) {$/;"	v
key	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^                foreach ($segment->target->attributes() as $key => $value) {$/;"	v
key	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^                foreach ($translation->target->attributes() as $key => $value) {$/;"	v
key	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^            foreach ($keys as $key => $value) {$/;"	v
key	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        foreach ($messages as $key => $translation) {$/;"	v
keyBy	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function keyBy($keyBy)$/;"	f
keyContent	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^        $keyContent = 'MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE7it\/EKmcv9bfpcV1fBreLMRXxWpn'$/;"	v
keyContent	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^        $keyContent = 'MHcCAQEEIBGpMoZJ64MMSzuo5JbmXpf9V4qSWdLIl\/8RmJLcfn\/qoAoGC'$/;"	v
keyMetadata	.\Source\application\library\vendor\symfony\translation\Catalogue\MergeOperation.php	/^                if (null !== $keyMetadata = $this->target->getMetadata($id, $domain)) {$/;"	v
keyMetadata	.\Source\application\library\vendor\symfony\translation\Catalogue\MergeOperation.php	/^            if (null !== $keyMetadata = $this->source->getMetadata($id, $domain)) {$/;"	v
keyMetadata	.\Source\application\library\vendor\symfony\translation\Catalogue\TargetOperation.php	/^                if (null !== $keyMetadata = $this->source->getMetadata($id, $domain)) {$/;"	v
keyMetadata	.\Source\application\library\vendor\symfony\translation\Catalogue\TargetOperation.php	/^                if (null !== $keyMetadata = $this->target->getMetadata($id, $domain)) {$/;"	v
keyParametersByArgument	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function keyParametersByArgument(array $dependencies, array $parameters)$/;"	f
keyTop	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^        $keyTop = $this->getPosition($data);$/;"	v
keychain	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^        $keychain = new Keychain();$/;"	v
keychain	.\Source\application\library\vendor\lcobucci\jwt\test\functional\Keys.php	/^        $keychain = new Keychain();$/;"	v
keychain	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\KeychainTest.php	/^        $keychain = new Keychain();$/;"	v
keys	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $keys = array();$/;"	v
keys	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^            $keys  = array_keys($array);$/;"	v
keys	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^            $keys  = array_keys($array);$/;"	v
keys	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $keys = array_keys($this->abstractOptions['messageTemplates']);$/;"	v
keys	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^		$keys = array();$/;"	v
keys	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^			$keys = $results->fetch($key)->all();$/;"	v
keys	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^		$keys = explode('.', $key);$/;"	v
keys	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^		$keys = array_rand($this->items, $amount);$/;"	v
keys	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function keys()$/;"	f
known	.\Source\application\library\Zend\Validator\File\Hash.php	/^        $known = hash_algos();$/;"	v
ksort	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function ksort()$/;"	f
lang	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^		$lang = $path.'\/lang';$/;"	v
langCode	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^        foreach ($matrix as $langCode => $data) {$/;"	v
language	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    private static $language = 'neutral';$/;"	v
last	.\Source\application\library\Zend\Validator\Barcode\Codabar.php	/^            $last = substr($value, -1, 1);$/;"	v
last	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function last($array, $callback, $default = null)$/;"	f
last	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function last()$/;"	f
last	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function last($array)$/;"	f
lastArg	.\Source\application\library\vendor\zendframework\zendxml\tests\Bootstrap.php	/^    $lastArg = end($_SERVER['argv']);$/;"	v
lastInsertValue	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $this->lastInsertValue = $this->adapter->getDriver()->getConnection()->getLastGeneratedValue();$/;"	v
lastInsertValue	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    protected $lastInsertValue = null;$/;"	v
lastMonth	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $lastMonth = $dt->month;$/;"	v
lastOfMonth	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function lastOfMonth($dayOfWeek = null)$/;"	f
lastOfQuarter	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function lastOfQuarter($dayOfWeek = null)$/;"	f
lastOfYear	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function lastOfYear($dayOfWeek = null)$/;"	f
lastPreparedStatement	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $this->lastPreparedStatement = $this->driver->createStatement($sql);$/;"	v
lastPreparedStatement	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $this->lastPreparedStatement = null;$/;"	v
lastPreparedStatement	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    protected $lastPreparedStatement = null;$/;"	v
lastSequenceId	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^    public function lastSequenceId()$/;"	f
lastSpace	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^                $lastSpace = $current;$/;"	v
lastStart	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^                    $lastStart  = $current + 1;$/;"	v
lastStart	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^                $lastStart  = $lastSpace = $current + 1;$/;"	v
lastStart	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^                $lastStart  = $lastSpace = $current;$/;"	v
lastStart	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^                $lastStart  = $lastSpace = $lastSpace + 1;$/;"	v
lastStart	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $lastStart = $lastSpace = 0;$/;"	v
lastString	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $lastString = $this->substr($padString, 0, $lengthOfPadding % $padStringLength);$/;"	v
lastStringLeft	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^            $lastStringLeft  = $this->substr($padString, 0, $lastStringLeftLength);$/;"	v
lastStringLeftLength	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^            $lastStringLeftLength   = $lastStringRightLength = floor($lastStringLength \/ 2);$/;"	v
lastStringLength	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^            $lastStringLength       = $lengthOfPadding - 2 * $repeatCountLeft * $padStringLength;$/;"	v
lastStringRight	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^            $lastStringRight = $this->substr($padString, 0, $lastStringRightLength);$/;"	v
lastcolon	.\Source\application\library\Zend\Validator\Ip.php	/^            $lastcolon = strrpos($value, ':');$/;"	v
lateCollect	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    public function lateCollect()$/;"	f
latest	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function latest($column = 'created_at')$/;"	f
layout	.\Source\application\library\Alpaca\MVC\Controller\AbstractController.php	/^        $this->layout = new ViewModel();$/;"	v
layout	.\Source\application\library\Alpaca\MVC\Controller\AbstractController.php	/^    protected $layout = null;   $/;"	v
left	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^            $left = $this->normalizeArgument($left, $this->leftType);$/;"	v
left	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^        $left = null,$/;"	v
left	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^        $this->left = $left;$/;"	v
left	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    protected $left;$/;"	v
leftCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php	/^        $leftCatalogue = new MessageCatalogue('en', array('messages' => array('a' => 'old_a', 'b' => 'old_b')));$/;"	v
leftCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php	/^        $leftCatalogue = new MessageCatalogue('en', array('messages' => array('a' => 'old_a', 'b' => 'old_b')));$/;"	v
leftJoin	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function leftJoin($table, $first, $operator = null, $second = null)$/;"	f
leftJoinWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function leftJoinWhere($table, $one, $operator, $two)$/;"	f
leftNumber	.\Source\application\library\vendor\symfony\translation\Interval.php	/^            $leftNumber = self::convertNumber($matches['left']);$/;"	v
leftType	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^            $this->leftType = $left[1];$/;"	v
leftType	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^        $leftType = self::TYPE_IDENTIFIER,$/;"	v
leftType	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^        $this->leftType = $type;$/;"	v
leftType	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    protected $leftType = self::TYPE_IDENTIFIER;$/;"	v
leftType	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function equalTo($left, $right, $leftType = self::TYPE_IDENTIFIER, $rightType = self::TYPE_VALUE)$/;"	v
leftType	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function greaterThan($left, $right, $leftType = self::TYPE_IDENTIFIER, $rightType = self::TYPE_VALUE)$/;"	v
leftType	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function greaterThanOrEqualTo($left, $right, $leftType = self::TYPE_IDENTIFIER, $rightType = self::TYPE_VALUE)$/;"	v
leftType	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function lessThan($left, $right, $leftType = self::TYPE_IDENTIFIER, $rightType = self::TYPE_VALUE)$/;"	v
leftType	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function lessThanOrEqualTo($left, $right, $leftType = self::TYPE_IDENTIFIER, $rightType = self::TYPE_VALUE)$/;"	v
leftType	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function notEqualTo($left, $right, $leftType = self::TYPE_IDENTIFIER, $rightType = self::TYPE_VALUE)$/;"	v
len	.\Source\application\library\Zend\Validator\Iban.php	/^        $len  = strlen($format);$/;"	v
len	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $len = strlen($s);$/;"	v
length	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractLengthColumn.php	/^        $this->length = (int) $length;$/;"	v
length	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractLengthColumn.php	/^    protected $length;$/;"	v
length	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractLengthColumn.php	/^    public function __construct($name, $length = null, $nullable = false, $default = null, array $options = array())$/;"	v
length	.\Source\application\library\Zend\Stdlib\Glob.php	/^        $length  = strlen($pattern);$/;"	v
length	.\Source\application\library\Zend\Stdlib\Glob.php	/^        $length = strlen($pattern);$/;"	v
length	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^        $length = self::getMessageLength();$/;"	v
length	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $length  = strlen($barcode) - 1;$/;"	v
length	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $length  = strlen($value) - 2;$/;"	v
length	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $length = $this->getLength();$/;"	v
length	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^                $length = 15;$/;"	v
length	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^                $length = 20;$/;"	v
length	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^        $length   = count($value) % 20;$/;"	v
length	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^        $length  = count($value) % 15;$/;"	v
length	.\Source\application\library\Zend\Validator\Barcode\Identcode.php	/^    protected $length = 12;$/;"	v
length	.\Source\application\library\Zend\Validator\CreditCard.php	/^        $length = strlen($value);$/;"	v
length	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $length = false;$/;"	v
length	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $length  = true;$/;"	v
length	.\Source\application\library\Zend\Validator\Hostname.php	/^                                    $length = $this->idnLength[$this->tld];$/;"	v
length	.\Source\application\library\Zend\Validator\Hostname.php	/^                                $length = 63;$/;"	v
length	.\Source\application\library\Zend\Validator\Isbn.php	/^                $length  = 10;$/;"	v
length	.\Source\application\library\Zend\Validator\Isbn.php	/^                $length  = 13;$/;"	v
length	.\Source\application\library\Zend\Validator\Isbn.php	/^                $length  = 17;$/;"	v
length	.\Source\application\library\Zend\Validator\StringLength.php	/^        $length = $this->getStringWrapper()->strlen($value);$/;"	v
length	.\Source\application\library\vendor\composer\ClassLoader.php	/^            $length = strlen($prefix);$/;"	v
length	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function char($column, $length = 255)$/;"	v
length	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function string($column, $length = 255)$/;"	v
length	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function slice($offset, $length = null, $preserveKeys = false)$/;"	v
length	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function splice($offset, $length = 0, $replacement = array())$/;"	v
length	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function length($value)$/;"	f
length	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^        $length = $this->getSignatureLength();$/;"	v
length	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $length = 2147483647;$/;"	v
length	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $length = iconv_strlen($s, $encoding) + $length - $start;$/;"	v
length	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_substr($s, $start, $length = null, $encoding = null)$/;"	v
length	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_substr($s, $start, $length = 2147483647, $enc = null) { return p\\Mbstring::mb_substr($s, $start, $length, $enc); }$/;"	v
length	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    private function sanitizeString($string, $length = 80)$/;"	v
length	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^            $length = $this->readLong($stream, $isBigEndian);$/;"	v
lengthOfPadding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $lengthOfPadding = $padLength - $this->strlen($input);$/;"	v
lengthd	.\Source\application\library\Zend\Validator\Hostname.php	/^        $lengthd = count($decoded);$/;"	v
lengthe	.\Source\application\library\Zend\Validator\Hostname.php	/^        $lengthe = strlen($encoded);$/;"	v
lengths	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^        $this->lengths = $lengths;$/;"	v
lengths	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^    protected $lengths;$/;"	v
lengths	.\Source\application\library\Zend\Validator\Isbn.php	/^        $lengths  = array();$/;"	v
lessThan	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function lessThan($left, $right, $leftType = self::TYPE_IDENTIFIER, $rightType = self::TYPE_VALUE)$/;"	f
lessThanOrEqualTo	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function lessThanOrEqualTo($left, $right, $leftType = self::TYPE_IDENTIFIER, $rightType = self::TYPE_VALUE)$/;"	f
letter	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^            $letter = array_shift($letters);$/;"	v
libraryNames	.\Source\application\init_autoloader.php	/^    $libraryNames = str_replace(",", "|", $CONFIG['application']['library']);$/;"	v
lifetime	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^        $this->lifetime        = ini_get('session.gc_maxlifetime');$/;"	v
lifetime	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^    protected $lifetime;$/;"	v
lifetime	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^        $this->lifetime    = ini_get('session.gc_maxlifetime');$/;"	v
lifetime	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^    protected $lifetime;$/;"	v
lifetimeColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^        $lifetimeColumn = (string) $lifetimeColumn;$/;"	v
lifetimeColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^        $this->lifetimeColumn = $lifetimeColumn;$/;"	v
lifetimeColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    protected $lifetimeColumn = 'lifetime';$/;"	v
lifetimeField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $lifetimeField = (string) $lifetimeField;$/;"	v
lifetimeField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $this->lifetimeField = $lifetimeField;$/;"	v
lifetimeField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    protected $lifetimeField = 'lifetime';$/;"	v
like	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^        $this->like = $like;$/;"	v
like	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^    protected $like = '';$/;"	v
like	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^    public function __construct($identifier = null, $like = null)$/;"	v
like	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function like($identifier, $like)$/;"	f
limit	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $this->limit = null;$/;"	v
limit	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $this->limit = $limit;$/;"	v
limit	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $limit = null;$/;"	v
limit	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function limit($limit)$/;"	f
limit	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$limit = $this->limit;$/;"	v
limit	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $limit;$/;"	v
limit	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function limit($value)$/;"	f
limit	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function limit($value, $limit = 100, $end = '...')$/;"	f
limit	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function limit($value, $limit = 100, $end = '...')$/;"	v
limit	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function str_limit($value, $limit = 100, $end = '...')$/;"	v
limitParamName	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^            $limitParamName        = $driver->formatParameterName('limit');$/;"	v
limitParamName	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^            $limitParamName = $driver->formatParameterName('limit');$/;"	v
line	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^            $line = trim($line);$/;"	v
link_to	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function link_to($url, $title = null, $attributes = array(), $secure = null)$/;"	f
link_to_action	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function link_to_action($action, $title = null, $parameters = array(), $attributes = array())$/;"	f
link_to_asset	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function link_to_asset($url, $title = null, $attributes = array(), $secure = null)$/;"	f
link_to_route	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function link_to_route($name, $title = null, $parameters = array(), $attributes = array())$/;"	f
list	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^     * $list = array($/;"	v
list	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^     * $list = array('a', 'b', 'c', 'd');$/;"	v
listen	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function listen(Closure $callback)$/;"	f
listen	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function listen($events, $listener, $priority = 0)$/;"	f
listener	.\Source\application\library\Zend\Session\ValidatorChain.php	/^        $listener = parent::attach($event, $callback, $priority);$/;"	v
listener	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^			$listener = $this->createClassListener($listener);$/;"	v
listeners	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	protected $listeners = array();$/;"	v
lists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function lists($column, $key = null)$/;"	f
lists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function lists($column, $key = null)$/;"	f
lists	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function lists($value, $key = null)$/;"	f
literal	.\Source\application\library\Zend\Db\Sql\Literal.php	/^        $this->literal = $literal;$/;"	v
literal	.\Source\application\library\Zend\Db\Sql\Literal.php	/^    protected $literal = '';$/;"	v
literal	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function literal($literal)$/;"	f
literal	.\Source\application\library\Zend\Validator\Identical.php	/^        $this->literal = (bool) $literal;$/;"	v
literal	.\Source\application\library\Zend\Validator\Identical.php	/^    protected $literal = false;$/;"	v
load	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    protected function load($row = SQLSRV_SCROLL_NEXT)$/;"	f
load	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function load($relations)$/;"	f
load	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function load($relations)$/;"	f
load	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^	public static function load($class)$/;"	f
load	.\Source\application\library\vendor\symfony\translation\Loader\ArrayLoader.php	/^    public function load($resource, $locale, $domain = 'messages')$/;"	f
load	.\Source\application\library\vendor\symfony\translation\Loader\FileLoader.php	/^    public function load($resource, $locale, $domain = 'messages')$/;"	f
load	.\Source\application\library\vendor\symfony\translation\Loader\IcuDatFileLoader.php	/^    public function load($resource, $locale, $domain = 'messages')$/;"	f
load	.\Source\application\library\vendor\symfony\translation\Loader\IcuResFileLoader.php	/^    public function load($resource, $locale, $domain = 'messages')$/;"	f
load	.\Source\application\library\vendor\symfony\translation\Loader\LoaderInterface.php	/^    public function load($resource, $locale, $domain = 'messages');$/;"	f
load	.\Source\application\library\vendor\symfony\translation\Loader\QtFileLoader.php	/^    public function load($resource, $locale, $domain = 'messages')$/;"	f
load	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    public function load($resource, $locale, $domain = 'messages')$/;"	f
loadCatalogue	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    protected function loadCatalogue($locale)$/;"	f
loadClass	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function loadClass($class)$/;"	f
loadClassLoader	.\Source\application\library\vendor\composer\autoload_real.php	/^    public static function loadClassLoader($class)$/;"	f
loadColumnData	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    protected function loadColumnData($table, $schema)$/;"	f
loadColumnData	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^    protected function loadColumnData($table, $schema)$/;"	f
loadColumnData	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^    protected function loadColumnData($table, $schema)$/;"	f
loadColumnData	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^    protected function loadColumnData($table, $schema)$/;"	f
loadColumnData	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^    protected function loadColumnData($table, $schema)$/;"	f
loadColumnData	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function loadColumnData($table, $schema)$/;"	f
loadConstraintData	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    protected function loadConstraintData($table, $schema)$/;"	f
loadConstraintData	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^    protected function loadConstraintData($table, $schema)$/;"	f
loadConstraintData	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^    protected function loadConstraintData($table, $schema)$/;"	f
loadConstraintData	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^    protected function loadConstraintData($table, $schema)$/;"	f
loadConstraintData	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^    protected function loadConstraintData($table, $schema)$/;"	f
loadConstraintData	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function loadConstraintData($table, $schema)$/;"	f
loadConstraintDataKeys	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    protected function loadConstraintDataKeys($schema)$/;"	f
loadConstraintDataKeys	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^    protected function loadConstraintDataKeys($schema)$/;"	f
loadConstraintDataNames	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^    protected function loadConstraintDataNames($schema)$/;"	f
loadConstraintReferences	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    protected function loadConstraintReferences($table, $schema)$/;"	f
loadConstraintReferences	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^    protected function loadConstraintReferences($table, $schema)$/;"	f
loadData	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public $loadData = null;$/;"	v
loadData	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    protected function loadData()$/;"	f
loadDataFromMysqliStatement	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    protected function loadDataFromMysqliStatement()$/;"	f
loadEntities	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^            $loadEntities = libxml_disable_entity_loader(true);$/;"	v
loadFallbackCatalogues	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private function loadFallbackCatalogues($locale)$/;"	f
loadFromMysqliResult	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    protected function loadFromMysqliResult()$/;"	f
loadRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function loadRelation(array $models, $name, Closure $constraints)$/;"	f
loadResource	.\Source\application\library\vendor\symfony\translation\Loader\CsvFileLoader.php	/^    protected function loadResource($resource)$/;"	f
loadResource	.\Source\application\library\vendor\symfony\translation\Loader\FileLoader.php	/^    abstract protected function loadResource($resource);$/;"	f
loadResource	.\Source\application\library\vendor\symfony\translation\Loader\IniFileLoader.php	/^    protected function loadResource($resource)$/;"	f
loadResource	.\Source\application\library\vendor\symfony\translation\Loader\JsonFileLoader.php	/^    protected function loadResource($resource)$/;"	f
loadResource	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^    protected function loadResource($resource)$/;"	f
loadResource	.\Source\application\library\vendor\symfony\translation\Loader\PhpFileLoader.php	/^    protected function loadResource($resource)$/;"	f
loadResource	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^    protected function loadResource($resource)$/;"	f
loadResource	.\Source\application\library\vendor\symfony\translation\Loader\YamlFileLoader.php	/^    protected function loadResource($resource)$/;"	f
loadSchemaData	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    protected function loadSchemaData()$/;"	f
loadSchemaData	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^    protected function loadSchemaData()$/;"	f
loadSchemaData	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^    protected function loadSchemaData()$/;"	f
loadSchemaData	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^    protected function loadSchemaData()$/;"	f
loadSchemaData	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^    protected function loadSchemaData()$/;"	f
loadSchemaData	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function loadSchemaData()$/;"	f
loadTableNameData	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    protected function loadTableNameData($schema)$/;"	f
loadTableNameData	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^    protected function loadTableNameData($schema)$/;"	f
loadTableNameData	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^    protected function loadTableNameData($schema)$/;"	f
loadTableNameData	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^    protected function loadTableNameData($schema)$/;"	f
loadTableNameData	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^    protected function loadTableNameData($schema)$/;"	f
loadTableNameData	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function loadTableNameData($schema)$/;"	f
loadTriggerData	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    protected function loadTriggerData($schema)$/;"	f
loadTriggerData	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^    protected function loadTriggerData($schema)$/;"	f
loadTriggerData	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^    protected function loadTriggerData($schema)$/;"	f
loadTriggerData	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^    protected function loadTriggerData($schema)$/;"	f
loadTriggerData	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^    protected function loadTriggerData($schema)$/;"	f
loadTriggerData	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function loadTriggerData($schema)$/;"	f
loader	.\Source\application\library\vendor\composer\ClassLoader.php	/^ *     $loader = new \\Composer\\Autoload\\ClassLoader();$/;"	v
loader	.\Source\application\library\vendor\composer\ClassLoader.php	/^ * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.$/;"	c
loader	.\Source\application\library\vendor\composer\autoload_real.php	/^        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader();$/;"	v
loader	.\Source\application\library\vendor\composer\autoload_real.php	/^    private static $loader;$/;"	v
loader	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^	 * Add directories to the class loader.$/;"	c
loader	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^	 * Register the given class loader on the auto-loader stack.$/;"	c
loader	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^	 * Remove directories from the class loader.$/;"	c
loader	.\Source\application\library\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php	/^        $loader = new CsvFileLoader();$/;"	v
loader	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php	/^        $loader = new IcuDatFileLoader();$/;"	v
loader	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuResFileLoaderTest.php	/^        $loader = new IcuResFileLoader();$/;"	v
loader	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php	/^        $loader = new IniFileLoader();$/;"	v
loader	.\Source\application\library\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php	/^        $loader = new JsonFileLoader();$/;"	v
loader	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^        $loader = new MoFileLoader();$/;"	v
loader	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php	/^        $loader = new PhpFileLoader();$/;"	v
loader	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^        $loader = new PoFileLoader();$/;"	v
loader	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^        $loader = new QtFileLoader();$/;"	v
loader	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $loader = new XliffFileLoader();$/;"	v
loader	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^        $loader = new YamlFileLoader();$/;"	v
loader	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $loader = $this->getMock('Symfony\\Component\\Translation\\Loader\\LoaderInterface');$/;"	v
loaderClass	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $loaderClass = 'Symfony\\\\Component\\\\Translation\\\\Loader\\\\'.$loader;$/;"	v
loaders	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^		\/\/ make sure that the migrations are registered by the class loaders.$/;"	c
loaders	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private $loaders = array();$/;"	v
local	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $local = $this->validateLocalPart();$/;"	v
localKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$localKey = $localKey ?: $this->getKeyName();$/;"	v
localKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^		$this->localKey = $localKey;$/;"	v
localKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	protected $localKey;$/;"	v
localPart	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $this->localPart = $matches[1];$/;"	v
localPart	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected $localPart;$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^                    $locale = $fallbackCatalogue->getLocale();$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^        $locale = $catalogue->getLocale();$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^        $this->locale = $locale;$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^    private $locale;$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^        $this->locale = $locale;$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    private $locale;$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\PluralizationRules.php	/^            $locale = 'xbr';$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\PluralizationRules.php	/^            $locale = substr($locale, 0, -strlen(strrchr($locale, '_')));$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $locale = 'any_locale';$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $locale = 'whatever';$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\Translator.php	/^                $locale = $catalogue->getLocale();$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\Translator.php	/^            $locale = $this->getLocale();$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $locale = $catalogue->getLocale();$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $this->locale = $locale;$/;"	v
locale	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private $locale;$/;"	v
locales	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $locales = array();$/;"	v
localizeVariables	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^    protected function localizeVariables()$/;"	f
localizeVariables	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^    protected function localizeVariables()$/;"	f
localizeVariables	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\SelectDecorator.php	/^    protected function localizeVariables()$/;"	f
localizeVariables	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^    protected function localizeVariables()$/;"	f
localizeVariables	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^    protected function localizeVariables()$/;"	f
locations	.\Source\application\library\Zend\Validator\Timezone.php	/^                $locations = DateTimeZone::listIdentifiers();$/;"	v
locator	.\Source\application\library\Zend\Validator\ValidatorPluginManager.php	/^            $locator = $this->getServiceLocator();$/;"	v
lock	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function lock($key = null)$/;"	f
lock	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function lock($key = null)$/;"	f
lock	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^    public function lock($key = null);$/;"	f
lock	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->lock = $value;$/;"	v
lock	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $lock;$/;"	v
lock	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function lock($value = true)$/;"	f
lockForUpdate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function lockForUpdate()$/;"	f
locks	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^            $locks = array_flip($keys);$/;"	v
locks	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^        $locks    = $this->getMetadata('_LOCKS');$/;"	v
locks	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^        $locks = $this->getMetadata('_LOCKS');$/;"	v
locks	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^            $locks = array_flip($keys);$/;"	v
locks	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^        $locks    = $this->getMetadata('_LOCKS');$/;"	v
locks	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^        $locks = $this->getMetadata('_LOCKS');$/;"	v
log	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	public function log($file, $batch)$/;"	f
log	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationRepositoryInterface.php	/^	public function log($file, $batch);$/;"	f
log	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^    private function log($id, $domain, $locale)$/;"	f
logFileName	.\Source\application\library\Alpaca\Log\Log.php	/^            $logFileName = date("Y-m-d",time())."_debug.log";$/;"	v
logFileName	.\Source\application\library\Alpaca\Log\Log.php	/^            $logFileName = date("Y-m-d",time())."_error.log";$/;"	v
logFileName	.\Source\application\library\Alpaca\Log\Log.php	/^        $logFileName = date("Y-m-d",time()).".log";          $/;"	v
logQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function logQuery($query, $bindings, $time = null)$/;"	f
logStr	.\Source\application\library\Alpaca\Log\Log.php	/^            $logStr = "{$date} info: {$string} \\n";$/;"	v
logStr	.\Source\application\library\Alpaca\Log\Log.php	/^        $logStr = "{$date} info: {$string} \\n";    $/;"	v
loggableTranslator	.\Source\application\library\vendor\symfony\translation\Tests\LoggingTranslatorTest.php	/^        $loggableTranslator = new LoggingTranslator($translator, $logger);$/;"	v
logger	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^        $this->logger = $logger;$/;"	v
logger	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^    private $logger;$/;"	v
logger	.\Source\application\library\vendor\symfony\translation\Tests\LoggingTranslatorTest.php	/^        $logger = $this->getMock('Psr\\Log\\LoggerInterface');$/;"	v
logging	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function logging()$/;"	f
loggingQueries	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->loggingQueries = false;$/;"	v
loggingQueries	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->loggingQueries = true;$/;"	v
loggingQueries	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $loggingQueries = true;$/;"	v
logicalPathPsr0	.\Source\application\library\vendor\composer\ClassLoader.php	/^            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;$/;"	v
logicalPathPsr0	.\Source\application\library\vendor\composer\ClassLoader.php	/^            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)$/;"	v
logicalPathPsr4	.\Source\application\library\vendor\composer\ClassLoader.php	/^        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;$/;"	v
longText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function longText($column)$/;"	f
lookup	.\Source\application\library\vendor\composer\ClassLoader.php	/^     * Should class lookup fail if not found in the current class map?$/;"	c
lower	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function lower($value)$/;"	f
lower	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                    $lower = self::getData('lowerCase');$/;"	v
lower	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                static $lower = null;$/;"	v
lt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function lt(Carbon $dt)$/;"	f
lte	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function lte(Carbon $dt)$/;"	f
m	.\Source\application\Bootstrap.php	/^                $m = new $class();$/;"	v
m	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^        $m = $this->metadata;$/;"	v
m	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^        $m = $r->getMethod($method);$/;"	v
m	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->m = $val;$/;"	v
m	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $m = unpack('C*', htmlentities($m[0], ENT_COMPAT, 'UTF-8'));$/;"	v
macro	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function macro($name, Closure $callback)$/;"	f
macro	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\MacroableTrait.php	/^	public static function macro($name, callable $macro)$/;"	f
macros	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected $macros = array();$/;"	v
macros	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\MacroableTrait.php	/^	protected static $macros = array();$/;"	v
magic	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $magic = getenv('magic');$/;"	v
magic	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^        $magic = hexdec(substr(dechex(current($magic)), -8));$/;"	v
magic	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^        $magic = unpack('V1', fread($stream, 4));$/;"	v
magicFiles	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    protected $magicFiles = array($/;"	v
magicSpecifications	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    protected $magicSpecifications = array();$/;"	v
magicSpecifications	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    protected $magicSpecifications = array();$/;"	v
main	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $main = new MessageCatalogue('en_US');$/;"	v
make	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function make($abstract, $parameters = array())$/;"	f
make	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	public function make(array $config, $name = null)$/;"	f
make	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public static function make($items)$/;"	f
make	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^	public static function make($content = '', $status = 200, array $headers = array())$/;"	f
makeConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	protected function makeConnection($name)$/;"	f
makeListener	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function makeListener($listener)$/;"	f
makes	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^ * This class makes easier the token creation process$/;"	c
manager	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $manager = new static::$managerDefaultClass();$/;"	v
manager	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $manager = static::getDefaultManager();$/;"	v
manager	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $this->manager = $manager;$/;"	v
manager	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    protected $manager;$/;"	v
manager	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    protected function setManager(Manager $manager = null)$/;"	v
manager	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function __construct($name = 'Default', Manager $manager = null)$/;"	v
manager	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public static function setDefaultManager(Manager $manager = null)$/;"	v
manager	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^        $manager = $this->getSessionManager($services);$/;"	v
manager	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^        $manager = new SessionManager($config, $storage, $saveHandler, $validators);$/;"	v
manager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^		$this->manager = new DatabaseManager($this->container, $factory);$/;"	v
manager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	protected $manager;$/;"	v
managerConfig	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^                $managerConfig = array_merge($managerConfig, $configService['session_manager']);$/;"	v
managerConfig	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^        $managerConfig = $this->defaultManagerConfig;$/;"	v
managerDefaultClass	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    protected static $managerDefaultClass = 'Zend\\\\Session\\\\SessionManager';$/;"	v
mandatoryParameters	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\OptionalParametersFilter.php	/^        $mandatoryParameters = array_filter($/;"	v
manyMethods	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static $manyMethods = array('belongsToMany', 'morphToMany', 'morphedByMany');$/;"	v
map	.\Source\application\library\vendor\composer\ClassLoader.php	/^        \/\/ class map lookup$/;"	c
map	.\Source\application\library\vendor\composer\ClassLoader.php	/^     * that have not been registered with the class map.$/;"	c
map	.\Source\application\library\vendor\composer\autoload_real.php	/^            $map = require __DIR__ . '\/autoload_namespaces.php';$/;"	v
map	.\Source\application\library\vendor\composer\autoload_real.php	/^            $map = require __DIR__ . '\/autoload_psr4.php';$/;"	v
map	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function map(Closure $callback)$/;"	f
map	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $map = $lower;$/;"	v
map	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $map = $upper;$/;"	v
mapping	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\MapNamingStrategy.php	/^        $this->mapping = $mapping;$/;"	v
mapping	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\MapNamingStrategy.php	/^    protected $mapping = array();$/;"	v
markImmutable	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function markImmutable()$/;"	f
markImmutable	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function markImmutable()$/;"	f
markImmutable	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^    public function markImmutable()$/;"	f
markImmutable	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^    public function markImmutable();$/;"	f
masterSql	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^        $this->masterSql = $this->tableGateway->sql;$/;"	v
masterSql	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^    protected $masterSql = null;$/;"	v
match	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function match(array $models, Collection $results, $relation)$/;"	f
match	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function match(array $models, Collection $results, $relation)$/;"	f
match	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasMany.php	/^	public function match(array $models, Collection $results, $relation)$/;"	f
match	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	public function match(array $models, Collection $results, $relation)$/;"	f
match	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOne.php	/^	public function match(array $models, Collection $results, $relation)$/;"	f
match	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphMany.php	/^	public function match(array $models, Collection $results, $relation)$/;"	f
match	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOne.php	/^	public function match(array $models, Collection $results, $relation)$/;"	f
match	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	public function match(array $models, Collection $results, $relation)$/;"	f
match	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	abstract public function match(array $models, Collection $results, $relation);$/;"	f
match	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^        $match = null;$/;"	v
matchCase	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^	protected static function matchCase($value, $comparison)$/;"	f
matchMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function matchMany(array $models, Collection $results, $relation)$/;"	f
matchOne	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function matchOne(array $models, Collection $results, $relation)$/;"	f
matchOneOrMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	protected function matchOneOrMany(array $models, Collection $results, $relation, $type)$/;"	f
matchOption	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^        $this->matchOption = $matchOption;$/;"	v
matchOption	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    protected $matchOption;$/;"	v
matchToMorphParents	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	protected function matchToMorphParents($type, Collection $results)$/;"	f
matches	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^            $matches = array();$/;"	v
matches	.\Source\application\library\Zend\Validator\Hostname.php	/^                $matches = array();$/;"	v
matrix	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^        $matrix = $this->generateTestData($nplural, $langCodes);$/;"	v
matrix	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^        $matrix = array();$/;"	v
max	.\Source\application\library\Zend\Validator\File\Count.php	/^            $max = $max['max'];$/;"	v
max	.\Source\application\library\Zend\Validator\File\Count.php	/^        $max = (int) $max;$/;"	v
max	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^        $max  = $this->getMax(true);$/;"	v
max	.\Source\application\library\Zend\Validator\File\Size.php	/^            $max = $this->toByteString($max);$/;"	v
max	.\Source\application\library\Zend\Validator\File\Size.php	/^        $max = $this->getMax(true);$/;"	v
max	.\Source\application\library\Zend\Validator\File\Size.php	/^        $max = $this->options['max'];$/;"	v
max	.\Source\application\library\Zend\Validator\File\Size.php	/^        $max = (int) $this->fromByteString($max);$/;"	v
max	.\Source\application\library\Zend\Validator\File\WordCount.php	/^            $max = $max['max'];$/;"	v
max	.\Source\application\library\Zend\Validator\File\WordCount.php	/^        $max = (int) $max;$/;"	v
max	.\Source\application\library\Zend\Validator\LessThan.php	/^        $this->max = $max;$/;"	v
max	.\Source\application\library\Zend\Validator\LessThan.php	/^    protected $max;$/;"	v
max	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function max($key)$/;"	f
max	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function max($column)$/;"	f
max	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function max(Carbon $dt = null)$/;"	f
maxInteger	.\Source\application\library\Zend\Validator\DateStep.php	/^        $maxInteger             = min(pow(2, 31), PHP_INT_MAX);$/;"	v
maxLength	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                $maxLength = $this->parameterContainer->offsetGetMaxLength($name);$/;"	v
maxLength	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^            $maxLength = -1;$/;"	v
maxLength	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    protected $maxLength = array();$/;"	v
maxValue	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^        $this->maxValue = $maxValue;$/;"	v
maxValue	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    protected $maxValue      = null;$/;"	v
maxValue	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function maxValue()$/;"	f
maximumInterval	.\Source\application\library\Zend\Validator\DateStep.php	/^        $maximumInterval        = max($intervalParts);$/;"	v
mb_check_encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_check_encoding($var = null, $encoding = null)$/;"	f
mb_check_encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_check_encoding($var = null, $encoding = null) { return p\\Mbstring::mb_check_encoding($var, $encoding); }$/;"	f
mb_convert_case	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_convert_case($s, $mode, $encoding = null)$/;"	f
mb_convert_case	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_convert_case($s, $mode, $enc = null) { return p\\Mbstring::mb_convert_case($s, $mode, $enc); }$/;"	f
mb_convert_encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_convert_encoding($s, $toEncoding, $fromEncoding = null)$/;"	f
mb_convert_encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_convert_encoding($s, $to, $from = null) { return p\\Mbstring::mb_convert_encoding($s, $to, $from); }$/;"	f
mb_convert_variables	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_convert_variables($toEncoding, $fromEncoding, &$a = null, &$b = null, &$c = null, &$d = null, &$e = null, &$f = null)$/;"	f
mb_convert_variables	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_convert_variables($toEncoding, $fromEncoding, &$a = null, &$b = null, &$c = null, &$d = null, &$e = null, &$f = null) { return p\\Mbstring::mb_convert_variables($toEncoding, $fromEncoding, $v0, $a, $b, $c, $d, $e, $f); }$/;"	f
mb_decode_mimeheader	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_decode_mimeheader($s)$/;"	f
mb_decode_mimeheader	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_decode_mimeheader($s) { return p\\Mbstring::mb_decode_mimeheader($s); }$/;"	f
mb_detect_encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_detect_encoding($str, $encodingList = null, $strict = false)$/;"	f
mb_detect_encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_detect_encoding($str, $encodingList = null, $strict = false) { return p\\Mbstring::mb_detect_encoding($str, $encodingList, $strict); }$/;"	f
mb_detect_order	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_detect_order($encodingList = null)$/;"	f
mb_detect_order	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_detect_order($encodingList = null) { return p\\Mbstring::mb_detect_order($encodingList); }$/;"	f
mb_encode_mimeheader	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_encode_mimeheader($s, $charset = null, $transferEncoding = null, $linefeed = null, $indent = null)$/;"	f
mb_encode_mimeheader	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_encode_mimeheader($s, $charset = null, $transferEnc = null, $lf = null, $indent = null) { return p\\Mbstring::mb_encode_mimeheader($s, $charset, $transferEnc, $lf, $indent); }$/;"	f
mb_encoding_aliases	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_encoding_aliases($encoding)$/;"	f
mb_encoding_aliases	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_encoding_aliases($encoding) { return p\\Mbstring::mb_encoding_aliases($encoding); }$/;"	f
mb_get_info	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_get_info($type = 'all')$/;"	f
mb_get_info	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_get_info($type = 'all') { return p\\Mbstring::mb_get_info($type); }$/;"	f
mb_http_input	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_http_input($type = '')$/;"	f
mb_http_input	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_http_input($type = '') { return p\\Mbstring::mb_http_input($type); }$/;"	f
mb_http_output	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_http_output($encoding = null)$/;"	f
mb_http_output	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_http_output($enc = null) { return p\\Mbstring::mb_http_output($enc); }$/;"	f
mb_internal_encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_internal_encoding($encoding = null)$/;"	f
mb_internal_encoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_internal_encoding($enc = null) { return p\\Mbstring::mb_internal_encoding($enc); }$/;"	f
mb_language	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_language($lang = null)$/;"	f
mb_language	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_language($lang = null) { return p\\Mbstring::mb_language($lang); }$/;"	f
mb_list_encodings	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_list_encodings()$/;"	f
mb_list_encodings	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_list_encodings() { return p\\Mbstring::mb_list_encodings(); }$/;"	f
mb_output_handler	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_output_handler($contents, $status)$/;"	f
mb_output_handler	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_output_handler($contents, $status) { return p\\Mbstring::mb_output_handler($contents, $status); }$/;"	f
mb_parse_str	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_parse_str($s, &$result = array()) { parse_str($s, $result); }$/;"	f
mb_stripos	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_stripos($haystack, $needle, $offset = 0, $encoding = null)$/;"	f
mb_stripos	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_stripos($s, $needle, $offset = 0, $enc = null) { return p\\Mbstring::mb_stripos($s, $needle, $offset, $enc); }$/;"	f
mb_stristr	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_stristr($haystack, $needle, $part = false, $encoding = null)$/;"	f
mb_stristr	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_stristr($s, $needle, $part = false, $enc = null) { return p\\Mbstring::mb_stristr($s, $needle, $part, $enc); }$/;"	f
mb_strlen	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strlen($s, $encoding = null)$/;"	f
mb_strlen	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strlen($s, $enc = null) { return p\\Mbstring::mb_strlen($s, $enc); }$/;"	f
mb_strpos	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strpos($haystack, $needle, $offset = 0, $encoding = null)$/;"	f
mb_strpos	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strpos($s, $needle, $offset = 0, $enc = null) { return p\\Mbstring::mb_strpos($s, $needle, $offset, $enc); }$/;"	f
mb_strrchr	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strrchr($haystack, $needle, $part = false, $encoding = null)$/;"	f
mb_strrchr	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strrchr($s, $needle, $part = false, $enc = null) { return p\\Mbstring::mb_strrchr($s, $needle, $part, $enc); }$/;"	f
mb_strrichr	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strrichr($haystack, $needle, $part = false, $encoding = null)$/;"	f
mb_strrichr	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strrichr($s, $needle, $part = false, $enc = null) { return p\\Mbstring::mb_strrichr($s, $needle, $part, $enc); }$/;"	f
mb_strripos	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strripos($haystack, $needle, $offset = 0, $encoding = null)$/;"	f
mb_strripos	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strripos($s, $needle, $offset = 0, $enc = null) { return p\\Mbstring::mb_strripos($s, $needle, $offset, $enc); }$/;"	f
mb_strrpos	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strrpos($haystack, $needle, $offset = 0, $encoding = null)$/;"	f
mb_strrpos	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strrpos($s, $needle, $offset = 0, $enc = null) { return p\\Mbstring::mb_strrpos($s, $needle, $offset, $enc); }$/;"	f
mb_strstr	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strstr($haystack, $needle, $part = false, $encoding = null)$/;"	f
mb_strstr	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strstr($s, $needle, $part = false, $enc = null) { return p\\Mbstring::mb_strstr($s, $needle, $part, $enc); }$/;"	f
mb_strtolower	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strtolower($s, $encoding = null)$/;"	f
mb_strtolower	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strtolower($s, $enc = null) { return p\\Mbstring::mb_strtolower($s, $enc); }$/;"	f
mb_strtoupper	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strtoupper($s, $encoding = null)$/;"	f
mb_strtoupper	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strtoupper($s, $enc = null) { return p\\Mbstring::mb_strtoupper($s, $enc); }$/;"	f
mb_strwidth	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strwidth($s, $encoding = null)$/;"	f
mb_strwidth	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strwidth($s, $enc = null) { return p\\Mbstring::mb_strwidth($s, $enc); }$/;"	f
mb_substitute_character	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_substitute_character($c = null)$/;"	f
mb_substitute_character	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_substitute_character($char = null) { return p\\Mbstring::mb_substitute_character($char); }$/;"	f
mb_substr	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_substr($s, $start, $length = null, $encoding = null)$/;"	f
mb_substr	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_substr($s, $start, $length = 2147483647, $enc = null) { return p\\Mbstring::mb_substr($s, $start, $length, $enc); }$/;"	f
mb_substr_count	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_substr_count($haystack, $needle, $encoding = null)$/;"	f
mb_substr_count	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_substr_count($haystack, $needle, $enc = null) { return p\\Mbstring::mb_substr_count($haystack, $needle, $enc); }$/;"	f
mediumInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function mediumInteger($column, $autoIncrement = false, $unsigned = false)$/;"	f
mediumText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function mediumText($column)$/;"	f
merge	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function merge($parameters)$/;"	f
merge	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function merge(array $a, array $b, $preserveNumericKeys = false)$/;"	f
merge	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function merge(ValidatorChain $validatorChain)$/;"	f
merge	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function merge($items)$/;"	f
merge	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function merge($items)$/;"	f
merge	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function merge($messages)$/;"	f
mergeBindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function mergeBindings(Builder $query)$/;"	f
mergeExtractedData	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^    public function mergeExtractedData(array $additionalData)$/;"	f
mergeReadWriteConfig	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	protected function mergeReadWriteConfig(array $config, array $merge)$/;"	f
mergeWheres	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function mergeWheres($wheres, $bindings)$/;"	f
mergeWheresToHas	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function mergeWheresToHas(Builder $hasQuery, Relation $relation)$/;"	f
mergedCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php	/^        $mergedCatalogue = new MessageCatalogue('en', array('messages' => array('a' => 'old_a', 'b' => 'old_b', 'c' => 'new_c')));$/;"	v
message	.\Source\application\library\Zend\Stdlib\Guard\ArrayOrTraversableGuardTrait.php	/^            $message = sprintf($/;"	v
message	.\Source\application\library\Zend\Stdlib\Guard\EmptyGuardTrait.php	/^            $message = sprintf('%s cannot be empty', $dataName);$/;"	v
message	.\Source\application\library\Zend\Stdlib\Guard\GuardUtils.php	/^            $message = sprintf($/;"	v
message	.\Source\application\library\Zend\Stdlib\Guard\GuardUtils.php	/^            $message = sprintf('%s cannot be empty', $dataName);$/;"	v
message	.\Source\application\library\Zend\Stdlib\Guard\GuardUtils.php	/^            $message = sprintf('%s cannot be null', $dataName);$/;"	v
message	.\Source\application\library\Zend\Stdlib\Guard\NullGuardTrait.php	/^            $message = sprintf('%s cannot be null', $dataName);$/;"	v
message	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $message = str_replace("%$ident%", (string) $value, $message);$/;"	v
message	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $message = substr($message, 0, ($length - 3)) . '...';$/;"	v
message	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^        $message = $this->abstractOptions['messageTemplates'][$messageKey];$/;"	v
message	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^        $message = $this->translateMessage($messageKey, $message);$/;"	v
message	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^        $message = str_replace('%value%', (string) $value, $message);$/;"	v
message	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			$message = "Target [$concrete] is not instantiable.";$/;"	v
message	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$message = "Unresolvable dependency resolving [$parameter] in class {$parameter->getDeclaringClass()->getName()}";$/;"	v
message	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\ModelNotFoundException.php	/^		$this->message = "No query results for model [{$model}].";$/;"	v
message	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^		$this->message = $this->formatMessage($sql, $bindings, $previous);$/;"	v
message	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^			$message = str_replace($replace, array($message, $messageKey), $format);$/;"	v
message	.\Source\application\library\vendor\symfony\translation\Dumper\QtFileDumper.php	/^            $message = $context->appendChild($dom->createElement('message'));$/;"	v
messageId	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^            $messageId = $message['locale'].$message['domain'].$message['id'];$/;"	v
messageKey	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $messageKey = current($keys);$/;"	v
messageKey	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function setMessage($messageString, $messageKey = null)$/;"	v
messageKey	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function setMessage($messageString, $messageKey = null)$/;"	v
messageLength	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    protected static $messageLength = -1;$/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Barcode.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Between.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Bitwise.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Callback.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\CreditCard.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Date.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\DateStep.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Digits.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Explode.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\Count.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\Crc32.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\ExcludeExtension.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\Exists.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\Extension.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\Hash.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\IsCompressed.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\IsImage.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\Md5.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\NotExists.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\Sha1.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\Size.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\Upload.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\UploadFile.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\File\WordCount.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\GreaterThan.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Hex.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Hostname.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Iban.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Identical.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\InArray.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Ip.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Isbn.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\LessThan.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\NotEmpty.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Regex.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Sitemap\Changefreq.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Sitemap\Lastmod.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Sitemap\Loc.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Sitemap\Priority.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Step.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\StringLength.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Timezone.php	/^    protected $messageTemplates = array($/;"	v
messageTemplates	.\Source\application\library\Zend\Validator\Uri.php	/^    protected $messageTemplates = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\Barcode.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\Between.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\Bitwise.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\Date.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\Explode.php	/^    protected $messageVariables = array();$/;"	v
messageVariables	.\Source\application\library\Zend\Validator\File\Count.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\File\Exists.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\File\Extension.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\File\Size.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\File\WordCount.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\GreaterThan.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\Hostname.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\Identical.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\LessThan.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\Regex.php	/^    protected $messageVariables = array($/;"	v
messageVariables	.\Source\application\library\Zend\Validator\StringLength.php	/^    protected $messageVariables = array($/;"	v
messages	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^            $messages       = $validator->getMessages();$/;"	v
messages	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^            $this->messages = array_replace_recursive($this->messages, $messages);$/;"	v
messages	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^        $this->messages = array();$/;"	v
messages	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    protected $messages = array();$/;"	v
messages	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^			$messages = $messages->getMessageBag()->getMessages();$/;"	v
messages	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^		$messages = (array) $messages;$/;"	v
messages	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^		$messages = (array) $this->messages;$/;"	v
messages	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^		$messages = is_null($key) ? $this->all($format) : $this->get($key, $format);$/;"	v
messages	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^		$this->messages = array_merge_recursive($this->messages, $messages);$/;"	v
messages	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	protected $messages = array();$/;"	v
messages	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function __construct(array $messages = array())$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^        $this->messages = array();$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^    protected $messages;$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    private $messages = array();$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^        $messages = $this->sanitizeCollectedMessages($this->translator->getCollectedMessages());$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Loader\CsvFileLoader.php	/^        $messages = array();$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Loader\FileLoader.php	/^            $messages = array();$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Loader\FileLoader.php	/^        $messages = $this->loadResource($resource);$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Loader\IcuDatFileLoader.php	/^        $messages = $this->flatten($rb);$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Loader\IcuResFileLoader.php	/^        $messages = $this->flatten($rb);$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Loader\JsonFileLoader.php	/^            $messages = json_decode($data, true);$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Loader\JsonFileLoader.php	/^        $messages = array();$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^        $messages = array();$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^        $messages = array();$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Loader\YamlFileLoader.php	/^            $messages = $this->yamlParser->parse(file_get_contents($resource));$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^        $this->messages = $messages;$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    private $messages = array();$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function __construct($locale, array $messages = array())$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^        $messages = $catalogue->all('domain1');$/;"	v
messages	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $messages = array($/;"	v
messsagesData	.\Source\application\library\vendor\symfony\translation\Tests\Util\ArrayConverterTest.php	/^    public function messsagesData()$/;"	f
metadata	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^            $this->metadata = $metadata;$/;"	v
metadata	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^            $this->metadata = new Metadata($this->tableGateway->adapter);$/;"	v
metadata	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^    protected $metadata = null;$/;"	v
metadata	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^    public function __construct(MetadataInterface $metadata = null)$/;"	v
metadata	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^            $metadata = $this->tableGateway->featureSet->getFeatureByClassName('Zend\\Db\\TableGateway\\Feature\\MetadataFeature');$/;"	v
metadata	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $metadata = $storage->getMetadata($name);$/;"	v
metadata	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^        $this->metadata  = $metadata;$/;"	v
metadata	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    protected $metadata;$/;"	v
metadata	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    public function __construct($callback, array $metadata = array())$/;"	v
metadata	.\Source\application\library\Zend\Stdlib\Message.php	/^    protected $metadata = array();$/;"	v
metadata	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $metadata = $messages->getMetadata($source, $domain);$/;"	v
metadata	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^    private function hasMetadataArrayInfo($key, $metadata = null)$/;"	v
metadata	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $metadata = array();$/;"	v
metadata	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^            $metadata = $catalogue->getMetadata('', '');$/;"	v
metadata	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^            $this->metadata = array();$/;"	v
metadata	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    private $metadata = array();$/;"	v
metadata	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $metadata = $catalogue->getMetadata('foo', 'domain1');$/;"	v
method	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\MethodMatchFilter.php	/^        $this->method = $method;$/;"	v
method	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\MethodMatchFilter.php	/^    protected $method = null;$/;"	v
method	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			$method = ($abstract == $concrete) ? 'build' : 'make';$/;"	v
method	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$method = 'set'.studly_case($key).'Attribute';$/;"	v
method	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			if (method_exists(get_called_class(), $method = 'boot'.class_basename($trait)))$/;"	v
method	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$method = $halt ? 'until' : 'fire';$/;"	v
method	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^				$method = 'compile'.ucfirst($component);$/;"	v
method	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^			$method = "where{$where['type']}";$/;"	v
method	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^			$method = 'compile'.ucfirst($command->name);$/;"	v
method	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^			if (method_exists($this, $method = "modify{$modifier}"))$/;"	v
method	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^			$method = count($segments) == 2 ? $segments[1] : 'handle';$/;"	v
method	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Manager.php	/^		$method = 'create'.ucfirst($driver).'Driver';$/;"	v
methodFqn	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^                $methodFqn = $objectClass . '::' . $method;$/;"	v
methodName	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^        foreach ($this->extractionMethodsCache[$objectClass] as $methodName => $attributeName) {$/;"	v
methods	.\Source\application\library\Alpaca\MVC\Application.php	/^        $methods = get_class_methods($bootstrap);$/;"	v
methods	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^            $methods                                    = get_class_methods($object);$/;"	v
methods	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^     * Extract values from an object with class methods$/;"	c
migration	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$migration = $this->resolve($file);$/;"	v
migrations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$migrations = $this->repository->getLast();$/;"	v
migrations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$migrations = array_diff($files, $ran);$/;"	v
migrator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^		$this->migrator = $migrator;$/;"	v
migrator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^	protected $migrator;$/;"	v
migrator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\ResetCommand.php	/^		$this->migrator = $migrator;$/;"	v
migrator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\ResetCommand.php	/^	protected $migrator;$/;"	v
migrator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RollbackCommand.php	/^		$this->migrator = $migrator;$/;"	v
migrator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RollbackCommand.php	/^	protected $migrator;$/;"	v
mimefile	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^        $mimefile = $this->getMagicFile();$/;"	v
mimefile	.\Source\application\library\Zend\Validator\File\MimeType.php	/^        $mimefile = $this->getMagicFile();$/;"	v
mimetype	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^        $mimetype = $this->getMimeType(true);$/;"	v
mimetype	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $mimetype = explode(',', $mimetype);$/;"	v
mimetype	.\Source\application\library\Zend\Validator\File\MimeType.php	/^        $mimetype = $this->getMimeType(true);$/;"	v
mimetype	.\Source\application\library\Zend\Validator\File\MimeType.php	/^        $mimetype = (string) $this->options['mimeType'];$/;"	v
mimetypes	.\Source\application\library\Zend\Validator\File\MimeType.php	/^        $mimetypes = $this->getMimeType(true);$/;"	v
mimetypes	.\Source\application\library\Zend\Validator\File\MimeType.php	/^        $mimetypes = array_unique($mimetypes);$/;"	v
min	.\Source\application\library\Zend\Validator\File\Count.php	/^            $min = $min['min'];$/;"	v
min	.\Source\application\library\Zend\Validator\File\Count.php	/^        $min = (int) $min;$/;"	v
min	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^        $min  = $this->getMin(true);$/;"	v
min	.\Source\application\library\Zend\Validator\File\Size.php	/^            $min = $this->toByteString($min);$/;"	v
min	.\Source\application\library\Zend\Validator\File\Size.php	/^        $min = $this->getMin(true);$/;"	v
min	.\Source\application\library\Zend\Validator\File\Size.php	/^        $min = $this->options['min'];$/;"	v
min	.\Source\application\library\Zend\Validator\File\Size.php	/^        $min = (int) $this->fromByteString($min);$/;"	v
min	.\Source\application\library\Zend\Validator\File\WordCount.php	/^            $min = $min['min'];$/;"	v
min	.\Source\application\library\Zend\Validator\File\WordCount.php	/^        $min = (int) $min;$/;"	v
min	.\Source\application\library\Zend\Validator\GreaterThan.php	/^        $this->min = $min;$/;"	v
min	.\Source\application\library\Zend\Validator\GreaterThan.php	/^    protected $min;$/;"	v
min	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function min($key)$/;"	f
min	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function min($column)$/;"	f
min	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function min(Carbon $dt = null)$/;"	f
minSteps	.\Source\application\library\Zend\Validator\DateStep.php	/^            $minSteps               = floor($minSteps \/ $requiredStepIterations);$/;"	v
minSteps	.\Source\application\library\Zend\Validator\DateStep.php	/^        $minSteps = $this->computeMinSteps($intervalParts, $diffParts);$/;"	v
minValue	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^        $this->minValue = $minValue;$/;"	v
minValue	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    protected $minValue      = null;$/;"	v
minValue	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    public function __construct($identifier = null, $minValue = null, $maxValue = null)$/;"	v
minValue	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function minValue()$/;"	f
minimumInterval	.\Source\application\library\Zend\Validator\DateStep.php	/^        $minimumInterval                     = $this->computeMinimumInterval($intervalParts, $minSteps);$/;"	v
minute	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $minute = $minute === null ? 0 : $minute;$/;"	v
minute	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $minute = $minute === null ? date('i') : $minute;$/;"	v
minute	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $minute = isset($time[1]) ? $time[1] : 0;$/;"	v
minute	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $this->minute = $value;$/;"	v
minute	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function minute($value)$/;"	f
minute	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function createFromTime($hour = null, $minute = null, $second = null, $tz = null)$/;"	v
minutes	.\Source\application\library\Zend\Validator\DateStep.php	/^                                $minutes = ($diffParts['hours'] * 60) + $diffParts['minutes'];$/;"	v
minutes	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->minutes = $arg;$/;"	v
minutes	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^            $this->minutes = $this->minutes + $interval->i * $sign;$/;"	v
missingLeadingSlash	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function missingLeadingSlash($abstract)$/;"	f
mock	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^			$mock = static::$resolvedInstance[$name];$/;"	v
mock	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^			$mock = static::createFreshMockInstance($name);$/;"	v
mock	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^		static::$resolvedInstance[$name] = $mock = static::createMockByName($name);$/;"	v
mod	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^        $mod = $sum % 103;$/;"	v
mod	.\Source\application\library\Zend\Validator\Barcode\Code39.php	/^        $mod = $count % 43;$/;"	v
mode	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $mode = $parametersOrQueryMode;$/;"	v
mode	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $mode = self::QUERY_MODE_PREPARE;$/;"	v
model	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^			$models[] = $model = $this->model->newFromBuilder($result);$/;"	v
model	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$this->model = $model;$/;"	v
model	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected $model;$/;"	v
model	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$model = $instance->newFromBuilder($item);$/;"	v
model	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$model = new static($attributes);$/;"	v
model	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$model = new static((array) $attributes);$/;"	v
model	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\ModelNotFoundException.php	/^		$this->model = $model;$/;"	v
model	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\ModelNotFoundException.php	/^	protected $model;$/;"	v
model	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^		$model = $builder->getModel();$/;"	v
modelKeys	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function modelKeys()$/;"	f
models	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^				$models = $this->loadRelation($models, $name, $constraints);$/;"	v
models	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^			$models = $this->eagerLoadRelations($models);$/;"	v
models	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$models = $relation->initRelation($models, $name);$/;"	v
models	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$models = $this->getModels($columns);$/;"	v
models	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$models = array();$/;"	v
models	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$models = array($related, $base);$/;"	v
models	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function newCollection(array $models = array())$/;"	v
models	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^			$models = $this->query->eagerLoadRelations($models);$/;"	v
models	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$models = $this->query->addSelect($select)->getModels();$/;"	v
models	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^			$models = $this->query->eagerLoadRelations($models);$/;"	v
models	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$models = $this->query->addSelect($select)->getModels();$/;"	v
models	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	protected $models;$/;"	v
modifiedColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^        $modifiedColumn = (string) $modifiedColumn;$/;"	v
modifiedColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^        $this->modifiedColumn = $modifiedColumn;$/;"	v
modifiedColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    protected $modifiedColumn = 'modified';$/;"	v
modifiedField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $modifiedField = (string) $modifiedField;$/;"	v
modifiedField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $this->modifiedField = $modifiedField;$/;"	v
modifiedField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    protected $modifiedField = 'modified';$/;"	v
modifier	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    public function except($select, $modifier = '')$/;"	v
modifier	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    public function intersect($select, $modifier = '')$/;"	v
modifier	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    public function union($select, $modifier = '')$/;"	v
modifiers	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected $modifiers = array('Unsigned', 'Nullable', 'Default', 'Increment', 'Comment', 'After');$/;"	v
modifiers	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected $modifiers = array('Increment', 'Nullable', 'Default');$/;"	v
modifiers	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected $modifiers = array('Nullable', 'Default', 'Increment');$/;"	v
modifiers	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected $modifiers = array('Increment', 'Nullable', 'Default');$/;"	v
modifyAfter	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function modifyAfter(Blueprint $blueprint, Fluent $column)$/;"	f
modifyComment	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function modifyComment(Blueprint $blueprint, Fluent $column)$/;"	f
modifyDefault	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function modifyDefault(Blueprint $blueprint, Fluent $column)$/;"	f
modifyDefault	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function modifyDefault(Blueprint $blueprint, Fluent $column)$/;"	f
modifyDefault	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function modifyDefault(Blueprint $blueprint, Fluent $column)$/;"	f
modifyDefault	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function modifyDefault(Blueprint $blueprint, Fluent $column)$/;"	f
modifyHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Signer.php	/^    public function modifyHeader(array &$headers);$/;"	f
modifyHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\BaseSigner.php	/^    public function modifyHeader(array &$headers)$/;"	f
modifyHeaderShouldChangeAlgorithm	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\BaseSignerTest.php	/^    public function modifyHeaderShouldChangeAlgorithm()$/;"	f
modifyIncrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function modifyIncrement(Blueprint $blueprint, Fluent $column)$/;"	f
modifyIncrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function modifyIncrement(Blueprint $blueprint, Fluent $column)$/;"	f
modifyIncrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function modifyIncrement(Blueprint $blueprint, Fluent $column)$/;"	f
modifyIncrement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function modifyIncrement(Blueprint $blueprint, Fluent $column)$/;"	f
modifyNullable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function modifyNullable(Blueprint $blueprint, Fluent $column)$/;"	f
modifyNullable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function modifyNullable(Blueprint $blueprint, Fluent $column)$/;"	f
modifyNullable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function modifyNullable(Blueprint $blueprint, Fluent $column)$/;"	f
modifyNullable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function modifyNullable(Blueprint $blueprint, Fluent $column)$/;"	f
modifyUnsigned	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function modifyUnsigned(Blueprint $blueprint, Fluent $column)$/;"	f
module	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^        $module = self::$App->router->Module;$/;"	v
moduleClass	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $moduleClass = $this->moduleClass;$/;"	v
moduleClass	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $this->moduleClass = new $this->ModuleClassName();$/;"	v
moduleClass	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    private $moduleClass = null;$/;"	v
moduleNames	.\Source\application\init_autoloader.php	/^        $moduleNames = null;$/;"	v
moduleNames	.\Source\application\init_autoloader.php	/^        $moduleNames = str_replace(",", "|", $CONFIG['application']['module']);$/;"	v
moduleNotFoundAction	.\Source\application\library\Alpaca\MVC\Controller\AlpacaController.php	/^    public function moduleNotFoundAction()$/;"	f
modules	.\Source\application\Bootstrap.php	/^        $modules = $this->app->getModules();           $/;"	v
mongoCollection	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^        $this->mongoCollection = $mongo->selectCollection($database, $collection);$/;"	v
mongoCollection	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^    protected $mongoCollection;$/;"	v
mongoVersion	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $mongoVersion = phpversion('mongo') ?: '0.0.0';$/;"	v
month	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $month = $month === null ? date('n') : $month;$/;"	v
month	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $this->month = $value;$/;"	v
month	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function month($value)$/;"	f
month	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function create($year = null, $month = null, $day = null, $hour = null, $minute = null, $second = null, $tz = null)$/;"	v
month	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function createFromDate($year = null, $month = null, $day = null, $tz = null)$/;"	v
months	.\Source\application\library\Zend\Validator\DateStep.php	/^                            $months = ($diffParts['years'] * 12) + $diffParts['months'];$/;"	v
months	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->months = $arg;$/;"	v
months	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^            $this->months = $this->months + $interval->m * $sign;$/;"	v
months	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public function __construct($years = 1, $months = null, $weeks = null, $days = null, $hours = null, $minutes = null, $seconds = null)$/;"	v
months	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public static function create($years = 1, $months = null, $weeks = null, $days = null, $hours = null, $minutes = null, $seconds = null)$/;"	v
morphClass	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $morphClass;$/;"	v
morphClass	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^		$this->morphClass = $parent->getMorphClass();$/;"	v
morphClass	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	protected $morphClass;$/;"	v
morphClass	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphPivot.php	/^			$this->morphClass = $morphClass;$/;"	v
morphClass	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphPivot.php	/^	protected $morphClass;$/;"	v
morphClass	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^		$this->morphClass = $inverse ? $query->getModel()->getMorphClass() : $parent->getMorphClass();$/;"	v
morphClass	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	protected $morphClass;$/;"	v
morphMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function morphMany($related, $name, $type = null, $id = null, $localKey = null)$/;"	f
morphOne	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function morphOne($related, $name, $type = null, $id = null, $localKey = null)$/;"	f
morphTo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function morphTo($name = null, $type = null, $id = null)$/;"	f
morphToMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function morphToMany($related, $name, $table = null, $foreignKey = null, $otherKey = null, $inverse = false)$/;"	f
morphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^		$this->morphType = $type;$/;"	v
morphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	protected $morphType;$/;"	v
morphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphPivot.php	/^		$this->morphType = $morphType;$/;"	v
morphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphPivot.php	/^	protected $morphType;$/;"	v
morphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^		$this->morphType = $type;$/;"	v
morphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	protected $morphType;$/;"	v
morphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^		$this->morphType = $name.'_type';$/;"	v
morphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	protected $morphType;$/;"	v
morphedByMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function morphedByMany($related, $name, $table = null, $foreignKey = null, $otherKey = null)$/;"	f
morphs	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function morphs($name, $indexName = null)$/;"	f
msgid	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $msgid = 'test';$/;"	v
multi	.\Source\application\library\Zend\Validator\Barcode\Issn.php	/^        $multi    = 8;$/;"	v
multiParamValues	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^                $multiParamValues = array();$/;"	v
multibyteEncodings	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^    public function multibyteEncodings()$/;"	f
mutateAttribute	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function mutateAttribute($key, $value)$/;"	f
mutateAttributeForArray	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function mutateAttributeForArray($key, $value)$/;"	f
mutatorCache	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected static $mutatorCache = array();$/;"	v
mxHosts	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $mxHosts = array();$/;"	v
mxRecord	.\Source\application\library\Zend\Validator\EmailAddress.php	/^                $this->mxRecord = array_flip($result);$/;"	v
mxRecord	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $this->mxRecord = $mxHosts;$/;"	v
mxRecord	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $this->mxRecord = array_combine($mxHosts, $weight);$/;"	v
mxRecord	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected $mxRecord;$/;"	v
mySqlPlatform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^        $mySqlPlatform     = new Mysql\\Mysql();$/;"	v
mysqli	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $this->mysqli = $mysqli;$/;"	v
mysqli	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    protected $mysqli = null;$/;"	v
n	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^        foreach ($data as $n => $v) {$/;"	v
n	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^                    $n = $translation->appendChild($dom->createElement('note'));$/;"	v
name	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        foreach ($parameters as $name => &$value) {$/;"	v
name	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        foreach ($parameters as $name => &$value) {$/;"	v
name	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^            $name = $feature->getName(); \/\/ overwrite the name, just in case$/;"	v
name	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^            foreach ($features as $name => $feature) {$/;"	v
name	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^        $name = $this->getConnection()->getDriverName();$/;"	v
name	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        foreach ($parameters as $name => &$value) {$/;"	v
name	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^                $name = $this->positions[$name];$/;"	v
name	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^                $name = (string) $name;$/;"	v
name	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^            $name = $this->positions[$name];$/;"	v
name	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^            $name = (string) count($this->data);$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^        $this->name = $name;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    protected $name = null;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        $this->name = $name;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        foreach ($erratas as $name => $value) {$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $name = null;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^        $this->name = $name;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    protected $name = null;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^        $this->name = $name;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    protected $name;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^                    $name = $realName;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^                    $name = '_zf_' . $row['TABLE_NAME'] . '_' . $realName;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^                $name = $row['CONSTRAINT_NAME'];$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $name = null;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^                $name = $row['constraint_name'];$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        $name = null;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^                $name = $row['CONSTRAINT_NAME'];$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        $name = null;$/;"	v
name	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^                $name = '_zf_' . $table . '_FOREIGN_KEY_' . ($id + 1);$/;"	v
name	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^                        $name = $namedParameterPrefix . $expressionParamIndex++;$/;"	v
name	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        foreach ($this->specifications as $name => $specification) {$/;"	v
name	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        foreach (get_object_vars($this->subject) as $name => $value) {$/;"	v
name	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^        foreach ($this->changeColumns as $name => $column) {$/;"	v
name	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^        $this->name = (string) $name;$/;"	v
name	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    protected $name = '';$/;"	v
name	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^        $this->name = (string) $name;$/;"	v
name	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    protected $name = '';$/;"	v
name	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    public function __construct($columns = null, $name = null)$/;"	v
name	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\Check.php	/^        $this->name       = $name;$/;"	v
name	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^        $this->name    = null === $name ? null : (string) $name;$/;"	v
name	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^    public function __construct($column, $name = null, array $lengths = array())$/;"	v
name	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^        foreach ($this->changeColumns as $name => $column) {$/;"	v
name	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^     * class name, and that the event target is set to the TableGateway$/;"	c
name	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^        $this->name = $name;$/;"	v
name	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    protected $name = null;$/;"	v
name	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $name    = $this->getName();$/;"	v
name	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $name = $this->getName();$/;"	v
name	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $this->name = $name;$/;"	v
name	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    protected $name;$/;"	v
name	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^            $this->name = $this->getStorageOption('name');$/;"	v
name	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $this->name = (string) $name;$/;"	v
name	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    protected $name;$/;"	v
name	.\Source\application\library\Zend\Session\Container.php	/^        $name    = $this->getName();$/;"	v
name	.\Source\application\library\Zend\Session\SessionManager.php	/^            $this->name = session_name();$/;"	v
name	.\Source\application\library\Zend\Session\SessionManager.php	/^        $this->name = $name;$/;"	v
name	.\Source\application\library\Zend\Session\SessionManager.php	/^    protected $name;$/;"	v
name	.\Source\application\library\Zend\Session\Storage\Factory.php	/^                    '%s expects the $type argument to be a valid class name; received "%s"',$/;"	c
name	.\Source\application\library\Zend\Session\Storage\Factory.php	/^                '%s expects the $type argument to be a string class name; received "%s"',$/;"	c
name	.\Source\application\library\Zend\Session\ValidatorChain.php	/^            $name = $context->getName();$/;"	v
name	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^            $name = $this->getNamingStrategy()->extract($name, $object);$/;"	v
name	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^            $name = $this->getNamingStrategy()->hydrate($name, $data);$/;"	v
name	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^    protected $name = self::EVENT_EXTRACT;$/;"	v
name	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^    protected $name = self::EVENT_HYDRATE;$/;"	v
name	.\Source\application\library\Zend\Stdlib\Hydrator\ArraySerializable.php	/^                $name = $extractedName;$/;"	v
name	.\Source\application\library\Zend\Stdlib\Hydrator\ArraySerializable.php	/^            $name = $this->hydrateName($key, $data);$/;"	v
name	.\Source\application\library\Zend\Stdlib\Hydrator\ArraySerializable.php	/^        foreach ($data as $name => $value) {$/;"	v
name	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^     * by class name and method name$/;"	c
name	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^                $name = $extracted;$/;"	v
name	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^        foreach ($data as $name => $value) {$/;"	v
name	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^     * @var array[] indexed by class name and then property name$/;"	c
name	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^            $name = $this->hydrateName($key, $data);$/;"	v
name	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^        foreach ($options as $name => $option) {$/;"	v
name	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^     * Returns the checksum function name$/;"	f
name	.\Source\application\library\Zend\Validator\Csrf.php	/^        $this->name = (string) $name;$/;"	v
name	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected $name = 'csrf';$/;"	v
name	.\Source\application\library\Zend\Validator\Explode.php	/^            $name = $validator['name'];$/;"	v
name	.\Source\application\library\Zend\Validator\File\Upload.php	/^            foreach ($this->options['files'] as $name => $content) {$/;"	v
name	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^        \/\/ If argument is not an array, consider first argument as class name$/;"	c
name	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^     * Get class name$/;"	c
name	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^     * Set class name$/;"	c
name	.\Source\application\library\vendor\composer\ClassLoader.php	/^            \/\/ PEAR-like class name$/;"	c
name	.\Source\application\library\vendor\composer\ClassLoader.php	/^            \/\/ namespaced class name$/;"	c
name	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		\/\/ If the factory is not a Closure, it means it is just a class name which is$/;"	c
name	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		\/\/ defined and will grab this "real" abstract class name and register this$/;"	c
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public function addConnection(array $config, $name = 'default')$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^		foreach ($connections as $name => $connection)$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^		if (is_null($name)) $name = $this->getDefaultConnection();$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	public function make(array $config, $name = null)$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\InstallCommand.php	/^	protected $name = 'migrate:install';$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^	protected $name = 'migrate';$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^		$name = $this->input->getArgument('name');$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^	protected $name = 'migrate:make';$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RefreshCommand.php	/^			array('seeder', null, InputOption::VALUE_OPTIONAL, 'The class name of the root seeder.'),$/;"	c
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RefreshCommand.php	/^	protected $name = 'migrate:refresh';$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\ResetCommand.php	/^	protected $name = 'migrate:reset';$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RollbackCommand.php	/^	protected $name = 'migrate:rollback';$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^			array('class', null, InputOption::VALUE_OPTIONAL, 'The class name of the root seeder', 'DatabaseSeeder'),$/;"	c
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^	protected $name = 'db:seed';$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^		$name = $name ?: $this->getDefaultConnection();$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		foreach ($relations as $name => $constraints)$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		foreach ($this->eagerLoad as $name => $constraints)$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$name = get_called_class();$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$name = snake_case($caller['function']);$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		\/\/ If no name is provided, we will use the backtrace to get the function name$/;"	f
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		\/\/ name of the calling function. We will use that function name as the$/;"	f
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	 * Get the class name for polymorphic relations.$/;"	c
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	 * The class name to be used in polymorphic relations.$/;"	c
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^		\/\/ key, but also the foreign key type, which is typically the class name of$/;"	c
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	 * Get the class name of the parent model.$/;"	c
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	 * The class name of the parent model.$/;"	c
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	 * Get the class name of the parent model.$/;"	c
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	 * The class name of the morph type constraint.$/;"	c
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	 * Get the class name of a migration name.$/;"	c
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^			$name = get_class($migration);$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$name = $this->connection->getName();$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function foreign($columns, $name = null)$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function index($columns, $name = null)$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function primary($columns, $name = null)$/;"	v
name	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function unique($columns, $name = null)$/;"	v
name	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^			\/\/ the class name from the handle method name. This allows for handlers$/;"	c
name	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^		$name = static::getFacadeAccessor();$/;"	v
name	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^	public static function download($file, $name = null, array $headers = array(), $disposition = 'attachment')$/;"	v
name	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Basic.php	/^        $this->name = $name;$/;"	v
name	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Basic.php	/^    private $name;$/;"	v
name	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        foreach ($claims as $name => $value) {$/;"	v
name	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        foreach ($claims as $name => &$value) {$/;"	v
name	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            case $name === 'age':$/;"	v
name	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            case $name === 'dst':$/;"	v
name	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            case $name === 'local':$/;"	v
name	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            case $name === 'offset':$/;"	v
name	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            case $name === 'offsetHours':$/;"	v
name	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            case $name === 'quarter':$/;"	v
name	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            case $name === 'timezone' || $name === 'tz':$/;"	v
name	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            case $name === 'timezoneName' || $name === 'tzName':$/;"	v
name	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            case $name === 'utc':$/;"	v
name	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            case $name === 'weekOfMonth':$/;"	v
name	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^                foreach ($metadata['target-attributes'] as $name => $value) {$/;"	v
nameColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^        $nameColumn = (string) $nameColumn;$/;"	v
nameColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^        $this->nameColumn = $nameColumn;$/;"	v
nameColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    protected $nameColumn = 'name';$/;"	v
nameField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $nameField = (string) $nameField;$/;"	v
nameField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $this->nameField = $nameField;$/;"	v
nameField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    protected $nameField = 'name';$/;"	v
namedParameterPrefix	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            $namedParameterPrefix = preg_replace('\/\\s\/', '__', $namedParameterPrefix);$/;"	v
namedParameterPrefix	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            $namedParameterPrefix = sprintf('expr%04dParam', ++$runtimeExpressionPrefix);$/;"	v
namedParameterPrefix	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $namedParameterPrefix = ! $namedParameterPrefix$/;"	v
namedParameterPrefix	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $namedParameterPrefix = null$/;"	v
namedParameterPrefix	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        if ($parameterContainer && ((!is_string($namedParameterPrefix) || $namedParameterPrefix == ''))) {$/;"	v
namedSpecification	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    protected $namedSpecification = 'CONSTRAINT %s ';$/;"	v
names	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\MySqlConnector.php	/^		$names = "set names '$charset'".$/;"	v
names	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^		$names = $this->columnize(array_keys(reset($values)));$/;"	v
namespace	.\Source\application\library\vendor\composer\autoload_real.php	/^            foreach ($map as $namespace => $path) {$/;"	v
namespace	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^		$namespace = $this->getPackageNamespace($package, $namespace);$/;"	v
namespace	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	public function package($package, $namespace = null, $path = null)$/;"	v
namespace	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $namespace = $xliff->attributes->getNamedItem('xmlns');$/;"	v
namespace	.\Source\application\library\vendor\zendframework\zendxml\tests\Bootstrap.php	/^            $namespace = substr($className, 0, $lastNsPos);$/;"	v
namespace	.\Source\application\library\vendor\zendframework\zendxml\tests\Bootstrap.php	/^        $namespace = '';$/;"	v
namingStrategies	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\CompositeNamingStrategy.php	/^        $this->namingStrategies = array_map($/;"	v
namingStrategies	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\CompositeNamingStrategy.php	/^    private $namingStrategies = array();$/;"	v
namingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^        $this->namingStrategy = $strategy;$/;"	v
namingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^        $this->namingStrategy = null;$/;"	v
namingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    protected $namingStrategy;$/;"	v
natcasesort	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function natcasesort()$/;"	f
natsort	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function natsort()$/;"	f
ne	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function ne(Carbon $dt)$/;"	f
needle	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^                $needle = (string) $needle;$/;"	v
needle	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^			if ((string) $needle === substr($haystack, -strlen($needle))) return true;$/;"	v
needle	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $needle = self::mb_convert_case($needle, self::MB_CASE_FOLD, $encoding);$/;"	v
needle	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $needle = self::mb_substr($needle, 0, 1, $encoding);$/;"	v
needsSeeding	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RefreshCommand.php	/^	protected function needsSeeding()$/;"	f
nest	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function nest()$/;"	f
nested	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$nested = $this->nestedRelations($relation);$/;"	v
nested	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$nested = array();$/;"	v
nested	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$nested = $where['query'];$/;"	v
nestedRelations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function nestedRelations($relation)$/;"	f
nestedTransactionsCount	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    protected $nestedTransactionsCount = 0;$/;"	v
nestedTransactionsCount	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $this->nestedTransactionsCount = 0;$/;"	v
newBaseQueryBuilder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function newBaseQueryBuilder()$/;"	f
newCollection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function newCollection(array $models = array())$/;"	f
newColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$newColumn = new Column($command->to, $column->getType(), $column->toArray());$/;"	v
newEloquentBuilder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function newEloquentBuilder($query)$/;"	f
newExistingPivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function newExistingPivot(array $attributes = array())$/;"	f
newFromBuilder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function newFromBuilder($attributes = array())$/;"	f
newInstance	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function newInstance($attributes = array(), $exists = false)$/;"	f
newLine	.\Source\application\library\vendor\symfony\translation\Dumper\PoFileDumper.php	/^                $newLine = true;$/;"	v
newLine	.\Source\application\library\vendor\symfony\translation\Dumper\PoFileDumper.php	/^        $newLine = false;$/;"	v
newObj	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^        $newObj = array('$set' => array($/;"	v
newPath	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^        $newPath = 'file:\/\/\/'.$drive.implode('\/', array_map('rawurlencode', $parts));$/;"	v
newPath	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^        $newPath = str_replace('\\\\', '\/', __DIR__).'\/schema\/dic\/xliff-core\/xml.xsd';$/;"	v
newPivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function newPivot(Model $parent, array $attributes, $table, $exists)$/;"	f
newPivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function newPivot(array $attributes = array(), $exists = false)$/;"	f
newPivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	public function newPivot(array $attributes = array(), $exists = false)$/;"	f
newPivotQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function newPivotQuery()$/;"	f
newPivotQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	protected function newPivotQuery()$/;"	f
newPivotStatement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function newPivotStatement()$/;"	f
newPivotStatementForId	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function newPivotStatementForId($id)$/;"	f
newQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function newQuery()$/;"	f
newQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function newQuery()$/;"	f
newQueryWithoutScope	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function newQueryWithoutScope($scope)$/;"	f
newQueryWithoutScopes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function newQueryWithoutScopes()$/;"	f
newSpec	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^        $newSpec = '';$/;"	v
newSpec	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\Check.php	/^        $newSpec      = '';$/;"	v
newSpec	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^        $newSpec = str_replace('...', implode(', ', $newSpecParts), $this->specification);$/;"	v
newSpecParts	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^            $newSpecParts = array_fill(0, $colCount, '%s');$/;"	v
newSpecParts	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^            $newSpecParts = array_fill(0, $colCount, '%s');$/;"	v
newSpecParts	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^        $newSpecParts = array();$/;"	v
newSpecTypes	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^            $newSpecTypes = array_merge($newSpecTypes, array_fill(0, $colCount, self::TYPE_IDENTIFIER));$/;"	v
newSpecTypes	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^        $newSpecTypes = array();$/;"	v
newSpecTypes	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\Check.php	/^        $newSpecTypes = array(self::TYPE_LITERAL);$/;"	v
newSpecTypes	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^            $newSpecTypes = array_merge($newSpecTypes, array_fill(0, $colCount, self::TYPE_IDENTIFIER));$/;"	v
newSpecTypes	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^        $newSpecTypes = array(self::TYPE_IDENTIFIER);$/;"	v
newSpecTypes	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^        $newSpecTypes = array(self::TYPE_IDENTIFIER);$/;"	v
next	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function next()$/;"	f
next	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function next()$/;"	f
next	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function next()$/;"	f
next	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function next()$/;"	f
next	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function next()$/;"	f
next	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function next()$/;"	f
next	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function next()$/;"	f
next	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    public function next()$/;"	f
next	.\Source\application\library\Zend\Stdlib\Glob.php	/^            $next = static::nextBraceSub($pattern, $p, $flags);$/;"	v
next	.\Source\application\library\Zend\Stdlib\Glob.php	/^        $next = static::nextBraceSub($pattern, $begin + 1, $flags);$/;"	v
next	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function next()$/;"	f
next	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function next($dayOfWeek = null)$/;"	f
nextBraceSub	.\Source\application\library\Zend\Stdlib\Glob.php	/^    protected static function nextBraceSub($pattern, $begin, $flags)$/;"	f
nextComplete	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^        $this->nextComplete = false;$/;"	v
nextComplete	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^        $this->nextComplete = true;$/;"	v
nextComplete	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    protected $nextComplete = false;$/;"	v
nextPredicateCombineOperator	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^                $this->nextPredicateCombineOperator = self::OP_AND;$/;"	v
nextPredicateCombineOperator	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^                $this->nextPredicateCombineOperator = self::OP_OR;$/;"	v
nextPredicateCombineOperator	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^        $this->nextPredicateCombineOperator = null;$/;"	v
nextPredicateCombineOperator	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    protected $nextPredicateCombineOperator = null;$/;"	v
nextSequenceId	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^    public function nextSequenceId()$/;"	f
nlen	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                        $nlen = $i;$/;"	v
nlen	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                    $nlen = strlen($uchr);$/;"	v
noConstraints	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public static function noConstraints(Closure $callback)$/;"	f
node	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^        $node = current($this->items);$/;"	v
node	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^        $node = next($this->items);$/;"	v
node	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^        $node = $result->getElementsByTagName('result')->item(0);$/;"	v
nodePath	.\Source\application\library\vendor\symfony\translation\Loader\ArrayLoader.php	/^                $nodePath = $path ? $path.'.'.$key : $key;$/;"	v
nodePath	.\Source\application\library\vendor\symfony\translation\Loader\IcuResFileLoader.php	/^            $nodePath = $path ? $path.'.'.$key : $key;$/;"	v
nodes	.\Source\application\library\vendor\symfony\translation\Loader\QtFileLoader.php	/^        $nodes = $xpath->evaluate('\/\/TS\/context\/name[text()="'.$domain.'"]');$/;"	v
nonBackupDumper	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^        $nonBackupDumper = new NonBackupDumper();$/;"	v
normalizeArgument	.\Source\application\library\Zend\Db\Sql\AbstractExpression.php	/^    protected function normalizeArgument($argument, $defaultType = self::TYPE_VALUE)$/;"	f
normalizeClass	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^	public static function normalizeClass($class)$/;"	f
normalizeColumnOption	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^    private function normalizeColumnOption($name)$/;"	f
normalizeColumnOption	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^    private function normalizeColumnOption($name)$/;"	f
normalizeContainerName	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^    protected function normalizeContainerName($name)$/;"	f
normalizedKey	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^            $normalizedKey = preg_replace_callback('\/([A-Z])\/', $transform, $key);$/;"	v
not	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhereExists(Closure $callback, $not = false)$/;"	v
notEqualTo	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function notEqualTo($left, $right, $leftType = self::TYPE_IDENTIFIER, $rightType = self::TYPE_VALUE)$/;"	f
notIn	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function notIn($identifier, $valueSet = null)$/;"	f
notLike	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function notLike($identifier, $notLike)$/;"	f
note	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	protected function note($message)$/;"	f
note	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $note = array('content' => $this->utf8ToCharset((string) $xmlNote, $encoding));$/;"	v
noteAttributes	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $noteAttributes = $xmlNote->attributes();$/;"	v
noteElement	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    private function parseNotesMetadata(\\SimpleXMLElement $noteElement = null, $encoding = null)$/;"	v
notes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$this->notes = array();$/;"	v
notes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	protected $notes = array();$/;"	v
notes	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^        $notes = array();$/;"	v
now	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $now = time();$/;"	v
now	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function now($tz = null)$/;"	f
nthOfMonth	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function nthOfMonth($nth, $dayOfWeek)$/;"	f
nthOfQuarter	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function nthOfQuarter($nth, $dayOfWeek)$/;"	f
nthOfYear	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function nthOfYear($nth, $dayOfWeek)$/;"	f
nullable	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function __construct($name = null, $nullable = false, $default = null, array $options = array())$/;"	v
nullable	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Float.php	/^        $nullable = false,$/;"	v
nullableTimestamps	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function nullableTimestamps()$/;"	f
numberOfParameters	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\NumberOfParameterFilter.php	/^        $this->numberOfParameters = (int) $numberOfParameters;$/;"	v
numberOfParameters	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\NumberOfParameterFilter.php	/^    protected $numberOfParameters = null;$/;"	v
numberOfRows	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    protected $numberOfRows = -1;$/;"	v
numberOfRows	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    protected $numberOfRows = -1;$/;"	v
numericPrecision	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        $this->numericPrecision = $numericPrecision;$/;"	v
numericPrecision	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $numericPrecision = null;$/;"	v
numericScale	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        $this->numericScale = $numericScale;$/;"	v
numericScale	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $numericScale = null;$/;"	v
numericUnsigned	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        $this->numericUnsigned = $numericUnsigned;$/;"	v
numericUnsigned	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $numericUnsigned = null;$/;"	v
object	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^        $object = is_array($data) ? $this->hydrator->hydrate($data, clone $this->objectPrototype) : false;$/;"	v
object	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function extractName($name, $object = null)$/;"	v
object	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function extractValue($name, $value, $object = null)$/;"	v
object	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydratorListener.php	/^        $object = $this->hydrator->hydrate($event->getHydrationData(), $event->getHydratedObject());$/;"	v
object	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ClosureStrategy.php	/^    public function extract($value, $object = null)$/;"	v
object	.\Source\application\library\Zend\Validator\NotEmpty.php	/^            $object = true;$/;"	v
object	.\Source\application\library\Zend\Validator\NotEmpty.php	/^        $object  = false;$/;"	v
object	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^				$object = $closure($container);$/;"	v
object	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			$object = $this->build($concrete, $parameters);$/;"	v
object	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			$object = $this->make($concrete, $parameters);$/;"	v
object	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			static $object;$/;"	v
object	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^			$object = $object->{$segment};$/;"	v
objectClass	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^        $objectClass = get_class($object);$/;"	v
objectPrototype	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^        $this->objectPrototype = $objectPrototype;$/;"	v
objectPrototype	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^    protected $objectPrototype = null;$/;"	v
object_get	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function object_get($object, $key, $default = null)$/;"	f
observables	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$observables = is_array($observables) ? $observables : func_get_args();$/;"	v
observables	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->observables = $observables;$/;"	v
observables	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->observables = array_diff($this->observables, $observables);$/;"	v
observables	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->observables = array_unique(array_merge($this->observables, $observables));$/;"	v
observables	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $observables = array();$/;"	v
observe	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function observe($class)$/;"	f
oci8	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        $this->oci8 = $oci8;$/;"	v
oci8	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    protected $oci8 = null;$/;"	v
ociStmt	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $ociStmt = oci_parse($this->resource, $sql);$/;"	v
offset	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^                $offset = (int) $this->offset + 1;$/;"	v
offset	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^                $offset = (int) $this->offset;$/;"	v
offset	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^        if ($this->limit === null && $this->offset === null) {$/;"	v
offset	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^            $this->offset = 0;$/;"	v
offset	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^        if ($this->limit === null && $this->offset === null) {$/;"	v
offset	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^        if ($this->limit === null && $this->offset === null) {$/;"	v
offset	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $this->offset = null;$/;"	v
offset	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $this->offset = $offset;$/;"	v
offset	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $offset = null;$/;"	v
offset	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function offset($offset)$/;"	f
offset	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^    public function strpos($haystack, $needle, $offset = 0)$/;"	v
offset	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^    public function substr($str, $offset = 0, $length = null)$/;"	v
offset	.\Source\application\library\Zend\Stdlib\StringWrapper\Intl.php	/^    public function strpos($haystack, $needle, $offset = 0)$/;"	v
offset	.\Source\application\library\Zend\Stdlib\StringWrapper\Intl.php	/^    public function substr($str, $offset = 0, $length = null)$/;"	v
offset	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^    public function strpos($haystack, $needle, $offset = 0)$/;"	v
offset	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^    public function substr($str, $offset = 0, $length = null)$/;"	v
offset	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^    public function strpos($haystack, $needle, $offset = 0)$/;"	v
offset	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^    public function substr($str, $offset = 0, $length = null)$/;"	v
offset	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function strpos($haystack, $needle, $offset = 0);$/;"	v
offset	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function substr($str, $offset = 0, $length = null);$/;"	v
offset	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $offset;$/;"	v
offset	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function offset($value)$/;"	f
offset	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                return $this->offset === $this->copy()->setTimezone(date_default_timezone_get())->offset;$/;"	v
offset	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                return $this->offset === 0;$/;"	v
offset	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $offset = 0;$/;"	v
offset	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $offset = 0;$/;"	v
offset	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_stripos($haystack, $needle, $offset = 0, $encoding = null)$/;"	v
offset	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strpos($haystack, $needle, $offset = 0, $encoding = null)$/;"	v
offset	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strripos($haystack, $needle, $offset = 0, $encoding = null)$/;"	v
offset	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strrpos($haystack, $needle, $offset = 0, $encoding = null)$/;"	v
offset	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_stripos($s, $needle, $offset = 0, $enc = null) { return p\\Mbstring::mb_stripos($s, $needle, $offset, $enc); }$/;"	v
offset	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strpos($s, $needle, $offset = 0, $enc = null) { return p\\Mbstring::mb_strpos($s, $needle, $offset, $enc); }$/;"	v
offset	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strripos($s, $needle, $offset = 0, $enc = null) { return p\\Mbstring::mb_strripos($s, $needle, $offset, $enc); }$/;"	v
offset	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strrpos($s, $needle, $offset = 0, $enc = null) { return p\\Mbstring::mb_strrpos($s, $needle, $offset, $enc); }$/;"	v
offset	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^            $offset = $this->readLong($stream, $isBigEndian);$/;"	v
offsetExists	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetExists($name)$/;"	f
offsetExists	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function offsetExists($offset)$/;"	f
offsetExists	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function offsetExists($key)$/;"	f
offsetExists	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function offsetExists($key)$/;"	f
offsetExists	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function offsetExists($key)$/;"	f
offsetExists	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function offsetExists($key)$/;"	f
offsetExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function offsetExists($offset)$/;"	f
offsetExists	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function offsetExists($key)$/;"	f
offsetExists	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function offsetExists($offset)$/;"	f
offsetForSumParamName	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^            $offsetForSumParamName = $driver->formatParameterName('offsetForSum');$/;"	v
offsetGet	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetGet($name)$/;"	f
offsetGet	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function offsetGet($offset)$/;"	f
offsetGet	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function offsetGet($key)$/;"	f
offsetGet	.\Source\application\library\Zend\Session\Container.php	/^    public function &offsetGet($key)$/;"	f
offsetGet	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function offsetGet($key)$/;"	f
offsetGet	.\Source\application\library\Zend\Session\Storage\SessionArrayStorage.php	/^    public function &offsetGet($key)$/;"	f
offsetGet	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function &offsetGet($key)$/;"	f
offsetGet	.\Source\application\library\Zend\Stdlib\Parameters.php	/^    public function offsetGet($name)$/;"	f
offsetGet	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function offsetGet($key)$/;"	f
offsetGet	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function offsetGet($offset)$/;"	f
offsetGet	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function offsetGet($key)$/;"	f
offsetGet	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function offsetGet($offset)$/;"	f
offsetGetErrata	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetGetErrata($name)$/;"	f
offsetGetMaxLength	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetGetMaxLength($name)$/;"	f
offsetHasErrata	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetHasErrata($name)$/;"	f
offsetHasMaxLength	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetHasMaxLength($name)$/;"	f
offsetId	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^        $offsetId = $this->readLong($stream, $isBigEndian);$/;"	v
offsetParamName	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^            $offsetParamName       = $driver->formatParameterName('offset');$/;"	v
offsetParamName	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^            $offsetParamName = $driver->formatParameterName('offset');$/;"	v
offsetSet	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetSet($name, $value, $errata = null, $maxLength = null)$/;"	f
offsetSet	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function offsetSet($offset, $value)$/;"	f
offsetSet	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function offsetSet($key, $value)$/;"	f
offsetSet	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function offsetSet($key, $value)$/;"	f
offsetSet	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function offsetSet($key, $value)$/;"	f
offsetSet	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function offsetSet($key, $value)$/;"	f
offsetSet	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function offsetSet($key, $value)$/;"	f
offsetSet	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function offsetSet($offset, $value)$/;"	f
offsetSet	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function offsetSet($key, $value)$/;"	f
offsetSet	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function offsetSet($offset, $value)$/;"	f
offsetSetErrata	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetSetErrata($name, $errata)$/;"	f
offsetSetMaxLength	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetSetMaxLength($name, $maxLength)$/;"	f
offsetSetReference	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetSetReference($name, $from)$/;"	f
offsetTranslated	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^        $offsetTranslated = $this->readLong($stream, $isBigEndian);$/;"	v
offsetUnset	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetUnset($name)$/;"	f
offsetUnset	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function offsetUnset($offset)$/;"	f
offsetUnset	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function offsetUnset($key)$/;"	f
offsetUnset	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function offsetUnset($key)$/;"	f
offsetUnset	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function offsetUnset($key)$/;"	f
offsetUnset	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function offsetUnset($key)$/;"	f
offsetUnset	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function offsetUnset($offset)$/;"	f
offsetUnset	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function offsetUnset($key)$/;"	f
offsetUnset	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function offsetUnset($offset)$/;"	f
offsetUnsetErrata	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetUnsetErrata($name)$/;"	f
offsetUnsetMaxLength	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function offsetUnsetMaxLength($name)$/;"	f
offsets	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^        $offsets = array();$/;"	v
ok	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $ok = false;$/;"	v
ok	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $ok = true;$/;"	v
old	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $old = $storage[$name];$/;"	v
oldSessionData	.\Source\application\library\Zend\Session\SessionManager.php	/^            $oldSessionData = $_SESSION;$/;"	v
oldSessionData	.\Source\application\library\Zend\Session\SessionManager.php	/^        $oldSessionData = array();$/;"	v
oldest	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function oldest($column = 'created_at')$/;"	f
on	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	 * Run the default delete function on the builder.$/;"	f
on	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function on($connection = null)$/;"	f
on	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	 * Execute an aggregate function on the database.$/;"	f
on	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public function on($first, $operator, $second, $boolean = 'and', $where = false)$/;"	f
on	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^		\/\/ Each type of command has a corresponding compiler function on the schema$/;"	f
on	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$on = $this->wrapTable($command->on);$/;"	v
on	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$on = $this->wrapTable($foreign->on);$/;"	v
onColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$onColumns = $this->columnize((array) $command->references);$/;"	v
onColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$onColumns = $this->columnize((array) $foreign->references);$/;"	v
onDelete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$this->onDelete = $callback;$/;"	v
onDelete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected $onDelete;$/;"	v
onDelete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function onDelete(Closure $callback)$/;"	f
onDeleteRule	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^        $this->onDeleteRule = (string) $onDeleteRule;$/;"	v
onDeleteRule	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    protected $onDeleteRule = 'NO ACTION';$/;"	v
onDeleteRule	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    public function __construct($name, $columns, $referenceTable, $referenceColumn, $onDeleteRule = null, $onUpdateRule = null)$/;"	v
onDisplay	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $onDisplay = "onDisplay";$/;"	v
onExtract	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydratorListener.php	/^    public function onExtract(ExtractEvent $event)$/;"	f
onHydrate	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydratorListener.php	/^    public function onHydrate(HydrateEvent $event)$/;"	f
onUpdateRule	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^        $this->onUpdateRule = (string) $onUpdateRule;$/;"	v
onUpdateRule	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    protected $onUpdateRule = 'NO ACTION';$/;"	v
onWriteConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function onWriteConnection()$/;"	f
only	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function only($keys)$/;"	f
only	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function only($array, $keys)$/;"	f
onlyTrashed	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	public static function onlyTrashed()$/;"	f
open	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    public function open($savePath, $name)$/;"	f
open	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^    public function open($savePath, $name)$/;"	f
open	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^    public function open($savePath, $name)$/;"	f
open	.\Source\application\library\Zend\Session\SaveHandler\SaveHandlerInterface.php	/^    public function open($savePath, $name);$/;"	f
operation	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php	/^        $operation = $this->createOperation($/;"	v
operation	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php	/^        $operation = $this->createOperation($/;"	v
operator	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^        $operator = self::OPERATOR_EQUAL_TO,$/;"	v
operator	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^        $this->operator = $operator;$/;"	v
operator	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    protected $operator = self::OPERATOR_EQUAL_TO;$/;"	v
operator	.\Source\application\library\Zend\Validator\Bitwise.php	/^        $this->operator = $operator;$/;"	v
operator	.\Source\application\library\Zend\Validator\Bitwise.php	/^    protected $operator;$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function hasNested($relations, $operator = '>=', $count = 1, $boolean = 'and', $callback = null)$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function has($relation, $operator = '>=', $count = 1, $boolean = 'and', Closure $callback = null)$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function orHas($relation, $operator = '>=', $count = 1)$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function orWhere($column, $operator = null, $value = null)$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function orWhereHas($relation, Closure $callback, $operator = '>=', $count = 1)$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function where($column, $operator = null, $value = null, $boolean = 'and')$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function whereHas($relation, Closure $callback, $operator = '>=', $count = 1)$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function orWherePivot($column, $operator = null, $value = null)$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function wherePivot($column, $operator = null, $value = null, $boolean = 'and')$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function having($column, $operator = null, $value = null, $boolean = 'and')$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function join($table, $one, $operator = null, $two = null, $type = 'inner', $where = false)$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function leftJoin($table, $first, $operator = null, $second = null)$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orHaving($column, $operator = null, $value = null)$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhere($column, $operator = null, $value = null)$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function rightJoin($table, $first, $operator = null, $second = null)$/;"	v
operator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function where($column, $operator = null, $value = null, $boolean = 'and')$/;"	v
operators	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected $operators = array($/;"	v
operators	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^	protected $operators = array($/;"	v
operators	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^	protected $operators = array($/;"	v
operators	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	protected $operators = array($/;"	v
option	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^                    $option = constant($option);$/;"	v
option	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^                    $option = strtoupper($option);$/;"	v
option	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^            foreach ($p['driver_options'] as $option => $value) {$/;"	v
option	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $option                 = strtolower($option);$/;"	v
option	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $option = strtolower($option);$/;"	v
option	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $option = substr($method, 3);$/;"	v
options	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $options = (array) $parameters['options'];$/;"	v
options	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^        $options = (isset($parameters['platform_options'])) ? $parameters['platform_options'] : array();$/;"	v
options	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^        $options = array();$/;"	v
options	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $options      = (isset($p['driver_options']) ? $p['driver_options'] : array());$/;"	v
options	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^        $options = array_intersect_key(array_merge($this->options, $options), $this->options);$/;"	v
options	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                    $options = array_diff_key($options, $value) + $value;$/;"	v
options	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $options = array();$/;"	v
options	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    protected $options;$/;"	v
options	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $options = ($options) ?: $this->prepareOptions;$/;"	v
options	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function prepare($sql = null, array $options = array())$/;"	v
options	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractTimestampColumn.php	/^        $options = $this->getOptions();$/;"	v
options	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^        $this->options = $options;$/;"	v
options	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    protected $options = array();$/;"	v
options	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Float.php	/^        array $options = array()$/;"	v
options	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Integer.php	/^        $options = $this->getOptions();$/;"	v
options	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    protected $options = array();$/;"	v
options	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^        $this->options      = $options;$/;"	v
options	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^    protected $options;$/;"	v
options	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^        $this->options = $options;$/;"	v
options	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^    protected $options;$/;"	v
options	.\Source\application\library\Zend\Session\Service\StorageFactory.php	/^        $options = isset($config['options']) ? $config['options'] : array();$/;"	v
options	.\Source\application\library\Zend\Session\SessionManager.php	/^            $options = $this->defaultDestroyOptions;$/;"	v
options	.\Source\application\library\Zend\Session\SessionManager.php	/^            $options = array_merge($this->defaultDestroyOptions, $options);$/;"	v
options	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function destroy(array $options = null)$/;"	v
options	.\Source\application\library\Zend\Session\Storage\Factory.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Session\Storage\Factory.php	/^    public static function factory($type, $options = array())$/;"	v
options	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^            $options = $options->toArray();$/;"	v
options	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^            $options = $this->getSerializerOptions();$/;"	v
options	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\Barcode.php	/^            $options = array('adapter' => $options);$/;"	v
options	.\Source\application\library\Zend\Validator\Barcode.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\Barcode.php	/^    public function setAdapter($adapter, $options = null)$/;"	v
options	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\Between.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\Between.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\Between.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\Between.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\Bitwise.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\Bitwise.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\Bitwise.php	/^            $options = iterator_to_array($options);$/;"	v
options	.\Source\application\library\Zend\Validator\Callback.php	/^            $options = array('callback' => $options);$/;"	v
options	.\Source\application\library\Zend\Validator\Callback.php	/^        $options  = $this->getCallbackOptions();$/;"	v
options	.\Source\application\library\Zend\Validator\Callback.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\CreditCard.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\CreditCard.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\CreditCard.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\CreditCard.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\Csrf.php	/^            $options = (array) $options;$/;"	v
options	.\Source\application\library\Zend\Validator\Csrf.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\Date.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\Date.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\Date.php	/^            $options = iterator_to_array($options);$/;"	v
options	.\Source\application\library\Zend\Validator\DateStep.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\DateStep.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\DateStep.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^            $options       = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\Explode.php	/^            $options = isset($validator['options']) ? $validator['options'] : array();$/;"	v
options	.\Source\application\library\Zend\Validator\File\Count.php	/^            $options = array('max' => $options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\Count.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\File\Crc32.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\File\Exists.php	/^            $options = array('directory' => $options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\Exists.php	/^            $options = explode(',', $options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\Exists.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\File\Extension.php	/^                $options = array('extension' => $options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\Extension.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\Extension.php	/^            $options = array('extension' => $options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\Extension.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^            $options = array('max' => $options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\Hash.php	/^            $options = array($options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\Hash.php	/^            $options = array('hash' => $options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\Hash.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^                $options = array('minWidth' => $options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\File\IsCompressed.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\IsCompressed.php	/^            $options = array();$/;"	v
options	.\Source\application\library\Zend\Validator\File\IsImage.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\IsImage.php	/^            $options = array();$/;"	v
options	.\Source\application\library\Zend\Validator\File\Md5.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $options = array();$/;"	v
options	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\File\Sha1.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\File\Size.php	/^            $options = array('max' => $options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\Size.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\File\Upload.php	/^            $options = array('files' => $options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\Upload.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\File\WordCount.php	/^            $options = array('max' => $options);$/;"	v
options	.\Source\application\library\Zend\Validator\File\WordCount.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\GreaterThan.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\GreaterThan.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\GreaterThan.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\Hostname.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\Hostname.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\Hostname.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\Iban.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\Ip.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^            $options = $tmpOptions;$/;"	v
options	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^            $options = iterator_to_array($options);$/;"	v
options	.\Source\application\library\Zend\Validator\Isbn.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\LessThan.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\LessThan.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\LessThan.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\NotEmpty.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\NotEmpty.php	/^            $options = ArrayUtils::iteratorToArray($options);$/;"	v
options	.\Source\application\library\Zend\Validator\NotEmpty.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\NotEmpty.php	/^    protected $options = array();$/;"	v
options	.\Source\application\library\Zend\Validator\Step.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\Step.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\Step.php	/^            $options = iterator_to_array($options);$/;"	v
options	.\Source\application\library\Zend\Validator\StringLength.php	/^            $options     = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\StringLength.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\StringLength.php	/^    protected $options = array($/;"	v
options	.\Source\application\library\Zend\Validator\Timezone.php	/^    protected $options = array();$/;"	v
options	.\Source\application\library\Zend\Validator\Uri.php	/^            $options = $temp;$/;"	v
options	.\Source\application\library\Zend\Validator\Uri.php	/^            $options = func_get_args();$/;"	v
options	.\Source\application\library\Zend\Validator\Uri.php	/^            $options = iterator_to_array($options);$/;"	v
options	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function addByName($name, $options = array(), $breakChainOnFailure = false)$/;"	v
options	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function attachByName($name, $options = array(), $breakChainOnFailure = false, $priority = self::DEFAULT_PRIORITY)$/;"	v
options	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function plugin($name, array $options = null)$/;"	v
options	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function prependByName($name, $options = array(), $breakChainOnFailure = false)$/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\Connector.php	/^		$options = array_get($config, 'options', array());$/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\Connector.php	/^		$this->options = $options;$/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\Connector.php	/^	protected $options = array($/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\MySqlConnector.php	/^		$options = $this->getOptions($config);$/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\PostgresConnector.php	/^		$options = $this->getOptions($config);$/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\PostgresConnector.php	/^	protected $options = array($/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SQLiteConnector.php	/^		$options = $this->getOptions($config);$/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SqlServerConnector.php	/^		$options = $this->getOptions($config);$/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SqlServerConnector.php	/^	protected $options = array($/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^			$options = array('--database' => $this->input->getOption('database'));$/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function performInsert(Builder $query, array $options = [])$/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function performUpdate(Builder $query, array $options = [])$/;"	v
options	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function save(array $options = array())$/;"	v
options	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function sortBy($callback, $options = SORT_REGULAR, $descending = false)$/;"	v
options	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function sortByDesc($callback, $options = SORT_REGULAR)$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\DumperInterface.php	/^    public function dump(MessageCatalogue $messages, $options = array());$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^    abstract public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array());$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^    public function dump(MessageCatalogue $messages, $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\IniFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\JsonFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\PhpFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\PoFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\QtFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^    private function dumpXliff1($defaultLocale, MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^    private function dumpXliff2($defaultLocale, MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Dumper\YamlFileDumper.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^    public function formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php	/^        $options = array($/;"	v
options	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^    public function dump(MessageCatalogue $messages, $options = array())$/;"	v
options	.\Source\application\library\vendor\symfony\translation\Writer\TranslationWriter.php	/^    public function writeTranslations(MessageCatalogue $catalogue, $format, $options = array())$/;"	v
options	.\Source\application\module\Index\Module.php	/^                \/\/             $options = isset($session['config']['options']) ? $session['config']['options'] : array();$/;"	v
or	.\Source\application\library\vendor\composer\ClassLoader.php	/^     * Loads the given class or interface.$/;"	c
orCount	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^        $orCount = count($this->orFilter);$/;"	v
orFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^        $this->orFilter = new ArrayObject($orFilter);$/;"	v
orFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^    protected $orFilter;$/;"	v
orHas	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function orHas($relation, $operator = '>=', $count = 1)$/;"	f
orHaving	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orHaving($column, $operator = null, $value = null)$/;"	f
orHavingRaw	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orHavingRaw($sql, array $bindings = array())$/;"	f
orOn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public function orOn($first, $operator, $second)$/;"	f
orPredicate	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    public function orPredicate(PredicateInterface $predicate)$/;"	f
orWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function orWhere($column, $operator = null, $value = null)$/;"	f
orWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhere($column, $operator = null, $value = null)$/;"	f
orWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public function orWhere($first, $operator, $second)$/;"	f
orWhereBetween	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhereBetween($column, array $values)$/;"	f
orWhereExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhereExists(Closure $callback, $not = false)$/;"	f
orWhereHas	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function orWhereHas($relation, Closure $callback, $operator = '>=', $count = 1)$/;"	f
orWhereIn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhereIn($column, $values)$/;"	f
orWhereNotBetween	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhereNotBetween($column, array $values)$/;"	f
orWhereNotExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhereNotExists(Closure $callback)$/;"	f
orWhereNotIn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhereNotIn($column, $values)$/;"	f
orWhereNotNull	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhereNotNull($column)$/;"	f
orWhereNull	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhereNull($column)$/;"	f
orWherePivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function orWherePivot($column, $operator = null, $value = null)$/;"	f
orWhereRaw	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orWhereRaw($sql, array $bindings = array())$/;"	f
oraclePlatform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^        $oraclePlatform    = new Oracle\\Oracle();$/;"	v
oracleRowCounter	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^        $oracleRowCounter = $this;$/;"	v
ord	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^        $ord = ord($value);$/;"	v
ord128	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^    protected function ord128($value, $set)$/;"	f
order	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $order = (array) $order;$/;"	v
order	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $order = preg_split('#,\\s+#', $order);$/;"	v
order	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $this->order = array();$/;"	v
order	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $order = array($order);$/;"	v
order	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $order = array();$/;"	v
order	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function order($order)$/;"	f
orderBy	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^            $orderBy = $sqls[self::ORDER];$/;"	v
orderBy	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^            $orderBy = '';$/;"	v
orderBy	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^            $orderBy = $sqls[self::ORDER];$/;"	v
orderBy	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^            $orderBy = 'ORDER BY (SELECT 1)';$/;"	v
orderBy	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orderBy($column, $direction = 'asc')$/;"	f
orderByRaw	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function orderByRaw($sql, $bindings = array())$/;"	f
orderings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^		$orderings = $components['orders'];$/;"	v
orders	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $orders = array();$/;"	v
orders	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $orders;$/;"	v
ordinalPosition	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        $this->ordinalPosition = $ordinalPosition;$/;"	v
ordinalPosition	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $ordinalPosition = null;$/;"	v
ordinalPosition	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^        $this->ordinalPosition = $ordinalPosition;$/;"	v
ordinalPosition	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    protected $ordinalPosition = null;$/;"	v
orig	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^        $orig = iconv('UTF-8', $encoding, $xml);$/;"	v
original	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$original = $this->original[$key];$/;"	v
original	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->original = $this->attributes;$/;"	v
original	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $original = array();$/;"	v
original	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^		$original =& $array;$/;"	v
originalIsNumericallyEquivalent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function originalIsNumericallyEquivalent($key)$/;"	f
other	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^		$other = $this->otherKey;$/;"	v
other	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $other = static::now($this->tz);$/;"	v
other	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function diffForHumans(Carbon $other = null, $absolute = false)$/;"	v
otherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$otherKey = $otherKey ?: $instance->getForeignKey();$/;"	v
otherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$otherKey = $otherKey ?: $instance->getKeyName();$/;"	v
otherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$otherKey = $otherKey ?: $name.'_id';$/;"	v
otherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^		$otherKey = $this->wrap($query->getModel()->getTable().'.'.$this->otherKey);$/;"	v
otherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^		$this->otherKey = $otherKey;$/;"	v
otherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	protected $otherKey;$/;"	v
otherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$this->otherKey = $otherKey;$/;"	v
otherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected $otherKey;$/;"	v
otherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^		$this->otherKey = $otherKey;$/;"	v
otherKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	protected $otherKey;$/;"	v
output	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^        $output = array();$/;"	v
output	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^        $output = stream_get_contents($handle);$/;"	v
output	.\Source\application\library\vendor\symfony\translation\Dumper\IniFileDumper.php	/^        $output = '';$/;"	v
output	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^        $output = $sources = $targets = $sourceOffsets = $targetOffsets = '';$/;"	v
output	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^        $output = implode(array_map(array($this, 'writeLong'), $header))$/;"	v
output	.\Source\application\library\vendor\symfony\translation\Dumper\PoFileDumper.php	/^        $output = 'msgid ""'."\\n";$/;"	v
over	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		\/\/ where clauses the developer may have put in the relationship function over to$/;"	f
overwriteArray	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function setMetadata($key, $value, $overwriteArray = false)$/;"	v
overwriteArray	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function setMetadata($key, $value, $overwriteArray = false)$/;"	v
overwriteArray	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^    public function setMetadata($key, $value, $overwriteArray = false);$/;"	v
p	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $p = $this->connectionParameters;$/;"	v
p	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $p = $this->connectionParameters;$/;"	v
p	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $p = $this->connectionParameters;$/;"	v
p	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $p = $this->connectionParameters;$/;"	v
p	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^        $p = $this->adapter->getPlatform();$/;"	v
p	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        $p = $this->adapter->getPlatform();$/;"	v
p	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        $p = $this->adapter->getPlatform();$/;"	v
p	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $p = $this->adapter->getPlatform();$/;"	v
p	.\Source\application\library\Zend\Stdlib\Glob.php	/^            $p    = $next + 1;$/;"	v
p	.\Source\application\library\Zend\Stdlib\Glob.php	/^        $p = $begin + 1;$/;"	v
pCount	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^        $pCount = 1;$/;"	v
pRef	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $pRef = &$this->parameterReferences;$/;"	v
package	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\BaseCommand.php	/^		$package = $this->input->getOption('package');$/;"	v
package	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	public function package($package, $namespace = null, $path = null)$/;"	f
packagePath	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^		$this->packagePath = $packagePath;$/;"	v
packagePath	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^	protected $packagePath;$/;"	v
packagePath	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^		$this->packagePath = $packagePath;$/;"	v
packagePath	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^	protected $packagePath;$/;"	v
packagePath	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^			$packagePath = $app['path.base'].'\/vendor';$/;"	v
padString	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    public function strPad($input, $padLength, $padString = ' ', $padType = STR_PAD_RIGHT)$/;"	v
padString	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function strPad($input, $padLength, $padString = ' ', $padType = STR_PAD_RIGHT);$/;"	v
padStringLength	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $padStringLength = $this->strlen($padString);$/;"	v
padding	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^        $padding = strlen($data) % 4;$/;"	v
page	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$page = $paginator->getCurrentPage($total);$/;"	v
page	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$page = $paginator->getCurrentPage();$/;"	v
page	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$page = $paginator->getCurrentPage($total);$/;"	v
page	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$page = $paginator->getCurrentPage();$/;"	v
paged	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^                    $paged = $selectQuery["paged"];                     $/;"	v
pager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$pager = $this->query->paginate($perPage, $columns);$/;"	v
pager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$pager = $this->query->paginate($perPage, $columns);$/;"	v
paginate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function paginate($perPage = null, $columns = array('*'))$/;"	f
paginate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function paginate($perPage = null, $columns = array('*'))$/;"	f
paginate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	public function paginate($perPage = null, $columns = array('*'))$/;"	f
paginate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function paginate($perPage = 15, $columns = array('*'))$/;"	f
paginator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^			$this->paginator = call_user_func($this->paginator);$/;"	v
paginator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->paginator = $paginator;$/;"	v
paginator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $paginator;$/;"	v
paginator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$paginator = $this->query->getConnection()->getPaginator();$/;"	v
paginator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$paginator = $this->connection->getPaginator();$/;"	v
parameter	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^            $parameter = is_int($name) ? ($name + 1) : $name;$/;"	v
parameter	.\Source\application\library\Zend\Db\Sql\Expression.php	/^                        $parameter => isset($types[$i]) ? $types[$i] : self::TYPE_VALUE,$/;"	v
parameter	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	public function parameter($value)$/;"	f
parameter	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$parameter = $this->parameter($having['value']);$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^                $this->parameterContainer = $parameters;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^                $this->parameterContainer = new ParameterContainer();$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^        $this->parameterContainer = $parameterContainer;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    protected $parameterContainer = null;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^                $this->parameterContainer = $parameters;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^                $this->parameterContainer = new ParameterContainer();$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $this->parameterContainer = $parameterContainer;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    protected $parameterContainer = null;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                $this->parameterContainer = $parameters;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                $this->parameterContainer = new ParameterContainer();$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        $this->parameterContainer = $parameterContainer;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    protected $parameterContainer = null;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^                $this->parameterContainer = $parameters;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^                $this->parameterContainer = new ParameterContainer();$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^            $this->parameterContainer = clone $this->parameterContainer;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $this->parameterContainer = $parameterContainer;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    protected $parameterContainer = null;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^                $this->parameterContainer = $parameters;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^                $this->parameterContainer = new ParameterContainer();$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^        $this->parameterContainer = $parameterContainer;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    protected $parameterContainer;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^                $this->parameterContainer = $parameters;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^                $this->parameterContainer = new ParameterContainer();$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $this->parameterContainer = $parameterContainer;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    protected $parameterContainer = null;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\StatementContainer.php	/^        $this->parameterContainer = $parameterContainer;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\StatementContainer.php	/^        $this->parameterContainer = ($parameterContainer) ?: new ParameterContainer;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\StatementContainer.php	/^    protected $parameterContainer = null;$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Adapter\StatementContainer.php	/^    public function __construct($sql = null, ParameterContainer $parameterContainer = null)$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Sql\AbstractPreparableSql.php	/^            $parameterContainer = new ParameterContainer();$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Sql\AbstractPreparableSql.php	/^        $parameterContainer = $statementContainer->getParameterContainer();$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        ParameterContainer $parameterContainer = null$/;"	v
parameterContainer	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        ParameterContainer $parameterContainer = null,$/;"	v
parameterReferences	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    protected $parameterReferences = array();$/;"	v
parameterize	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	public function parameterize(array $values)$/;"	f
parameters	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $parameters = $driver;$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $parameters = $parametersOrQueryMode;$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $parameters = null;$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^        $parameters = array();$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^                $parameters = null;$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^                $parameters = null;$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $parameters = $this->parameterContainer->getNamedArray();$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                $parameters = null;$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        $parameters = $this->parameterContainer->getNamedArray();$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^                $parameters = null;$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $parameters = $this->parameterContainer->getNamedArray();$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^                $parameters = null;$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^            $parameters = $this->parameterContainer->getPositionalArray();$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^                $parameters = null;$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Exception\InvalidConnectionParametersException.php	/^        $this->parameters = $parameters;$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\Exception\InvalidConnectionParametersException.php	/^    protected $parameters;$/;"	v
parameters	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^            $parameters = $parameters->getNamedArray();$/;"	v
parameters	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $parameters = array($/;"	v
parameters	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $parameters = array();$/;"	v
parameters	.\Source\application\library\Zend\Db\Sql\Expression.php	/^                    $parameters => $types[0],$/;"	v
parameters	.\Source\application\library\Zend\Db\Sql\Expression.php	/^                $parameters = array($/;"	v
parameters	.\Source\application\library\Zend\Db\Sql\Expression.php	/^        $parameters = (is_scalar($this->parameters)) ? array($this->parameters) : $this->parameters;$/;"	v
parameters	.\Source\application\library\Zend\Db\Sql\Expression.php	/^        $this->parameters = $parameters;$/;"	v
parameters	.\Source\application\library\Zend\Db\Sql\Expression.php	/^    protected $parameters = array();$/;"	v
parameters	.\Source\application\library\Zend\Db\Sql\Expression.php	/^    public function __construct($expression = '', $parameters = null, array $types = array())$/;"	v
parameters	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^            $parameters = func_get_arg(1);$/;"	v
parameters	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^        \/\/ process deprecated parameters from previous literal($literal, $parameters = null) signature$/;"	v
parameters	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $parameters = $statement->getParameterContainer();$/;"	v
parameters	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$parameters = $this->keyParametersByArgument($/;"	v
parameters	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		return function($c, $parameters = array()) use ($abstract, $concrete)$/;"	v
parameters	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function build($concrete, $parameters = array())$/;"	v
parameters	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function make($abstract, $parameters = array())$/;"	v
parameters	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$parameters = $this->parameterize(reset($values));$/;"	v
parameters	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$parameters = implode(', ', $value);$/;"	v
parameters	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected function addColumn($type, $name, array $parameters = array())$/;"	v
parameters	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected function addCommand($name, array $parameters = array())$/;"	v
parameters	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected function createCommand($name, array $parameters = array())$/;"	v
parameters	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function action($name, $parameters = array())$/;"	v
parameters	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function route($name, $parameters = array(), $absolute = true, $route = null)$/;"	v
parameters	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function secure_url($path, $parameters = array())$/;"	v
parameters	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function trans($id, $parameters = array(), $domain = 'messages', $locale = null)$/;"	v
parameters	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function trans_choice($id, $number, array $parameters = array(), $domain = 'messages', $locale = null)$/;"	v
parameters	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function url($path = null, $parameters = array(), $secure = null)$/;"	v
parameters	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    private function collectMessage($locale, $domain, $id, $translation, $parameters = array(), $number = null)$/;"	v
parameters	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    public function trans($id, array $parameters = array(), $domain = null, $locale = null)$/;"	v
parameters	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    public function transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null)$/;"	v
parameters	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^    public function trans($id, array $parameters = array(), $domain = null, $locale = null)$/;"	v
parameters	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^    public function transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null)$/;"	v
parameters	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^    public function trans($id, array $parameters = array(), $domain = null, $locale = null)$/;"	v
parameters	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^    public function transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null)$/;"	v
parameters	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function trans($id, array $parameters = array(), $domain = null, $locale = null)$/;"	v
parameters	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null)$/;"	v
parameters	.\Source\application\library\vendor\symfony\translation\TranslatorInterface.php	/^    public function trans($id, array $parameters = array(), $domain = null, $locale = null);$/;"	v
parameters	.\Source\application\library\vendor\symfony\translation\TranslatorInterface.php	/^    public function transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null);$/;"	v
parametersBound	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $this->parametersBound = false;$/;"	v
parametersBound	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    protected $parametersBound = false;$/;"	v
parametersCount	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $parametersCount = count($parameters);$/;"	v
parametersCount	.\Source\application\library\Zend\Db\Sql\Expression.php	/^        $parametersCount = count($parameters);$/;"	v
parametersOrQueryMode	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function query($sql, $parametersOrQueryMode = self::QUERY_MODE_PREPARE, ResultSet\\ResultSetInterface $resultPrototype = null)$/;"	v
params	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^                    $params = array_merge($params, (array) $value);$/;"	v
params	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $params = array($/;"	v
params	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractTimestampColumn.php	/^        $params   = array();$/;"	v
params	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^        $params   = array();$/;"	v
params	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^        $this->params = $params;$/;"	v
params	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    protected $params = array();$/;"	v
params	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^                $params = array($key);$/;"	v
params	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^            $params = array($value);$/;"	v
parent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^		$this->parent = $parent;$/;"	v
parent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	protected $parent;$/;"	v
parent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^		$this->parent = $parent;$/;"	v
parent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	protected $parent;$/;"	v
parent	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    private $parent;$/;"	v
parentOfElem	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^            $parentOfElem = &$elem;$/;"	v
parentOfElem	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^        $parentOfElem = null;$/;"	v
parentTable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$parentTable = $this->parent->getTable();$/;"	v
parse	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^    public function parse($jwt)$/;"	f
parse	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function parse($time = null, $tz = null)$/;"	f
parseBasicSegments	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^	protected function parseBasicSegments(array $segments)$/;"	f
parseCallback	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function parseCallback($callback, $default)$/;"	f
parseClaims	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^    protected function parseClaims($data)$/;"	f
parseConfig	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	protected function parseConfig(array $config, $name)$/;"	f
parseConnectionName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	protected function parseConnectionName($name)$/;"	f
parseHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^    protected function parseHeader($data)$/;"	f
parseKey	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^	public function parseKey($key)$/;"	f
parseMustRaiseExceptionWhenHeaderCannotBeDecoded	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    public function parseMustRaiseExceptionWhenHeaderCannotBeDecoded()$/;"	f
parseMustRaiseExceptionWhenHeaderIsFromAnEncryptedToken	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    public function parseMustRaiseExceptionWhenHeaderIsFromAnEncryptedToken()$/;"	f
parseMustRaiseExceptionWhenJWSDontHaveThreeParts	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    public function parseMustRaiseExceptionWhenJWSDontHaveThreeParts()$/;"	f
parseMustRaiseExceptionWhenJWSIsNotAString	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    public function parseMustRaiseExceptionWhenJWSIsNotAString()$/;"	f
parseMustReturnANonSignedTokenWhenSignatureIsNotInformed	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    public function parseMustReturnANonSignedTokenWhenSignatureIsNotInformed()$/;"	f
parseMustReturnASignedTokenWhenSignatureIsInformed	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    public function parseMustReturnASignedTokenWhenSignatureIsInformed()$/;"	f
parseNamespacedSegments	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^	protected function parseNamespacedSegments($key)$/;"	f
parseNested	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function parseNested($name, $results)$/;"	f
parseNotesMetadata	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    private function parseNotesMetadata(\\SimpleXMLElement $noteElement = null, $encoding = null)$/;"	f
parseRelations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function parseRelations(array $relations)$/;"	f
parseShouldReplicateClaimValueOnHeaderWhenNeeded	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    public function parseShouldReplicateClaimValueOnHeaderWhenNeeded()$/;"	f
parseSignature	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^    protected function parseSignature(array $header, $data)$/;"	f
parseTrigger	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function parseTrigger($sql)$/;"	f
parseView	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function parseView($sql)$/;"	f
parsed	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^			$parsed = $this->parseBasicSegments($segments);$/;"	v
parsed	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^			$parsed = $this->parseNamespacedSegments($key);$/;"	v
parsed	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^	protected $parsed = array();$/;"	v
parser	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public function parser($path)$/;"	f
parser	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^        $this->parser = $parser ?: new KeyParser($this->adapter);$/;"	v
parser	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^    private $parser;$/;"	v
parser	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^        $parser = $this->createParser();$/;"	v
parser	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^        $this->parser = $this->getMock(KeyParser::class, [], [], '', false);$/;"	v
parser	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^    private $parser;$/;"	v
parser	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^        $parser = new KeyParser($this->adapter, $this->privateKeySerializer, $this->publicKeySerializer);$/;"	v
parserCanReadAToken	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^    public function parserCanReadAToken(Token $generated)$/;"	f
parserCanReadAToken	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^    public function parserCanReadAToken(Token $generated)$/;"	f
parserCanReadAToken	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^    public function parserCanReadAToken(Token $generated)$/;"	f
parserCanReadAToken	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^    public function parserCanReadAToken(Token $generated)$/;"	f
parserResult	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $parserResult = $this->parser($path);$/;"	v
parserToekn	.\Source\application\service\JwtAuth\JwtManager.php	/^	public function parserToekn($token)$/;"	f
parses	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^ * This class parses the JWT strings and convert them into tokens$/;"	c
part	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^				$part = array_shift($parts);$/;"	v
part	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_stristr($haystack, $needle, $part = false, $encoding = null)$/;"	v
part	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strrchr($haystack, $needle, $part = false, $encoding = null)$/;"	v
part	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strrichr($haystack, $needle, $part = false, $encoding = null)$/;"	v
part	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    public static function mb_strstr($haystack, $needle, $part = false, $encoding = null)$/;"	v
part	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_stristr($s, $needle, $part = false, $enc = null) { return p\\Mbstring::mb_stristr($s, $needle, $part, $enc); }$/;"	v
part	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strrchr($s, $needle, $part = false, $enc = null) { return p\\Mbstring::mb_strrchr($s, $needle, $part, $enc); }$/;"	v
part	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strrichr($s, $needle, $part = false, $enc = null) { return p\\Mbstring::mb_strrichr($s, $needle, $part, $enc); }$/;"	v
part	.\Source\application\library\vendor\symfony\polyfill-mbstring\bootstrap.php	/^    function mb_strstr($s, $needle, $part = false, $enc = null) { return p\\Mbstring::mb_strstr($s, $needle, $part, $enc); }$/;"	v
part	.\Source\application\library\vendor\symfony\translation\MessageSelector.php	/^            $part = trim($part);$/;"	v
partCounts	.\Source\application\library\Zend\Validator\DateStep.php	/^        $partCounts    = array_count_values($intervalParts);$/;"	v
parts	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^        $parts = preg_split($/;"	v
parts	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $parts = $expression->getExpressionData();$/;"	v
parts	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^            $parts = array_merge($parts, $predicate->getExpressionData());$/;"	v
parts	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^        $parts = array();$/;"	v
parts	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^			$parts = explode('.', $key);$/;"	v
parts	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^        $parts = array();$/;"	v
parts	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^                $parts = explode('\/', str_replace('\\\\', '\/', $tmpfile));$/;"	v
parts	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^        $parts = explode('\/', $newPath);$/;"	v
parts	.\Source\application\library\vendor\symfony\translation\MessageSelector.php	/^        $parts = explode('|', $message);$/;"	v
passphrase	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^        $this->passphrase = $passphrase;$/;"	v
passphrase	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^    private $passphrase;$/;"	v
passphrase	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^    public function __construct($content, $passphrase = null)$/;"	v
passphrase	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Keychain.php	/^    public function getPrivateKey($key, $passphrase = null)$/;"	v
passthru	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected $passthru = array($/;"	v
password	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $password     = $findParameterValue(array('password', 'pwd', 'PWD'));$/;"	v
password	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $password = $findParameterValue(array('password', 'passwd', 'pw'));$/;"	v
password	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $password = $findParameterValue(array('password'));$/;"	v
password	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                    $password = (string) $value;$/;"	v
password	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\Connector.php	/^		$password = array_get($config, 'password');$/;"	v
path	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $path = substr($path, 0, $pos);$/;"	v
path	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SQLiteConnector.php	/^		$path = realpath($config['database']);$/;"	v
path	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\BaseCommand.php	/^			$path = "\/workbench\/{$bench}\/src\/migrations";$/;"	v
path	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\BaseCommand.php	/^		$path = $this->input->getOption('path');$/;"	v
path	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^		$path = $this->getMigrationPath();$/;"	v
path	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^		$path = $this->getMigrationPath();$/;"	v
path	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^		$path = $this->getPath($name, $path);$/;"	v
path	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^		$path = $path ?: $this->guessPackagePath();$/;"	v
path	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^		$path = (new ReflectionClass($this))->getFileName();$/;"	v
path	.\Source\application\library\vendor\symfony\translation\Loader\IcuResFileLoader.php	/^    protected function flatten(\\ResourceBundle $rb, array &$messages = array(), $path = null)$/;"	v
pathSegments	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $this->pathSegments = $segments;$/;"	v
pathSegments	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    private $pathSegments = null;$/;"	v
paths	.\Source\application\library\Zend\Stdlib\Glob.php	/^                $paths = array_merge($paths, $result);$/;"	v
paths	.\Source\application\library\Zend\Stdlib\Glob.php	/^        $paths  = array();$/;"	v
pattern	.\Source\application\library\Zend\Validator\Isbn.php	/^                $pattern = "\/^[0-9]{1,7}[{$sep}]{1}[0-9]{1,7}[{$sep}]{1}[0-9]{1,7}[{$sep}]{1}[0-9X]{1}$\/";$/;"	v
pattern	.\Source\application\library\Zend\Validator\Isbn.php	/^                $pattern = "\/^[0-9]{1,9}[{$sep}]{1}[0-9]{1,5}[{$sep}]{1}[0-9]{1,9}[{$sep}]{1}[0-9]{1,9}[{$sep}]{1}[0-9]{1}$\/";$/;"	v
pattern	.\Source\application\library\Zend\Validator\Isbn.php	/^                $pattern = '\/^[0-9]{13}$\/';$/;"	v
pattern	.\Source\application\library\Zend\Validator\Isbn.php	/^                $pattern = '\/^[0-9]{9}[0-9X]{1}$\/';$/;"	v
pattern	.\Source\application\library\Zend\Validator\Isbn.php	/^        foreach ($patterns as $pattern => $type) {$/;"	v
pattern	.\Source\application\library\Zend\Validator\Regex.php	/^            $pattern = ArrayUtils::iteratorToArray($pattern);$/;"	v
pattern	.\Source\application\library\Zend\Validator\Regex.php	/^        $this->pattern = (string) $pattern;$/;"	v
pattern	.\Source\application\library\Zend\Validator\Regex.php	/^    protected $pattern;$/;"	v
pattern	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^		foreach ($source as $pattern => $inflected)$/;"	v
pattern	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^		$pattern = preg_quote($pattern, '#');$/;"	v
pattern	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^		$pattern = str_replace('\\*', '.*', $pattern).'\\z';$/;"	v
patterns	.\Source\application\library\Zend\Validator\Isbn.php	/^        $patterns = array();$/;"	v
payload	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^		if ( ! is_array($payload)) $payload = array($payload);$/;"	v
payload	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function fire($event, $payload = array(), $halt = false)$/;"	v
payload	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function queue($event, $payload = array())$/;"	v
payload	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function until($event, $payload = array())$/;"	v
payload	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^        $payload = [$/;"	v
payload	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^        $this->payload = $payload;$/;"	v
payload	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^        array $payload = ['', '']$/;"	v
payload	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    private $payload;$/;"	v
pdo	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^        $pdo = $this->driver->getConnection()->getResource();$/;"	v
pdo	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^        $pdo = $this->driver->getConnection()->getResource();$/;"	v
pdo	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $this->pdo = $connectionResource;$/;"	v
pdo	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    protected $pdo = null;$/;"	v
pdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->pdo = $pdo;$/;"	v
pdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $pdo;$/;"	v
pdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^		$pdo = $this->createConnector($config)->connect($config);$/;"	v
pdoDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                        $pdoDriver = str_replace(array('-', '_', ' '), '', $value);$/;"	v
pdoDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                        $pdoDriver = strtolower($pdoDriver);$/;"	v
pdoDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                        $pdoDriver = substr($pdoDriver, 3) ?: '';$/;"	v
pdoDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                    $pdoDriver = (string) $value;$/;"	v
pdoDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^            if (isset($charset) && $pdoDriver == 'pgsql') {$/;"	v
perPage	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$perPage = $perPage ?: $this->model->getPerPage();$/;"	v
perPage	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->perPage = $perPage;$/;"	v
perPage	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $perPage = 15;$/;"	v
perPage	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$perPage = $perPage ?: $this->model->getPerPage();$/;"	v
perPage	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function forPage($page, $perPage = 15)$/;"	v
performDeleteOnModel	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function performDeleteOnModel()$/;"	f
performDeleteOnModel	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	protected function performDeleteOnModel()$/;"	f
performInsert	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function performInsert(Builder $query, array $options = [])$/;"	f
performUpdate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function performUpdate(Builder $query, array $options = [])$/;"	f
performs	.\Source\application\library\vendor\symfony\translation\Catalogue\OperationInterface.php	/^ * An instance of this interface performs an operation on one or more catalogues and$/;"	i
period	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $period = new DatePeriod($start, $ci, $end);$/;"	v
periods	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^        $periods = array($/;"	v
permittedValues	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^                    $permittedValues = array($permittedValues);$/;"	v
permittedValues	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^                    $permittedValues = str_replace("''", "'", $matches[1]);$/;"	v
permittedValues	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^                $permittedValues = $matches[1];$/;"	v
pgsql	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^        $this->pgsql = $pgsql;$/;"	v
pgsql	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    protected $pgsql = null;$/;"	v
phpErrorCode	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^        $this->phpErrorCode    = $code;$/;"	v
phpErrorCode	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    protected $phpErrorCode    = false;$/;"	v
phpErrorMessage	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^        $this->phpErrorMessage = $message;$/;"	v
phpErrorMessage	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    protected $phpErrorMessage = false;$/;"	v
phpSaveHandler	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^        $phpSaveHandler = (string) $phpSaveHandler;$/;"	v
phpUnitVersion	.\Source\application\library\vendor\zendframework\zendxml\tests\Bootstrap.php	/^    $phpUnitVersion = PHPUnit_Runner_Version::id();$/;"	v
pivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^			$pivot = $this->newExistingPivot($this->cleanPivotAttributes($model));$/;"	v
pivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$pivot = $this->related->newPivot($this->parent, $attributes, $this->table, $exists);$/;"	v
pivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^		$pivot = new MorphPivot($this->parent, $attributes, $this->table, $exists);$/;"	v
pivotColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$this->pivotColumns = array_merge($this->pivotColumns, $columns);$/;"	v
pivotColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected $pivotColumns = array();$/;"	v
pivotWheres	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected $pivotWheres = [];$/;"	v
pkc	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^                $pkc = $constraint;$/;"	v
pkc	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^        $pkc = null;$/;"	v
pkck	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^            $pkck = $pkc->getColumns();$/;"	v
pkey	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^            foreach ($predicates as $pkey => $pvalue) {$/;"	v
platform	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $platform = $this->createPlatform($parameters);$/;"	v
platform	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^        $platform = $this->platform;$/;"	v
platform	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^        $this->platform = $platform;$/;"	v
platform	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    protected $platform = null;$/;"	v
platform	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function __construct($driver, Platform\\PlatformInterface $platform = null, ResultSet\\ResultSetInterface $queryResultPrototype = null, Profiler\\ProfilerInterface $profiler = null)$/;"	v
platform	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        $platform = $this->adapter->getPlatform();$/;"	v
platform	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^    protected function processColumns(PlatformInterface $platform = null)$/;"	v
platform	.\Source\application\library\Zend\Db\Sql\Sql.php	/^        $platform = ($platform) ?: $this->adapter->getPlatform();$/;"	v
platform	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function getSqlStringForSqlObject(SqlInterface $sqlObject, PlatformInterface $platform = null)$/;"	v
platform	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^        $platform = $this->tableGateway->adapter->getPlatform();$/;"	v
platform	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^        $platform = $this->tableGateway->getAdapter()->getPlatform();$/;"	v
platformName	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $platformName = $parameters['platform'];$/;"	v
platformName	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $platformName = $this->driver->getDatabasePlatformName(Driver\\DriverInterface::NAME_FORMAT_CAMELCASE);$/;"	v
platformName	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^        $platformName = $this->resolvePlatform($adapterOrPlatform)->getName();$/;"	v
platformName	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^        $platformName = $this->resolvePlatformName($adapterOrPlatform);$/;"	v
platformName	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^        $platformName = $this->resolvePlatformName($this->getDefaultPlatform());$/;"	v
platformName	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^        $platformName = $platform->getName();$/;"	v
pluck	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function pluck($column)$/;"	f
pluck	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function pluck($column)$/;"	f
pluck	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function pluck($array, $value, $key = null)$/;"	f
plugin	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function plugin($name, array $options = null)$/;"	f
pluginManager	.\Source\application\library\Zend\Validator\Explode.php	/^        $this->pluginManager = $pluginManager;$/;"	v
pluginManager	.\Source\application\library\Zend\Validator\Explode.php	/^    protected $pluginManager;$/;"	v
plugins	.\Source\application\library\Zend\Validator\StaticValidator.php	/^        $plugins = static::getPluginManager();$/;"	v
plugins	.\Source\application\library\Zend\Validator\StaticValidator.php	/^    protected static $plugins;$/;"	v
plugins	.\Source\application\library\Zend\Validator\StaticValidator.php	/^    public static function setPluginManager(ValidatorPluginManager $plugins = null)$/;"	v
plugins	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^        $plugins = $this->getPluginManager();$/;"	v
plugins	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^        $this->plugins = $plugins;$/;"	v
plugins	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    protected $plugins;$/;"	v
plural	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^		$plural = static::$plural;$/;"	v
plural	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^	public static $plural = array($/;"	v
plural	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^	public static function plural($value, $count = 2)$/;"	f
plural	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function plural($value, $count = 2)$/;"	f
plural	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^                    foreach ($item['translated'] as $plural => $translated) {$/;"	v
plural	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^                $plural = PluralizationRules::get($count, $langCode);$/;"	v
pluralCache	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^	protected static $pluralCache = array();$/;"	v
plurals	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^                    $plurals = array();$/;"	v
plurals	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^                $plurals = $item['translated'];$/;"	v
point	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^        $point = $this->getMock(PointInterface::class);$/;"	v
pool	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^		$pool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';$/;"	v
pop	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function pop()$/;"	f
populate	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function populate(array $rowData, $rowExistsInDatabase = false)$/;"	f
populateStub	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	protected function populateStub($name, $stub, $table)$/;"	f
port	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $port     = (isset($p['port'])) ? (int) $p['port'] : null;$/;"	v
port	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                    $port = (int) $value;$/;"	v
port	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SqlServerConnector.php	/^			$port = isset($config['port']) ? ':'.$port : '';$/;"	v
port	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\SqlServerConnector.php	/^		$port = isset($config['port']) ? ','.$port : '';$/;"	v
pos	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $pos = stripos($path, '?');$/;"	v
pos	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\GetFilter.php	/^            $pos = 0;$/;"	v
pos	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\GetFilter.php	/^        $pos = strpos($property, '::');$/;"	v
pos	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\HasFilter.php	/^            $pos = 0;$/;"	v
pos	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\HasFilter.php	/^        $pos = strpos($property, '::');$/;"	v
pos	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\IsFilter.php	/^            $pos = 0;$/;"	v
pos	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\IsFilter.php	/^        $pos = strpos($property, '::');$/;"	v
pos	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\MethodMatchFilter.php	/^            $pos = 0;$/;"	v
pos	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\MethodMatchFilter.php	/^        $pos = strpos($property, '::');$/;"	v
pos	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^        $pos        = 1;$/;"	v
pos	.\Source\application\library\Zend\Validator\Hostname.php	/^                $pos = (int) ($pos * (36 - $tag));$/;"	v
pos	.\Source\application\library\Zend\Validator\Hostname.php	/^            for ($oldIndex = $index, $pos = 1, $key = 36; 1; $key += 36) {$/;"	v
pos	.\Source\application\library\vendor\composer\ClassLoader.php	/^        if (false !== $pos = strrpos($class, '\\\\')) {$/;"	v
pos	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $pos = iconv_strrpos($haystack, $needle, $encoding);$/;"	v
pos	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $pos = self::mb_stripos($haystack, $needle, 0, $encoding);$/;"	v
pos	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $pos = self::mb_strripos($haystack, $needle, $encoding);$/;"	v
pos	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $pos = strpos($haystack, $needle);$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^        $this->position = 1;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    protected $position = 0;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^        $this->position = 0;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    protected $position = 0;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    protected $position = 0;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^        $this->position = 0;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    protected $position = -1;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^        $this->position = 0;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    protected $position = 0;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^        $this->position = 0;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    protected $position = -1;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $position = 0;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^                $position = $name;$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^            $position = array_key_exists($name, $this->data);$/;"	v
position	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^        $position = false;$/;"	v
position	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^        $this->position = 0;$/;"	v
position	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^        if (!is_array($this->buffer) || $this->position == $this->dataSource->key()) {$/;"	v
position	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    protected $position = 0;$/;"	v
position	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        foreach ($parameters as $position => $paramsForPosition) {$/;"	v
position	.\Source\application\library\vendor\symfony\translation\MessageSelector.php	/^        $position = PluralizationRules::get($number, $locale);$/;"	v
positionInUniqueConstraint	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^        $this->positionInUniqueConstraint = $positionInUniqueConstraint;$/;"	v
positionInUniqueConstraint	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    protected $positionInUniqueConstraint = null;$/;"	v
positions	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    protected $positions = array();$/;"	v
possibleBreak	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^                $possibleBreak = $this->substr($string, $current, $breakWidth);$/;"	v
possibleBreak	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^            $possibleBreak = $char;$/;"	v
postCreate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	protected $postCreate = array();$/;"	v
postDelete	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function postDelete(StatementInterface $statement, ResultInterface $result);$/;"	f
postDelete	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function postDelete(StatementInterface $statement, ResultInterface $result)$/;"	f
postInitialize	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function postInitialize();$/;"	f
postInitialize	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function postInitialize()$/;"	f
postInitialize	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^    public function postInitialize()$/;"	f
postInitialize	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^    public function postInitialize()$/;"	f
postInitialize	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^    public function postInitialize()$/;"	f
postInsert	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function postInsert(StatementInterface $statement, ResultInterface $result);$/;"	f
postInsert	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function postInsert(StatementInterface $statement, ResultInterface $result)$/;"	f
postInsert	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^    public function postInsert(StatementInterface $statement, ResultInterface $result)$/;"	f
postProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->postProcessor = $processor;$/;"	v
postProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->postProcessor = $this->getDefaultPostProcessor();$/;"	v
postProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $postProcessor;$/;"	v
postSelect	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function postSelect(StatementInterface $statement, ResultInterface $result, ResultSetInterface $resultSet);$/;"	f
postSelect	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function postSelect(StatementInterface $statement, ResultInterface $result, ResultSetInterface $resultSet)$/;"	f
postSelect	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^    public function postSelect()$/;"	f
postUpdate	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function postUpdate(StatementInterface $statement, ResultInterface $result);$/;"	f
postUpdate	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function postUpdate(StatementInterface $statement, ResultInterface $result)$/;"	f
postnet	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    protected function postnet($value)$/;"	f
ppCount	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^                    $ppCount = count($multiParamsForPosition);$/;"	v
ppCount	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^                $ppCount = count($paramsForPosition);$/;"	v
preDelete	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function preDelete(Delete $delete);$/;"	f
preDelete	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function preDelete(Delete $delete)$/;"	f
preInitialize	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function preInitialize();$/;"	f
preInitialize	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function preInitialize()$/;"	f
preInitialize	.\Source\application\library\Zend\Db\TableGateway\Feature\GlobalAdapterFeature.php	/^    public function preInitialize()$/;"	f
preInsert	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function preInsert(Insert $insert);$/;"	f
preInsert	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function preInsert(Insert $insert)$/;"	f
preInsert	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^    public function preInsert(Insert $insert)$/;"	f
preSelect	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function preSelect(Select $select);$/;"	f
preSelect	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function preSelect(Select $select)$/;"	f
preSelect	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^    public function preSelect()$/;"	f
preUpdate	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function preUpdate(Update $update);$/;"	f
preUpdate	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^    public function preUpdate(Update $update)$/;"	f
precision	.\Source\application\library\Zend\Validator\Step.php	/^        $precision = strlen($xFloatSegment) + strlen($yFloatSegment);$/;"	v
predicate	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^            $predicate = new Expression($literal, $parameters);$/;"	v
predicate	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^            $predicate = new Literal($literal);$/;"	v
predicate	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function predicate(PredicateInterface $predicate)$/;"	f
predicate	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^            $predicate = $this->predicates[$i][1];$/;"	v
predicateSet	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^        $predicateSet = new Predicate();$/;"	v
predicates	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^                        $predicates = new Expression($pkey, $pvalue);$/;"	v
predicates	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^                        $predicates = new In($pkey, $pvalue);$/;"	v
predicates	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^                        $predicates = new IsNull($pkey);$/;"	v
predicates	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^                        $predicates = new Operator($pkey, Operator::OP_EQ, $pvalue);$/;"	v
predicates	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^                    $predicates = $pvalue;$/;"	v
predicates	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^                    $predicates = (strpos($pvalue, Expression::PLACEHOLDER) !== false)$/;"	v
predicates	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^            $predicates = (strpos($predicates, Expression::PLACEHOLDER) !== false)$/;"	v
predicates	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    protected $predicates         = array();$/;"	v
predicates	.\Source\application\library\Zend\Db\Sql\Predicate\PredicateSet.php	/^    public function __construct(array $predicates = null, $defaultCombination = self::COMBINED_BY_AND)$/;"	v
prefix	.\Source\application\library\Zend\Db\Sql\Update.php	/^            $prefix = $platform->quoteIdentifier($column) . ' = ';$/;"	v
prefix	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $prefix = substr($method, 0, 3);$/;"	v
prefix	.\Source\application\library\vendor\composer\ClassLoader.php	/^            foreach ($this->prefixLengthsPsr4[$first] as $prefix => $length) {$/;"	v
prefix	.\Source\application\library\vendor\composer\ClassLoader.php	/^            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {$/;"	v
prefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^	protected function createConnection($driver, PDO $connection, $database, $prefix = '', array $config = array())$/;"	v
prefix	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^            $prefix = $generator('<' . '?xml');$/;"	v
prefixArray	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	public function prefixArray($prefix, array $values)$/;"	f
prefixColumnsWithTable	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $this->prefixColumnsWithTable = (bool) $prefixColumnsWithTable;$/;"	v
prefixColumnsWithTable	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $prefixColumnsWithTable = true;$/;"	v
prefixColumnsWithTable	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function columns(array $columns, $prefixColumnsWithTable = true)$/;"	v
prefixDirsPsr4	.\Source\application\library\vendor\composer\ClassLoader.php	/^    private $prefixDirsPsr4 = array();$/;"	v
prefixDirsPsr4	.\Source\application\library\vendor\composer\autoload_static.php	/^    public static $prefixDirsPsr4 = array ($/;"	v
prefixLengthsPsr4	.\Source\application\library\vendor\composer\ClassLoader.php	/^    private $prefixLengthsPsr4 = array();$/;"	v
prefixLengthsPsr4	.\Source\application\library\vendor\composer\autoload_static.php	/^    public static $prefixLengthsPsr4 = array ($/;"	v
prefixesPsr0	.\Source\application\library\vendor\composer\ClassLoader.php	/^    private $prefixesPsr0 = array();$/;"	v
prefixesPsr0	.\Source\application\library\vendor\composer\autoload_static.php	/^    public static $prefixesPsr0 = array ($/;"	v
preg_libraryNames	.\Source\application\init_autoloader.php	/^        $preg_libraryNames ="\/(^({$libraryNames}))\/";$/;"	v
preg_moduleNames	.\Source\application\init_autoloader.php	/^        $preg_moduleNames ="\/(^({$moduleNames}))\/";$/;"	v
preg_replace_sub	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function preg_replace_sub($pattern, &$replacements, $subject)$/;"	f
preg_resourceNames	.\Source\application\init_autoloader.php	/^        $preg_resourceNames ="\/(^({$resourceNames}))\/";$/;"	v
preg_serviceNames	.\Source\application\init_autoloader.php	/^    $preg_serviceNames ="\/(^({$serviceNames}))\/";$/;"	v
prepare	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function prepare($sql = null)$/;"	f
prepare	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function prepare($sql = null)$/;"	f
prepare	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function prepare($sql = null)$/;"	f
prepare	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function prepare($sql)$/;"	f
prepare	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function prepare($sql = null)$/;"	f
prepare	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    public function prepare($sql = null)$/;"	f
prepare	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function prepare($sql)$/;"	f
prepare	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function prepare($sql = null, array $options = array())$/;"	f
prepare	.\Source\application\library\Zend\Db\Adapter\Driver\StatementInterface.php	/^    public function prepare($sql = null);$/;"	f
prepare	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	protected function prepare(Connection $connection)$/;"	f
prepareBindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function prepareBindings(array $bindings)$/;"	f
prepareBindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function prepareBindings(array $bindings);$/;"	f
prepareDataHierarchy	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    protected function prepareDataHierarchy($type)$/;"	f
prepareDatabase	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^	protected function prepareDatabase()$/;"	f
prepareOptions	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $this->prepareOptions = $prepareOptions;$/;"	v
prepareOptions	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    protected $prepareOptions = array();$/;"	v
prepareParams	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $this->prepareParams = $prepareParams;$/;"	v
prepareParams	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    protected $prepareParams = array();$/;"	v
prepareResponse	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Contracts\ResponsePreparerInterface.php	/^	public function prepareResponse($value);$/;"	f
prepareStatement	.\Source\application\library\Zend\Db\Sql\AbstractPreparableSql.php	/^    public function prepareStatement(AdapterInterface $adapter, StatementContainerInterface $statementContainer)$/;"	f
prepareStatement	.\Source\application\library\Zend\Db\Sql\Platform\AbstractPlatform.php	/^    public function prepareStatement(AdapterInterface $adapter, StatementContainerInterface $statementContainer)$/;"	f
prepareStatement	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    public function prepareStatement(AdapterInterface $adapter, StatementContainerInterface $statementContainer)$/;"	f
prepareStatement	.\Source\application\library\Zend\Db\Sql\PreparableSqlInterface.php	/^    public function prepareStatement(AdapterInterface $adapter, StatementContainerInterface $statementContainer);$/;"	f
prepareStatementForSqlObject	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function prepareStatementForSqlObject(PreparableSqlInterface $sqlObject, StatementInterface $statement = null, AdapterInterface $adapter = null)$/;"	f
prepend	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function add($prefix, $paths, $prepend = false)$/;"	v
prepend	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function addPsr4($prefix, $paths, $prepend = false)$/;"	v
prepend	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function dot($array, $prepend = '')$/;"	v
prepend	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function prepend($value)$/;"	f
prepend	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function array_dot($array, $prepend = '')$/;"	v
prependByName	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function prependByName($name, $options = array(), $breakChainOnFailure = false)$/;"	f
prependValidator	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function prependValidator(ValidatorInterface $validator, $breakChainOnFailure = false)$/;"	f
preserveKeys	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function chunk($size, $preserveKeys = false)$/;"	v
preserveNumericKeys	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function merge(array $a, array $b, $preserveNumericKeys = false)$/;"	v
pretend	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function pretend(Closure $callback)$/;"	f
pretend	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function pretend(Closure $callback);$/;"	f
pretend	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateCommand.php	/^		$pretend = $this->input->getOption('pretend');$/;"	v
pretend	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\ResetCommand.php	/^		$pretend = $this->input->getOption('pretend');$/;"	v
pretend	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RollbackCommand.php	/^		$pretend = $this->input->getOption('pretend');$/;"	v
pretend	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function run($path, $pretend = false)$/;"	v
pretend	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function runMigrationList($migrations, $pretend = false)$/;"	v
pretendToRun	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	protected function pretendToRun($migration, $method)$/;"	f
pretending	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->pretending = false;$/;"	v
pretending	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->pretending = true;$/;"	v
pretending	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		return $this->pretending === true;$/;"	v
pretending	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $pretending = false;$/;"	v
pretending	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function pretending()$/;"	f
prevAutocommit	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $this->prevAutocommit = db2_autocommit($this->resource);$/;"	v
prevAutocommit	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    protected $prevAutocommit;$/;"	v
previous	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^		$this->previous = $previous;$/;"	v
previous	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function previous($dayOfWeek = null)$/;"	f
previousColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$previousColumns = $this->columns;$/;"	v
primary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function primary($columns, $name = null)$/;"	f
primary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$primary = $this->getCommandByName($blueprint, 'primary');$/;"	v
primaryKey	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^                $primaryKey = null;$/;"	v
primaryKey	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^            $primaryKey = null;$/;"	v
primaryKey	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $primaryKey = array();$/;"	v
primaryKey	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^            $primaryKey = $pkc->getColumns();$/;"	v
primaryKey	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^            $primaryKey = $pkck[0];$/;"	v
primaryKey	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^                $primaryKey = $args[0];$/;"	v
primaryKey	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^            $primaryKey = $metadata->sharedData['metadata']['primaryKey'];$/;"	v
primaryKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->primaryKey = $key;$/;"	v
primaryKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $primaryKey = 'id';$/;"	v
primaryKeyColumn	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^            $this->primaryKeyColumn = (array) $this->primaryKeyColumn;$/;"	v
primaryKeyColumn	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    protected $primaryKeyColumn = null;$/;"	v
primaryKeyColumn	.\Source\application\library\Zend\Db\RowGateway\RowGateway.php	/^        $this->primaryKeyColumn = empty($primaryKeyColumn) ? null : (array) $primaryKeyColumn;$/;"	v
primaryKeyData	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^                $this->primaryKeyData = array($this->primaryKeyColumn[0] => $primaryKeyValue);$/;"	v
primaryKeyData	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^            $this->primaryKeyData = null;$/;"	v
primaryKeyData	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^        $this->primaryKeyData = array();$/;"	v
primaryKeyData	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    protected $primaryKeyData = null;$/;"	v
primaryKeyField	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^        $this->primaryKeyField = $primaryKeyField;$/;"	v
primaryKeyField	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^    protected $primaryKeyField;$/;"	v
primitives	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function getDependencies($parameters, array $primitives = array())$/;"	v
priority	.\Source\application\library\Zend\Db\Sql\Update.php	/^        $priority = is_numeric($flag) ? $flag : 0;$/;"	v
priority	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\AggregateHydrator.php	/^    public function add(HydratorInterface $hydrator, $priority = self::DEFAULT_PRIORITY)$/;"	v
priority	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydratorListener.php	/^    public function attach(EventManagerInterface $events, $priority = 1)$/;"	v
priority	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function insert($name, $value, $priority = 0)$/;"	v
priority	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^        $priority = (int) $priority;$/;"	v
priority	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function insert($data, $priority = 1)$/;"	v
priority	.\Source\application\library\Zend\Stdlib\SplPriorityQueue.php	/^            $priority = array($priority, $this->serial--);$/;"	v
priority	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^            $priority = $extractedNode[0] + 1;$/;"	v
priority	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^        $priority = self::DEFAULT_PRIORITY$/;"	v
priority	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^        $priority = self::DEFAULT_PRIORITY;$/;"	v
priority	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function listen($events, $listener, $priority = 0)$/;"	v
privateKey	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^        $privateKey = $this->parser->getPrivateKey($key);$/;"	v
privateKey	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^        $privateKey = $this->getMock(PrivateKeyInterface::class);$/;"	v
privateKey	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^        $privateKey = $this->getMock(PrivateKeyInterface::class);$/;"	v
privateKeySerializer	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^        $this->privateKeySerializer = $privateKeySerializer ?: new PemPrivateKeySerializer(new DerPrivateKeySerializer($adapter));$/;"	v
privateKeySerializer	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^        PrivateKeySerializerInterface $privateKeySerializer = null,$/;"	v
privateKeySerializer	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^    private $privateKeySerializer;$/;"	v
privateKeySerializer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^        $this->privateKeySerializer = $this->getMock(PrivateKeySerializerInterface::class);$/;"	v
privateKeySerializer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^    private $privateKeySerializer;$/;"	v
processAddColumns	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected function processAddColumns(PlatformInterface $adapterPlatform = null)$/;"	f
processAddColumns	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^    protected function processAddColumns(PlatformInterface $adapterPlatform = null)$/;"	f
processAddConstraints	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected function processAddConstraints(PlatformInterface $adapterPlatform = null)$/;"	f
processChangeColumns	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected function processChangeColumns(PlatformInterface $adapterPlatform = null)$/;"	f
processChangeColumns	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^    protected function processChangeColumns(PlatformInterface $adapterPlatform = null)$/;"	f
processColumnListing	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\MySqlProcessor.php	/^	public function processColumnListing($results)$/;"	f
processColumnListing	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\PostgresProcessor.php	/^	public function processColumnListing($results)$/;"	f
processColumnListing	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\Processor.php	/^	public function processColumnListing($results)$/;"	f
processColumnListing	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\SQLiteProcessor.php	/^	public function processColumnListing($results)$/;"	f
processColumnListing	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\SqlServerProcessor.php	/^	public function processColumnListing($results)$/;"	f
processColumns	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected function processColumns(PlatformInterface $adapterPlatform = null)$/;"	f
processColumns	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^    protected function processColumns(PlatformInterface $platform = null)$/;"	f
processCombine	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processCombine(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processCombinedby	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected function processCombinedby(PlatformInterface $adapterPlatform = null)$/;"	f
processConstraints	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected function processConstraints(PlatformInterface $adapterPlatform = null)$/;"	f
processDelete	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    protected function processDelete(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processDomain	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^    abstract protected function processDomain($domain);$/;"	f
processDomain	.\Source\application\library\vendor\symfony\translation\Catalogue\MergeOperation.php	/^    protected function processDomain($domain)$/;"	f
processDomain	.\Source\application\library\vendor\symfony\translation\Catalogue\TargetOperation.php	/^    protected function processDomain($domain)$/;"	f
processDropColumns	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected function processDropColumns(PlatformInterface $adapterPlatform = null)$/;"	f
processDropConstraints	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected function processDropConstraints(PlatformInterface $adapterPlatform = null)$/;"	f
processExpression	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^    protected function processExpression($/;"	f
processGroup	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processGroup(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processHaving	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processHaving(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processInfo	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^    protected $processInfo = array('paramPrefix' => '', 'subselectCount' => 0);$/;"	v
processInfoContext	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            $processInfoContext = ($decorator instanceof PlatformDecoratorInterface) ? $subselect : $decorator;$/;"	v
processInsert	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    protected function processInsert(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processInsertGetId	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\PostgresProcessor.php	/^	public function processInsertGetId(Builder $query, $sql, $values, $sequence = null)$/;"	f
processInsertGetId	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\Processor.php	/^	public function processInsertGetId(Builder $query, $sql, $values, $sequence = null)$/;"	f
processInsertGetId	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\SqlServerProcessor.php	/^	public function processInsertGetId(Builder $query, $sql, $values, $sequence = null)$/;"	f
processJoins	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processJoins(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processLimit	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\SelectDecorator.php	/^    protected function processLimit(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processLimit	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processLimit(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processLimitOffset	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^    protected function processLimitOffset(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null, &$sqls, &$parameters)$/;"	f
processLimitOffset	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^    protected function processLimitOffset(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null, &$sqls, &$parameters)$/;"	f
processLimitOffset	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^    protected function processLimitOffset(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null, &$sqls, &$parameters)$/;"	f
processOffset	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\SelectDecorator.php	/^    protected function processOffset(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processOffset	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processOffset(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processOrder	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processOrder(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processPrimaryKeyData	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    protected function processPrimaryKeyData()$/;"	f
processSelect	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    protected function processSelect(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processSelect	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processSelect(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processSelect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\Processor.php	/^	public function processSelect(Builder $query, $results)$/;"	f
processStatementEnd	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected function processStatementEnd(PlatformInterface $adapterPlatform = null)$/;"	f
processStatementEnd	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processStatementEnd(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processStatementStart	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processStatementStart(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processSubSelect	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^    protected function processSubSelect($/;"	f
processTable	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected function processTable(PlatformInterface $adapterPlatform = null)$/;"	f
processTable	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected function processTable(PlatformInterface $adapterPlatform = null)$/;"	f
processTable	.\Source\application\library\Zend\Db\Sql\Ddl\DropTable.php	/^    protected function processTable(PlatformInterface $adapterPlatform = null)$/;"	f
processTable	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\Ddl\CreateTableDecorator.php	/^    protected function processTable(PlatformInterface $adapterPlatform = null)$/;"	f
processUpdate	.\Source\application\library\Zend\Db\Sql\Update.php	/^    protected function processUpdate(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processWhere	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    protected function processWhere(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processWhere	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function processWhere(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processWhere	.\Source\application\library\Zend\Db\Sql\Update.php	/^    protected function processWhere(PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
processor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$processor = $this->getPostProcessor();$/;"	v
processor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->processor = $processor;$/;"	v
processor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected $processor;$/;"	v
profileInformation	.\Source\application\library\Zend\Db\Adapter\Profiler\Profiler.php	/^        $profileInformation = array($/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^                $profiler = $this->createProfiler($parameters);$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $profiler = $parameters['profiler'];$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $profiler = ($parameters['profiler'] == true) ? new Profiler\\Profiler : null;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    protected $profiler = null;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    protected $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    protected $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    protected $profiler = null;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    protected $profiler = null;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    protected $profiler = null;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    protected $profiler = null;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    protected $profiler = null;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    protected $profiler = null;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    protected $profiler = null;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    protected $profiler = null;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    protected $profiler = null;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $this->profiler = $profiler;$/;"	v
profiler	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    protected $profiler = null;$/;"	v
profilerFinish	.\Source\application\library\Zend\Db\Adapter\Profiler\Profiler.php	/^    public function profilerFinish()$/;"	f
profilerFinish	.\Source\application\library\Zend\Db\Adapter\Profiler\ProfilerInterface.php	/^    public function profilerFinish();$/;"	f
profilerStart	.\Source\application\library\Zend\Db\Adapter\Profiler\Profiler.php	/^    public function profilerStart($target)$/;"	f
profilerStart	.\Source\application\library\Zend\Db\Adapter\Profiler\ProfilerInterface.php	/^    public function profilerStart($target);$/;"	f
profiles	.\Source\application\library\Zend\Db\Adapter\Profiler\Profiler.php	/^    protected $profiles = array();$/;"	v
progress	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$progress = array();$/;"	v
propagationIsStopped	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    public function propagationIsStopped()$/;"	f
properties	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^            $properties = array_fill_keys($/;"	v
properties	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^        $properties = & self::$skippedPropertiesCache[get_class($object)];$/;"	v
propertiesCache	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\OptionalParametersFilter.php	/^    protected static $propertiesCache = array();$/;"	v
property	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^                'The class property $' . $key . ' cannot be unset as'$/;"	c
property	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^        foreach ($data as $property => $value) {$/;"	v
property	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^            $property = $this->hydrateName($name, $data);$/;"	v
property	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$property = $this->unions ? 'unionLimit' : 'limit';$/;"	v
property	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$property = $this->unions ? 'unionOffset' : 'offset';$/;"	v
property	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$property = $this->unions ? 'unionOrders' : 'orders';$/;"	v
propertyFqn	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^            $propertyFqn = $objectClass . '::$' . $property;$/;"	v
propertyName	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^            $propertyName = $this->extractName($property->getName(), $object);$/;"	v
props	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $props = array($/;"	v
protectedProperties	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^        $this->protectedProperties = array_keys(get_object_vars($this));$/;"	v
protectedProperties	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    protected $protectedProperties;$/;"	v
provided	.\Source\application\library\Zend\Session\AbstractContainer.php	/^     * @throws Exception\\InvalidArgumentException if invalid manager default class provided$/;"	c
provided	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^            throw new Exception\\InvalidArgumentException('Invalid hash function provided');$/;"	f
provided	.\Source\application\library\Zend\Stdlib\Glob.php	/^     * Use the glob function provided by the system.$/;"	f
provided	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^     * internal queue class. The class provided should extend SplPriorityQueue.$/;"	c
provides	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	public function provides()$/;"	f
provides	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SeedServiceProvider.php	/^	public function provides()$/;"	f
provides	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	public function provides()$/;"	f
proxyHeader	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    protected static $proxyHeader = 'HTTP_X_FORWARDED_FOR';$/;"	v
publicKey	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^        $publicKey = $this->getMock(PublicKeyInterface::class);$/;"	v
publicKey	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^        $publicKey = $this->getMock(PublicKeyInterface::class);$/;"	v
publicKeySerializer	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^        $this->publicKeySerializer = $publicKeySerializer ?: new PemPublicKeySerializer(new DerPublicKeySerializer($adapter));$/;"	v
publicKeySerializer	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^        PublicKeySerializerInterface $publicKeySerializer = null$/;"	v
publicKeySerializer	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa\KeyParser.php	/^    private $publicKeySerializer;$/;"	v
publicKeySerializer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^        $this->publicKeySerializer = $this->getMock(PublicKeySerializerInterface::class);$/;"	v
publicKeySerializer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\KeyParserTest.php	/^    private $publicKeySerializer;$/;"	v
public_path	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function public_path($path = '')$/;"	f
pull	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function pull(&$array, $key, $default = null)$/;"	f
pull	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function pull($key, $default = null)$/;"	f
purge	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	public function purge($name = null)$/;"	f
push	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function push()$/;"	f
push	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function push($value)$/;"	f
put	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function put($key, $value)$/;"	f
put	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ViewErrorBag.php	/^	public function put($key, MessageBag $bag)$/;"	f
qtext	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $qtext      = '\\x20-\\x21\\x23-\\x5b\\x5d-\\x7e'; \/\/ %d32-33 \/ %d35-91 \/ %d93-126$/;"	v
quantifier	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $this->quantifier = null;$/;"	v
quantifier	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $quantifier = ($this->quantifier instanceof ExpressionInterface)$/;"	v
quantifier	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $this->quantifier = $quantifier;$/;"	v
quantifier	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $quantifier = null;$/;"	v
quantifier	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function quantifier($quantifier)$/;"	f
query	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function query($sql, $parametersOrQueryMode = self::QUERY_MODE_PREPARE, ResultSet\\ResultSetInterface $resultPrototype = null)$/;"	f
query	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $query = "SELECT sys_context('USERENV', 'CURRENT_SCHEMA') as \\"current_schema\\" FROM DUAL";$/;"	v
query	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    protected function query($value)$/;"	f
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$query = new Query\\Builder($this, $this->getQueryGrammar(), $processor);$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^			$query = $this->model->newQueryWithoutScopes();$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$query = $relation->getRelationCountQuery($relation->getRelated()->newQuery(), $this);$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$query = Relation::noConstraints(function() use ($relation)$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$this->query = $query;$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$this->query = clone $this->query;$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected $query;$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^			$query = $this->first()->newQuery()->with($relations);$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$query = $instance->newQuery();$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$query = $this->newQuery()->with($relations);$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$query = $this->newQuery();$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$query = $this->newQueryWithoutScopes();$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function query()$/;"	f
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$query = $query ?: $this->query;$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$query = $this->newPivotQuery();$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$query = $this->newPivotStatement();$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$query = $query ?: $this->query;$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	protected function setJoin(Builder $query = null)$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^		$query = parent::getRelationCountQuery($query, $parent);$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphPivot.php	/^		$query = $this->getDeleteQuery();$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^		$query = $instance->newQuery();$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^		$query = $this->useWithTrashed($query);$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^		$this->query = $this->useWithTrashed($this->query);$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^		$query = parent::getRelationCountQuery($query, $parent);$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^		$query = parent::newPivotQuery();$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^		$query = $this->newQuery()->where($this->foreignKey, $foreign);$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^		$this->query = $query;$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	protected $query;$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^		$query = $builder->getQuery();$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^		$query = $this->newQuery()->where($this->getKeyName(), $this->getKey());$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^		$query = $this->table()->where('batch', $this->getLastBatchNumber());$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^			call_user_func($query, $query = $this->newQuery());$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$query = $this->newQuery();$/;"	v
query	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		call_user_func($callback, $query = $this->newQuery());$/;"	v
queryGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->queryGrammar = $grammar;$/;"	v
queryGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->queryGrammar = $this->getDefaultQueryGrammar();$/;"	v
queryGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $queryGrammar;$/;"	v
queryLog	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->queryLog = array();$/;"	v
queryLog	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $queryLog = array();$/;"	v
queryResultSetPrototype	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^        $this->queryResultSetPrototype = ($queryResultPrototype) ?: new ResultSet\\ResultSet();$/;"	v
queryResultSetPrototype	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    protected $queryResultSetPrototype = null;$/;"	v
queue	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^                $queue = $this->getQueue();$/;"	v
queue	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^            $this->queue = clone $this->queue;$/;"	v
queue	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^            $this->queue = new $this->queueClass();$/;"	v
queue	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^            $this->queue = null;$/;"	v
queue	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^        $queue = $this->getQueue();$/;"	v
queue	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    protected $queue;$/;"	v
queue	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^            $queue = $this->validators->getIterator();$/;"	v
queue	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function queue($event, $payload = array())$/;"	f
queueClass	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^        $this->queueClass = (string) $class;$/;"	v
queueClass	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    protected $queueClass = 'Zend\\Stdlib\\SplPriorityQueue';$/;"	v
quickRandom	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function quickRandom($length = 16)$/;"	f
quote	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        $quote       = $generator('"');$/;"	v
quoteIdentifier	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    protected $quoteIdentifier = array('"', '"');$/;"	v
quoteIdentifier	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    public function quoteIdentifier($identifier)$/;"	f
quoteIdentifier	.\Source\application\library\Zend\Db\Adapter\Platform\Mysql.php	/^    protected $quoteIdentifier = array('`', '`');$/;"	v
quoteIdentifier	.\Source\application\library\Zend\Db\Adapter\Platform\PlatformInterface.php	/^    public function quoteIdentifier($identifier);$/;"	f
quoteIdentifier	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^    protected $quoteIdentifier = array('[',']');$/;"	v
quoteIdentifier	.\Source\application\library\Zend\Db\Adapter\Platform\Sqlite.php	/^    protected $quoteIdentifier = array('"','"');$/;"	v
quoteIdentifierChain	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    public function quoteIdentifierChain($identifierChain)$/;"	f
quoteIdentifierChain	.\Source\application\library\Zend\Db\Adapter\Platform\IbmDb2.php	/^    public function quoteIdentifierChain($identifierChain)$/;"	f
quoteIdentifierChain	.\Source\application\library\Zend\Db\Adapter\Platform\Mysql.php	/^    public function quoteIdentifierChain($identifierChain)$/;"	f
quoteIdentifierChain	.\Source\application\library\Zend\Db\Adapter\Platform\Oracle.php	/^    public function quoteIdentifierChain($identifierChain)$/;"	f
quoteIdentifierChain	.\Source\application\library\Zend\Db\Adapter\Platform\PlatformInterface.php	/^    public function quoteIdentifierChain($identifierChain);$/;"	f
quoteIdentifierChain	.\Source\application\library\Zend\Db\Adapter\Platform\Postgresql.php	/^    public function quoteIdentifierChain($identifierChain)$/;"	f
quoteIdentifierChain	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^    public function quoteIdentifierChain($identifierChain)$/;"	f
quoteIdentifierInFragment	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    public function quoteIdentifierInFragment($identifier, array $safeWords = array())$/;"	f
quoteIdentifierInFragment	.\Source\application\library\Zend\Db\Adapter\Platform\PlatformInterface.php	/^    public function quoteIdentifierInFragment($identifier, array $additionalSafeWords = array());$/;"	f
quoteIdentifierTo	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    protected $quoteIdentifierTo = '\\'';$/;"	v
quoteIdentifierTo	.\Source\application\library\Zend\Db\Adapter\Platform\Mysql.php	/^    protected $quoteIdentifierTo = '``';$/;"	v
quoteIdentifierTo	.\Source\application\library\Zend\Db\Adapter\Platform\Postgresql.php	/^    protected $quoteIdentifierTo = '""';$/;"	v
quoteIdentifierTo	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^    protected $quoteIdentifierTo = '\\\\';$/;"	v
quoteIdentifierTo	.\Source\application\library\Zend\Db\Adapter\Platform\Sqlite.php	/^    protected $quoteIdentifierTo = '\\'';$/;"	v
quoteIdentifiers	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    protected $quoteIdentifiers = true;$/;"	v
quoteIdentifiers	.\Source\application\library\Zend\Db\Adapter\Platform\IbmDb2.php	/^            $this->quoteIdentifiers = false;$/;"	v
quoteIdentifiers	.\Source\application\library\Zend\Db\Adapter\Platform\Oracle.php	/^            $this->quoteIdentifiers = false;$/;"	v
quotePos	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        $quotePos = strpos($xml, $quote, $encPos);$/;"	v
quoteTrustedValue	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    public function quoteTrustedValue($value)$/;"	f
quoteTrustedValue	.\Source\application\library\Zend\Db\Adapter\Platform\IbmDb2.php	/^    public function quoteTrustedValue($value)$/;"	f
quoteTrustedValue	.\Source\application\library\Zend\Db\Adapter\Platform\Mysql.php	/^    public function quoteTrustedValue($value)$/;"	f
quoteTrustedValue	.\Source\application\library\Zend\Db\Adapter\Platform\Oracle.php	/^    public function quoteTrustedValue($value)$/;"	f
quoteTrustedValue	.\Source\application\library\Zend\Db\Adapter\Platform\PlatformInterface.php	/^    public function quoteTrustedValue($value);$/;"	f
quoteTrustedValue	.\Source\application\library\Zend\Db\Adapter\Platform\Postgresql.php	/^    public function quoteTrustedValue($value)$/;"	f
quoteTrustedValue	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^    public function quoteTrustedValue($value)$/;"	f
quoteTrustedValue	.\Source\application\library\Zend\Db\Adapter\Platform\Sqlite.php	/^    public function quoteTrustedValue($value)$/;"	f
quoteValue	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    public function quoteValue($value)$/;"	f
quoteValue	.\Source\application\library\Zend\Db\Adapter\Platform\IbmDb2.php	/^    public function quoteValue($value)$/;"	f
quoteValue	.\Source\application\library\Zend\Db\Adapter\Platform\Mysql.php	/^    public function quoteValue($value)$/;"	f
quoteValue	.\Source\application\library\Zend\Db\Adapter\Platform\Oracle.php	/^    public function quoteValue($value)$/;"	f
quoteValue	.\Source\application\library\Zend\Db\Adapter\Platform\PlatformInterface.php	/^    public function quoteValue($value);$/;"	f
quoteValue	.\Source\application\library\Zend\Db\Adapter\Platform\Postgresql.php	/^    public function quoteValue($value)$/;"	f
quoteValue	.\Source\application\library\Zend\Db\Adapter\Platform\Sql92.php	/^    public function quoteValue($value)$/;"	f
quoteValue	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^    public function quoteValue($value)$/;"	f
quoteValue	.\Source\application\library\Zend\Db\Adapter\Platform\Sqlite.php	/^    public function quoteValue($value)$/;"	f
quoteValueList	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    public function quoteValueList($valueList)$/;"	f
quoteValueList	.\Source\application\library\Zend\Db\Adapter\Platform\PlatformInterface.php	/^    public function quoteValueList($valueList);$/;"	f
quoted	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^		$quoted = preg_quote($cap, '\/');$/;"	v
quotedPair	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $quotedPair = '\\x20-\\x7e'; \/\/ %d92 %d32-126$/;"	v
r	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $r = $result->fetch_row();$/;"	v
r	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $r = sqlsrv_fetch_array($result);$/;"	v
r	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^        $r = new ReflectionClass($class);$/;"	v
r	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\MySqlProcessor.php	/^		return array_map(function($r) { $r = (object) $r; return $r->column_name; }, $results);$/;"	v
r	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\PostgresProcessor.php	/^		return array_values(array_map(function($r) { $r = (object) $r; return $r->column_name; }, $results));$/;"	v
r	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\SQLiteProcessor.php	/^		return array_values(array_map(function($r) { $r = (object) $r; return $r->name; }, $results));$/;"	v
r	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $r = $this->getMock('Symfony\\Component\\Config\\Resource\\ResourceInterface');$/;"	v
r	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^        $r = new ReflectionMethod('ZendXml\\Security', 'heuristicScan');$/;"	v
r1	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^        $r1 = $this->getMock('Symfony\\Component\\Config\\Resource\\ResourceInterface');$/;"	v
ran	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$ran = $this->repository->getRan();$/;"	v
random	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function random($amount = 1)$/;"	f
random	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function random($length = 16)$/;"	f
randomGenerator	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^        $this->randomGenerator = $this->getMock(RandomNumberGeneratorInterface::class);$/;"	v
randomGenerator	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^    private $randomGenerator;$/;"	v
raw	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function raw($value)$/;"	f
raw	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function raw($value);$/;"	f
raw	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function raw($value)$/;"	f
rawState	.\Source\application\library\Zend\Db\Sql\Combine.php	/^        $rawState = array($/;"	v
rawState	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^        $rawState = array($/;"	v
rawState	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^        $rawState = array($/;"	v
rawState	.\Source\application\library\Zend\Db\Sql\Delete.php	/^        $rawState = array($/;"	v
rawState	.\Source\application\library\Zend\Db\Sql\Insert.php	/^        $rawState = array($/;"	v
rawState	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $rawState = array($/;"	v
rawState	.\Source\application\library\Zend\Db\Sql\Update.php	/^        $rawState = array($/;"	v
rawUpdate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function rawUpdate(array $attributes = array())$/;"	f
rb	.\Source\application\library\vendor\symfony\translation\Loader\IcuDatFileLoader.php	/^            $rb = new \\ResourceBundle($locale, $resource);$/;"	v
rb	.\Source\application\library\vendor\symfony\translation\Loader\IcuDatFileLoader.php	/^            $rb = null;$/;"	v
rb	.\Source\application\library\vendor\symfony\translation\Loader\IcuResFileLoader.php	/^            $rb = new \\ResourceBundle($locale, $resource);$/;"	v
rb	.\Source\application\library\vendor\symfony\translation\Loader\IcuResFileLoader.php	/^            $rb = null;$/;"	v
re	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^            $re = $identifier . '(?:\\\\s*,\\\\s*' . $identifier . ')*+';$/;"	v
re	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^            $re = $identifier . '(?:\\\\s*\\\\.\\\\s*' . $identifier . ')*+';$/;"	v
re	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^            $re = $this->buildRegularExpression(array($/;"	v
re	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^            $re = '(?:' . implode('|', array($/;"	v
re	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $re = '\/^' . implode('\\\\s*+', $re) . '$\/';$/;"	v
re	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        static $re = null;$/;"	v
read	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    public function read($id)$/;"	f
read	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^    public function read($id)$/;"	f
read	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^    public function read($id)$/;"	f
read	.\Source\application\library\Zend\Session\SaveHandler\SaveHandlerInterface.php	/^    public function read($id);$/;"	f
read	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^                        $read = 'A';$/;"	v
read	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^                        $read = 'B';$/;"	v
read	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^                    $read = 'A';$/;"	v
read	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^                    $read = 'B';$/;"	v
read	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^                    $read = 'C';$/;"	v
read	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^            $read  = $set;$/;"	v
read	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^        $read       = $set;$/;"	v
read	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^        $read = (new Parser())->parse((string) $generated);$/;"	v
read	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^        $read = (new Parser())->parse((string) $generated);$/;"	v
read	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^        $read = (new Parser())->parse((string) $generated);$/;"	v
read	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^        $read = (new Parser())->parse((string) $generated);$/;"	v
readConfig	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^		$readConfig = $this->getReadConfig($config);$/;"	v
readConfig	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^		$readConfig = $this->getReadWriteConfig($config, 'read');$/;"	v
readFile	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^    private function readFile($content)$/;"	f
readLong	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^    private function readLong($stream, $isBigEndian)$/;"	f
readOnly	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^        $readOnly = $this->getMetadata('_READONLY');$/;"	v
readOnly	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^        $readOnly = $this->getMetadata('_READONLY');$/;"	v
readPdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->readPdo = $pdo;$/;"	v
readPdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $readPdo;$/;"	v
readyForResponses	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Contracts\ResponsePreparerInterface.php	/^	public function readyForResponses();$/;"	f
realAttributeName	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^            $realAttributeName          = $this->extractName($attributeName, $object);$/;"	v
realName	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^                $realName = $row['CONSTRAINT_NAME'];$/;"	v
realName	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^        $realName = null;$/;"	v
rebinding	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function rebinding($abstract, Closure $callback)$/;"	f
rebound	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function rebound($abstract)$/;"	f
reboundCallbacks	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected $reboundCallbacks = array();$/;"	v
reconnect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function reconnect()$/;"	f
reconnect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	public function reconnect($name = null)$/;"	f
reconnectIfMissingConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected function reconnectIfMissingConnection()$/;"	f
reconnector	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->reconnector = $reconnector;$/;"	v
reconnector	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $reconnector;$/;"	v
record	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^			$record = $this->setTimestampsOnAttach($record);$/;"	v
record	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$record = $this->createAttachRecord($id, $timed);$/;"	v
record	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^		$record = parent::createAttachRecord($id, $timed);$/;"	v
record	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^		$record = array('migration' => $file, 'batch' => $batch);$/;"	v
records	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$records = $this->select($query, $bindings);$/;"	v
records	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$records = $this->formatSyncList($ids);$/;"	v
records	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$records = array();$/;"	v
recursive	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function iteratorToArray($iterator, $recursive = true)$/;"	v
recursive	.\Source\application\library\Zend\Validator\InArray.php	/^        $this->recursive = (bool) $recursive;$/;"	v
recursive	.\Source\application\library\Zend\Validator\InArray.php	/^    protected $recursive = false;$/;"	v
reduce	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function reduce(callable $callback, $initial = null)$/;"	f
referenceColumn	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^        $this->referenceColumn = (array) $referenceColumn;$/;"	v
referenceColumn	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    protected $referenceColumn = array();$/;"	v
referenceSpecification	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    protected $referenceSpecification = array($/;"	v
referenceTable	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^        $this->referenceTable = (string) $referenceTable;$/;"	v
referenceTable	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    protected $referenceTable = '';$/;"	v
referenceToElement	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^            $referenceToElement = $value;$/;"	v
referenceToElement	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^            $referenceToElement = &self::getElementByPath($tree, explode('.', $id));$/;"	v
referencedColumnName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^        $this->referencedColumnName = $referencedColumnName;$/;"	v
referencedColumnName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    protected $referencedColumnName = null;$/;"	v
referencedColumns	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^        $this->referencedColumns = $referencedColumns;$/;"	v
referencedColumns	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    protected $referencedColumns;$/;"	v
referencedTableName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^        $this->referencedTableName = $referencedTableName;$/;"	v
referencedTableName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    protected $referencedTableName = null;$/;"	v
referencedTableName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^        $this->referencedTableName = $referencedTableName;$/;"	v
referencedTableName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    protected $referencedTableName;$/;"	v
referencedTableSchema	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^        $this->referencedTableSchema = $referencedTableSchema;$/;"	v
referencedTableSchema	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    protected $referencedTableSchema = null;$/;"	v
referencedTableSchema	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^        $this->referencedTableSchema = $referencedTableSchema;$/;"	v
referencedTableSchema	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    protected $referencedTableSchema;$/;"	v
references	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $references = array();$/;"	v
reflClass	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^        $reflClass                      = new ReflectionClass($input);$/;"	v
reflProperties	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^        $reflProperties                 = $reflClass->getProperties();$/;"	v
reflProperties	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^        $reflProperties = self::getReflProperties($object);$/;"	v
reflProperties	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^    protected static $reflProperties = array();$/;"	v
reflection	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^            $reflection = new ReflectionClass($object);$/;"	v
reflectionMethod	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\NumberOfParameterFilter.php	/^            $reflectionMethod = new ReflectionMethod($property);$/;"	v
reflectionMethod	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\OptionalParametersFilter.php	/^            $reflectionMethod = new ReflectionMethod($property);$/;"	v
reflector	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$reflector = new ReflectionClass($concrete);$/;"	v
refresh	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function refresh($abstract, $target, $method)$/;"	f
refreshPdoConnections	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	protected function refreshPdoConnections($name)$/;"	f
refs	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^            $refs = array();$/;"	v
regenerateId	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function regenerateId();$/;"	f
regenerateId	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function regenerateId($deleteOldSession = true)$/;"	f
regex	.\Source\application\library\Zend\Validator\Ip.php	/^                static $regex = '\/^\\[(.*)\\]$\/';$/;"	v
regex	.\Source\application\library\Zend\Validator\Ip.php	/^        static $regex = '\/^v([[:xdigit:]]+)\\.[[:alnum:]\\-\\._~!\\$&\\'\\(\\)\\*\\+,;=:]+$\/';$/;"	v
regexChars	.\Source\application\library\Zend\Validator\Hostname.php	/^                    $regexChars = array(0 => '\/^[a-z0-9\\x2d]{1,63}$\/i');$/;"	v
regexKey	.\Source\application\library\Zend\Validator\Hostname.php	/^                        foreach ($regexChars as $regexKey => $regexChar) {$/;"	v
regexLocal	.\Source\application\library\Zend\Validator\Hostname.php	/^        $regexLocal = '\/^(([a-zA-Z0-9\\x2d]{1,63}\\x2e)*[a-zA-Z0-9\\x2d]{1,63}[\\x2e]{0,1}){1,254}$\/';$/;"	v
register	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function register($prepend = false)$/;"	f
register	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseServiceProvider.php	/^	public function register()$/;"	f
register	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	public function register()$/;"	f
register	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SeedServiceProvider.php	/^	public function register()$/;"	f
register	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\EventServiceProvider.php	/^	public function register()$/;"	f
register	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^	public static function register()$/;"	f
register	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	abstract public function register();$/;"	f
registerCallback	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    protected function registerCallback($callback)$/;"	f
registerCommands	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	protected function registerCommands()$/;"	f
registerConnection	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function registerConnection(Connection $connection)$/;"	f
registerConnection	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function registerConnection(Connection $connection)$/;"	f
registerConnection	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function registerConnection(Connection $connection)$/;"	f
registerConnection	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function registerConnection(Connection $connection)$/;"	f
registerConnection	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function registerConnection(Connection $connection)$/;"	f
registerConnection	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function registerConnection(Connection $connection)$/;"	f
registerCreator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	protected function registerCreator()$/;"	f
registerInstallCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	protected function registerInstallCommand()$/;"	f
registerMakeCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	protected function registerMakeCommand()$/;"	f
registerMigrateCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	protected function registerMigrateCommand()$/;"	f
registerMigrator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	protected function registerMigrator()$/;"	f
registerModelEvent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected static function registerModelEvent($event, $callback)$/;"	f
registerRefreshCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	protected function registerRefreshCommand()$/;"	f
registerRepository	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	protected function registerRepository()$/;"	f
registerResetCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	protected function registerResetCommand()$/;"	f
registerResultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function registerResultPrototype(Result $resultPrototype)$/;"	f
registerResultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function registerResultPrototype(Result $resultPrototype)$/;"	f
registerResultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function registerResultPrototype(Result $resultPrototype)$/;"	f
registerResultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function registerResultPrototype(Result $resultPrototype)$/;"	f
registerResultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function registerResultPrototype(Result $result)$/;"	f
registerResultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function registerResultPrototype(Result $resultPrototype)$/;"	f
registerRollbackCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^	protected function registerRollbackCommand()$/;"	f
registerSaveHandler	.\Source\application\library\Zend\Session\SessionManager.php	/^    protected function registerSaveHandler(SaveHandler\\SaveHandlerInterface $saveHandler)$/;"	f
registerSeedCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SeedServiceProvider.php	/^	protected function registerSeedCommand()$/;"	f
registerStatementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function registerStatementPrototype(Statement $statementPrototype)$/;"	f
registerStatementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function registerStatementPrototype(Statement $statementPrototype)$/;"	f
registerStatementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function registerStatementPrototype(Statement $statementPrototype)$/;"	f
registerStatementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function registerStatementPrototype(Statement $statementPrototype)$/;"	f
registerStatementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function registerStatementPrototype(Statement $statement)$/;"	f
registerStatementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function registerStatementPrototype(Statement $statementPrototype)$/;"	f
registerWrapper	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    public static function registerWrapper($wrapper)$/;"	f
registered	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^	protected static $registered = false;$/;"	v
reguard	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function reguard()$/;"	f
reject	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function reject($callback)$/;"	f
related	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$related = snake_case(class_basename($related));$/;"	v
related	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$related = $this->getRelated();$/;"	v
related	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^		$this->related = $query->getModel();$/;"	v
related	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	protected $related;$/;"	v
relatedUpdatedAt	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function relatedUpdatedAt()$/;"	f
relation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$relation = $this->getHasRelationQuery($relation);$/;"	v
relation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$relation = $this->getRelation($name);$/;"	v
relation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^				$relation = $value->toArray();$/;"	v
relation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^				$relation = $value;$/;"	v
relation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$relation = $caller['function'];$/;"	v
relation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$relation = $this->getBelongsToManyCaller();$/;"	v
relation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^		$this->relation = $relation;$/;"	v
relation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	protected $relation;$/;"	v
relationName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$this->relationName = $relationName;$/;"	v
relationName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected $relationName;$/;"	v
relationName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function __construct(Builder $query, Model $parent, $table, $foreignKey, $otherKey, $relationName = null)$/;"	v
relationName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	public function __construct(Builder $query, Model $parent, $name, $table, $foreignKey, $otherKey, $relationName = null, $inverse = false)$/;"	v
relationQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$relationQuery = $relation->getBaseQuery();$/;"	v
relations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$relations = explode('.', $relations);$/;"	v
relations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		if (is_string($relations)) $relations = func_get_args();$/;"	v
relations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^			if (is_string($relations)) $relations = func_get_args();$/;"	v
relations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$relations = $this->$camelKey();$/;"	v
relations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->relations = $relations;$/;"	v
relations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		if (is_string($relations)) $relations = func_get_args();$/;"	v
relations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $relations = array();$/;"	v
relationsToArray	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function relationsToArray()$/;"	f
relativeKeywords	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    protected static $relativeKeywords = array($/;"	v
relativePathTemplate	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^        $this->relativePathTemplate = $relativePathTemplate;$/;"	v
relativePathTemplate	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^    protected $relativePathTemplate = '%domain%.%locale%.%extension%';$/;"	v
relativePathTemplate	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^    protected $relativePathTemplate = '%domain%\/%locale%.%extension%';$/;"	v
release	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $release ="release";$/;"	v
release	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public function release()$/;"	f
releaseResult	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $releaseResult = $controllerClass->$release();$/;"	v
releaseResult	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $releaseResult = $moduleClass->$release();$/;"	v
releaseResult	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $releaseResult = $this->release();$/;"	v
releaseResult	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $releaseResult = null;$/;"	v
remember	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function remember($minutes, $key = null)$/;"	f
rememberForever	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function rememberForever($key = null)$/;"	f
rememberMe	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function rememberMe($ttl = null);$/;"	f
rememberMe	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function rememberMe($ttl = null)$/;"	f
rememberMeSeconds	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    protected $rememberMeSeconds = 1209600; \/\/ 2 weeks$/;"	v
rememberMeSeconds	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^            $this->rememberMeSeconds = $this->getStorageOption('remember_me_seconds');$/;"	v
rememberMeSeconds	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $rememberMeSeconds = (int) $rememberMeSeconds;$/;"	v
rememberMeSeconds	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $this->rememberMeSeconds = $rememberMeSeconds;$/;"	v
rememberMeSeconds	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    protected $rememberMeSeconds;$/;"	v
rememberToken	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function rememberToken()$/;"	f
remoteAddress	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^        $remoteAddress = new RemoteAddress();$/;"	v
remove	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function remove($name)$/;"	f
remove	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function remove($datum)$/;"	f
remove	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\ScopeInterface.php	/^	public function remove(Builder $builder);$/;"	f
remove	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingScope.php	/^	public function remove(Builder $builder)$/;"	f
removeColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function removeColumn($name)$/;"	f
removeDirectories	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ClassLoader.php	/^	public static function removeDirectories($directories = null)$/;"	f
removeFilter	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function removeFilter($name)$/;"	f
removeFilter	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    public function removeFilter($name)$/;"	f
removeFilter	.\Source\application\library\Zend\Stdlib\Hydrator\FilterEnabledInterface.php	/^    public function removeFilter($name);$/;"	f
removeFilter	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^    public function removeFilter($name)$/;"	f
removeGlobalScopes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function removeGlobalScopes($builder)$/;"	f
removeLeadingBoolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function removeLeadingBoolean($value)$/;"	f
removeNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function removeNamingStrategy()$/;"	f
removeNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    public function removeNamingStrategy()$/;"	f
removeNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategyEnabledInterface.php	/^    public function removeNamingStrategy();$/;"	f
removeObservableEvents	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function removeObservableEvents($observables)$/;"	f
removeStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function removeStrategy($name)$/;"	f
removeStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\StrategyEnabledInterface.php	/^    public function removeStrategy($name);$/;"	f
removeTableFromKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function removeTableFromKey($key)$/;"	f
rename	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function rename($to)$/;"	f
rename	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	public function rename($from, $to)$/;"	f
renameColumn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function renameColumn($from, $to)$/;"	f
render	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function render($data = null)$/;"	f
render	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Contracts\RenderableInterface.php	/^	public function render();$/;"	f
renderTable	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^    protected function renderTable($table, $alias = null)$/;"	f
renderTable	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^    protected function renderTable($table, $alias = null)$/;"	f
renderTable	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function renderTable($table, $alias = null)$/;"	f
repeatCount	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $repeatCount = floor($lengthOfPadding \/ $padStringLength);$/;"	v
repeatCountLeft	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^            $repeatCountLeft = $repeatCountRight = ($repeatCount - $repeatCount % 2) \/ 2;$/;"	v
replace	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^			$replace = array(':message', ':key');$/;"	v
replace	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^			$replace = '$1'.$delimiter.'$2';$/;"	v
replace	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function replace($messages, $domain = 'messages')$/;"	f
replace	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function replace($messages, $domain = 'messages');$/;"	f
replacement	.\Source\application\library\Zend\Stdlib\Hydrator\ArraySerializable.php	/^        $replacement = array();$/;"	v
replacementPattern	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $replacementPattern = '\/[^a-z0-9_]\/i';$/;"	v
replacements	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^            $replacements = $identifier;$/;"	v
replacements	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^        $replacements = array();$/;"	v
replicate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function replicate(array $except = null)$/;"	f
replicateAsHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setAudience($audience, $replicateAsHeader = false)$/;"	v
replicateAsHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setExpiration($expiration, $replicateAsHeader = false)$/;"	v
replicateAsHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setId($id, $replicateAsHeader = false)$/;"	v
replicateAsHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setIssuedAt($issuedAt, $replicateAsHeader = false)$/;"	v
replicateAsHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setIssuer($issuer, $replicateAsHeader = false)$/;"	v
replicateAsHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setNotBefore($notBefore, $replicateAsHeader = false)$/;"	v
replicateAsHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setSubject($subject, $replicateAsHeader = false)$/;"	v
repository	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\InstallCommand.php	/^		$this->repository = $repository;$/;"	v
repository	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\InstallCommand.php	/^	protected $repository;$/;"	v
repository	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^			$repository = $app['migration.repository'];$/;"	v
repository	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$this->repository = $repository;$/;"	v
repository	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	protected $repository;$/;"	v
repositoryExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	public function repositoryExists()$/;"	f
repositoryExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationRepositoryInterface.php	/^	public function repositoryExists();$/;"	f
repositoryExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function repositoryExists()$/;"	f
represents	.\Source\application\library\vendor\lcobucci\jwt\src\Signature.php	/^ * This class represents a token signature$/;"	c
request	.\Source\application\library\Zend\Stdlib\Message.php	/^        $request = '';$/;"	v
request_url	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $request_url = $_SERVER['REQUEST_URI'];$/;"	v
requireFiles	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function requireFiles($path, array $files)$/;"	f
requiredStepIterations	.\Source\application\library\Zend\Validator\DateStep.php	/^            $requiredStepIterations = ceil(($minSteps * $maximumInterval) \/ $maxInteger);$/;"	v
requiredStepIterations	.\Source\application\library\Zend\Validator\DateStep.php	/^        $requiredStepIterations = 1;$/;"	v
res	.\Source\application\library\Zend\Stdlib\Glob.php	/^        $res = glob($pattern, $globFlags);$/;"	v
res	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $res = $this->isReserved($hostname);$/;"	v
res	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac.php	/^        $res = 0;$/;"	v
res	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Hmac.php	/^        return $res === 0;$/;"	v
resOffset	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^        $resOffset = $this->getPosition($data);$/;"	v
reserved	.\Source\application\library\Zend\Validator\EmailAddress.php	/^                $reserved = false;$/;"	v
reserved	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $reserved     = true;$/;"	v
reset	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function reset($part)$/;"	f
resetCaches	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    private function resetCaches()$/;"	f
resetRegisteredWrappers	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    public static function resetRegisteredWrappers()$/;"	f
resetSession	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^                $resetSession = false;$/;"	v
resetSession	.\Source\application\library\Zend\Session\Storage\SessionStorage.php	/^        $resetSession = true;$/;"	v
resetToStringFormat	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function resetToStringFormat()$/;"	f
resolvable	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function resolvable($abstract)$/;"	f
resolve	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function resolve($file)$/;"	f
resolve	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Seeder.php	/^	protected function resolve($class)$/;"	f
resolveClass	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function resolveClass(ReflectionParameter $parameter)$/;"	f
resolveColumnValue	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^    protected function resolveColumnValue($/;"	f
resolveConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function resolveConnection($connection = null)$/;"	f
resolveConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function resolveConnection($connection)$/;"	f
resolveFacadeInstance	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	protected static function resolveFacadeInstance($name)$/;"	f
resolveNonClass	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected function resolveNonClass(ReflectionParameter $parameter)$/;"	f
resolvePlatform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    protected function resolvePlatform($adapterOrPlatform)$/;"	f
resolvePlatformName	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    protected function resolvePlatformName($adapterOrPlatform)$/;"	f
resolveSubscriber	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	protected function resolveSubscriber($subscriber)$/;"	f
resolveTable	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^    protected function resolveTable($/;"	f
resolveTable	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected function resolveTable($table, PlatformInterface $platform, DriverInterface $driver = null, ParameterContainer $parameterContainer = null)$/;"	f
resolved	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected $resolved = array();$/;"	v
resolved	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function resolved($abstract)$/;"	f
resolvedInstance	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	protected static $resolvedInstance;$/;"	v
resolver	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		$resolver = $this->bindings[$abstract]['concrete'];$/;"	v
resolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^		$this->resolver = $resolver;$/;"	v
resolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\SeedCommand.php	/^	protected $resolver;$/;"	v
resolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected static $resolver;$/;"	v
resolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^		$this->resolver = $resolver;$/;"	v
resolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	protected $resolver;$/;"	v
resolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^		$this->resolver = $resolver;$/;"	v
resolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	protected $resolver;$/;"	v
resolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^		$this->resolver = $resolver;$/;"	v
resolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	protected $resolver;$/;"	v
resolving	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function resolving($abstract, Closure $callback)$/;"	f
resolvingAny	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function resolvingAny(Closure $callback)$/;"	f
resolvingCallbacks	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	protected $resolvingCallbacks = array();$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^            $this->resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    protected $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^            $this->resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $this->resource = $connect($database, $username, $password, $options);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    protected $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^        $this->resource = db2_prepare($this->db2, $sql);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $this->resource = new \\mysqli();$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $this->resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $this->resource = $mysqliStatement;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $this->resource = $this->mysqli->prepare($sql);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^            $this->resource = oci_connect($username, $password, $connectionString, $characterSet, $sessionMode);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^            $this->resource = oci_new_connect($username, $password, $connectionString, $characterSet, $sessionMode);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^            $this->resource = oci_pconnect($username, $password, $connectionString, $characterSet, $sessionMode);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        $this->resource = $oci8Statement;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        $this->resource = oci_parse($this->oci8, $sql);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^            $this->resource = new \\PDO($dsn, $username, $password, $options);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $this->resource = $pdoStatement;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $this->resource = $this->pdo->prepare($sql);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $this->resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $this->resource = pg_connect($connection);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^        $this->resource = pg_prepare($this->pgsql, $this->statementName, $sql);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $this->resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $this->resource = sqlsrv_connect($serverName, $params);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^            $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $this->resource = $resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $this->resource = sqlsrv_prepare($this->sqlsrv, $sql, $pRef, $options);$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\Mysql.php	/^            $this->resource = $driver;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\Mysql.php	/^            $this->resource = $this->resource->getConnection()->getResource();$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\Mysql.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\Postgresql.php	/^            $this->resource = $driver;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\Postgresql.php	/^            $this->resource = $this->resource->getConnection()->getResource();$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\Postgresql.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^            $this->resource = $driver;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^            $this->resource = $this->resource->getConnection()->getResource();$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\Sqlite.php	/^            $resource = $resource->getConnection()->getResource();$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\Sqlite.php	/^            $this->resource = $driver;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\Sqlite.php	/^        $resource = $this->resource;$/;"	v
resource	.\Source\application\library\Zend\Db\Adapter\Platform\Sqlite.php	/^    protected $resource = null;$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php	/^        $resource = 'http:\/\/example.com\/resources.csv';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/empty.csv';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/not-exists.csv';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/resources.csv';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/resourcebundle\/dat\/resources';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuResFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/resourcebundle\/res';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/empty.ini';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/non-existing.ini';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/resources.ini';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/empty.json';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/malformed.json';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/non-existing.json';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/resources.json';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/empty-translation.mo';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/empty.mo';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/non-existing.mo';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/plurals.mo';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/resources.mo';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php	/^        $resource = 'http:\/\/example.com\/resources.php';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/non-existing.php';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/resources.php';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/empty-translation.po';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/empty.po';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/escaped-id-plurals.po';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/escaped-id.po';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/fuzzy-translations.po';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/non-existing.po';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/plurals.po';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/resources.po';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^        $resource = 'http:\/\/domain1.com\/resources.ts';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/empty.xlf';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/invalid-xml-resources.xlf';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/non-existing.ts';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/resources.ts';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $resource = 'http:\/\/example.com\/resources.xlf';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/empty.xlf';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/non-existing.xlf';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/resources-2.0.xlf';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/resources.xlf';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^        $resource = 'http:\/\/example.com\/resources.yml';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/empty.yml';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/non-existing.yml';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/non-valid.yml';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^        $resource = __DIR__.'\/..\/fixtures\/resources.yml';$/;"	v
resource	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $resource = $this->getMock('Symfony\\Component\\Config\\Resource\\SelfCheckingResourceInterface');$/;"	v
resourceNames	.\Source\application\init_autoloader.php	/^        $resourceNames = null;$/;"	v
resourceNames	.\Source\application\init_autoloader.php	/^        $resourceNames = str_replace(",", "|", $CONFIG['application']['library']);$/;"	v
resourceNames	.\Source\application\init_autoloader.php	/^        $resourceNames = str_replace(",", "|", $CONFIG['application']['resource']);$/;"	v
resourceNames	.\Source\application\init_autoloader.php	/^    $resourceNames=str_replace(",", "|", $CONFIG['application']['resource']);$/;"	v
resourceType	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $resourceType = get_resource_type($resource);$/;"	v
resources	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    private $resources = array();$/;"	v
resources	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    protected function getCatalogue($locale, $messages, $resources = array())$/;"	v
resources	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $resources = $translator->getCatalogue('en')->getResources();$/;"	v
resources	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $resources = $translator->getCatalogue('en_GB')->getResources();$/;"	v
resources	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private $resources = array();$/;"	v
response	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^        $response = db2_execute($this->resource, $this->parameterContainer->getPositionalArray());$/;"	v
response	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^            $response = call_user_func_array($callback, $params);$/;"	v
response	.\Source\application\library\Zend\Stdlib\DispatchableInterface.php	/^    public function dispatch(RequestInterface $request, ResponseInterface $response = null);$/;"	v
response	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^			$response = call_user_func_array($listener, $payload);$/;"	v
response	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^		$response = new BinaryFileResponse($file, 200, $headers, true, $disposition);$/;"	v
responses	.\Source\application\library\Zend\Session\SessionManager.php	/^        $responses = $validator->trigger('session.validate', $this, array($this), function ($test) {$/;"	v
responses	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^		$responses = array();$/;"	v
rest	.\Source\application\library\Zend\Stdlib\Glob.php	/^            $rest = static::nextBraceSub($pattern, $rest + 1, $flags);$/;"	v
rest	.\Source\application\library\Zend\Stdlib\Glob.php	/^        $rest = $next;$/;"	v
restore	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	public function restore()$/;"	f
restoreFieldsForCount	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function restoreFieldsForCount()$/;"	f
restored	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	public static function restored($callback)$/;"	f
restoring	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	public static function restoring($callback)$/;"	f
result	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^                $result = $this->insert($insertQuery);$/;"	v
result	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^        $result = $this->select($selectQuery);$/;"	v
result	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^        $result=$this->insert($insertQuery);        $/;"	v
result	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^        $result=array($/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^                $result = $this->lastPreparedStatement->execute();$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $result = $this->driver->getConnection()->execute($sql);$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^        $result = clone $this->resultPrototype;$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^        $result = $this->driver->createResult($this->resource);$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $result = $this->resource->query('SELECT DATABASE()');$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^        $result = clone $this->resultPrototype;$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $result = $this->driver->createResult($this->resource, $buffered);$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^        $result = clone $this->resultPrototype;$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        $result = $this->driver->createResult($this->resource);$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $result = $this->driver->createResult($resultResource, $sql);$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $result = $this->resource->query($sql);$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^        $result = $countStmt->execute();$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^        $result = $pdo->query($countSql);$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^        $result = $countStmt->execute();$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^        $result = $pdo->query($countSql);$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^        $result = clone $this->resultPrototype;$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $result = $this->driver->createResult($this->resource, $this);$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $result = pg_query($this->resource, 'SELECT CURRENT_SCHEMA AS "currentschema"');$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $result = pg_query($this->resource, 'SELECT CURRVAL(\\'' . str_replace('\\'', '\\\\\\'', $name) . '\\') as "currval"');$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^        $result = clone $this->resultPrototype;$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^        $result = $this->driver->createResult($resultResource);$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $result = $this->driver->createResult($returnValue);$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $result = sqlsrv_query($this->resource, $sql);$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $result = sqlsrv_query($this->resource, 'SELECT SCHEMA_NAME()');$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^        $result = clone $this->resultPrototype;$/;"	v
result	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $result = $this->driver->createResult($this->resource);$/;"	v
result	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $result = $this->adapter->query($sql)->execute($parameters);$/;"	v
result	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $result = $this->adapter->query('SELECT TABLE_NAME FROM ALL_TABLES WHERE OWNER=:OWNER')->execute($bind);$/;"	v
result	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $result = $this->adapter->query('SELECT VIEW_NAME, TEXT FROM ALL_VIEWS WHERE OWNER=:OWNER', $bind);$/;"	v
result	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^            $result = $statement->execute();$/;"	v
result	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^        $result = $statement->execute();$/;"	v
result	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $result = $statement->execute();$/;"	v
result	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^        $result = $statement->execute();$/;"	v
result	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^        $result = ini_set($key, (string) $storageValue);$/;"	v
result	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^        $result = $this->mongoCollection->remove(array($/;"	v
result	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^        $result = $this->mongoCollection->update($criteria, $newObj, $saveOptions);$/;"	v
result	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^            $result = $this->validateStringCallbackFor54($callback);$/;"	v
result	.\Source\application\library\Zend\Stdlib\Glob.php	/^            $result = static::fallbackGlob($subPattern, $flags | self::GLOB_BRACE);$/;"	v
result	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^        $result = array();$/;"	v
result	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $result    = '';$/;"	v
result	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $result = $this->abstractOptions['messageVariables'][$property];$/;"	v
result	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $result = $this->{$this->messageVariables[$property]};$/;"	v
result	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^        $result = $this->abstractOptions;$/;"	v
result	.\Source\application\library\Zend\Validator\Barcode.php	/^            $result = $adapter->hasValidChecksum($value);$/;"	v
result	.\Source\application\library\Zend\Validator\Barcode.php	/^        $result                  = $adapter->hasValidLength($value);$/;"	v
result	.\Source\application\library\Zend\Validator\Barcode.php	/^        $result = $adapter->hasValidCharacters($value);$/;"	v
result	.\Source\application\library\Zend\Validator\Barcode\Codabar.php	/^        $result = parent::hasValidCharacters($value);$/;"	v
result	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $result = $statement->execute();$/;"	v
result	.\Source\application\library\Zend\Validator\Db\NoRecordExists.php	/^        $result = $this->query($value);$/;"	v
result	.\Source\application\library\Zend\Validator\Db\RecordExists.php	/^        $result = $this->query($value);$/;"	v
result	.\Source\application\library\Zend\Validator\EmailAddress.php	/^                $result = true;$/;"	v
result	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $result = false;$/;"	v
result	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $result = gethostbynamel($this->hostname);$/;"	v
result	.\Source\application\library\Zend\Validator\EmailAddress.php	/^            $result = true;$/;"	v
result	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $result = false;$/;"	v
result	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $result = getmxrr($this->idnToAscii($this->hostname), $mxHosts, $weight);$/;"	v
result	.\Source\application\library\Zend\Validator\Ip.php	/^        $result = (bool) preg_match($regex, $value, $matches);$/;"	v
result	.\Source\application\library\Zend\Validator\Sitemap\Lastmod.php	/^        $result = preg_match(self::LASTMOD_REGEX, $value);$/;"	v
result	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^            $result         = false;$/;"	v
result	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^        $result         = true;$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^			$result = $callback($this);$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^			$result = $callback($this, $query, $bindings);$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^			$result = $this->runQueryCallback($query, $bindings, $callback);$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^			$result = $this->tryAgainIfCausedByLostConnection($/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$result = $this->first(array($column));$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$result = call_user_func_array(array($this->query, $method), $parameters);$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^		$result = call_user_func_array(array($this->query, $method), $parameters);$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^		$result = $this->save();$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^			$result = array_change_key_case((array) $results[0]);$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$result = $this->aggregate(__FUNCTION__, array($column));$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$result = $this->limit(1)->count() > 0;$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$result = (array) $this->first(array($column));$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\PostgresProcessor.php	/^		$result = (array) $results[0];$/;"	v
result	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SqlServerConnection.php	/^			$result = $callback($this);$/;"	v
result	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^		$result = static::inflect($value, $plural, $irregular);$/;"	v
result	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^		$result = static::inflect($value, static::$singular, static::$irregular);$/;"	v
result	.\Source\application\library\vendor\symfony\polyfill-mbstring\Resources\unidata\lowerCase.php	/^$result =& $data;$/;"	v
result	.\Source\application\library\vendor\symfony\polyfill-mbstring\Resources\unidata\upperCase.php	/^$result =& $data;$/;"	v
result	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^        $this->result = new MessageCatalogue($source->getLocale());$/;"	v
result	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^    protected $result;$/;"	v
result	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^        $result = array();$/;"	v
result	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^        $result = current($result);$/;"	v
result	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^        $result = unpack($isBigEndian ? 'N1' : 'V1', fread($stream, 4));$/;"	v
result	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^            $result = simplexml_import_dom($dom);$/;"	v
result	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        $result = $dom->loadXml($xml, LIBXML_NONET);$/;"	v
result	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^            $result = $this->invokeHeuristicScan($xml);$/;"	v
result	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^            $result = XmlSecurity::scan($xml);$/;"	v
result	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^        $result = XmlSecurity::scan($this->getXml());$/;"	v
result	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^        $result = XmlSecurity::scan($this->getXml(), $dom);$/;"	v
result	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^        $result = XmlSecurity::scan($xml);$/;"	v
result	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^        $result = XmlSecurity::scan($xml, $dom);$/;"	v
result	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^        $result = XmlSecurity::scanFile($file);$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^        $this->resultPrototype = $resultPrototype;$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    protected $resultPrototype;$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $resultPrototype = $this->driver->createResult(($resultResource === true) ? $this->resource : $resultResource);$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^        $this->resultPrototype = $resultPrototype;$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    protected $resultPrototype = null;$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $resultPrototype = $this->driver->createResult($ociStmt);$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^        $this->resultPrototype = $resultPrototype;$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    protected $resultPrototype = null;$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^        $this->resultPrototype = $resultPrototype;$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    protected $resultPrototype = null;$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $resultPrototype = $this->driver->createResult(($resultResource === true) ? $this->resource : $resultResource);$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^        $this->resultPrototype = $result;$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    protected $resultPrototype = null;$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^        $this->resultPrototype = $resultPrototype;$/;"	v
resultPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    protected $resultPrototype = null;$/;"	v
resultResource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $resultResource = db2_exec($this->resource, $sql);$/;"	v
resultResource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $resultResource = $this->resource->query($sql);$/;"	v
resultResource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^            $resultResource = $this->resource->result_metadata();$/;"	v
resultResource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $resultResource = $this->resource->query($sql);$/;"	v
resultResource	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $resultResource = pg_query($this->resource, $sql);$/;"	v
resultResource	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^        $resultResource = pg_execute($this->pgsql, $this->statementName, (array) $parameters);$/;"	v
resultSet	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^            $resultSet = clone ($resultPrototype ?: $this->queryResultSetPrototype);$/;"	v
resultSet	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $resultSet = clone $this->resultSetPrototype;$/;"	v
resultSetPrototype	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^            $this->resultSetPrototype = new ResultSet;$/;"	v
resultSetPrototype	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $this->resultSetPrototype = (isset($this->resultSetPrototype)) ? clone $this->resultSetPrototype : null;$/;"	v
resultSetPrototype	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    protected $resultSetPrototype = null;$/;"	v
resultSetPrototype	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^        $resultSetPrototype = $this->tableGateway->resultSetPrototype;$/;"	v
resultSetPrototype	.\Source\application\library\Zend\Db\TableGateway\TableGateway.php	/^        $this->resultSetPrototype = ($resultSetPrototype) ?: new ResultSet;$/;"	v
resultValue	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $resultValue = sqlsrv_execute($this->resource);$/;"	v
results	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^        $results = $this->adapter->query($sql, Adapter::QUERY_MODE_EXECUTE);$/;"	v
results	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $results = $this->adapter->query($sql)->execute($parameters);$/;"	v
results	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $results = $this->adapter->query($sql, Adapter::QUERY_MODE_EXECUTE);$/;"	v
results	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        $results = $this->adapter->query($sql, Adapter::QUERY_MODE_EXECUTE);$/;"	v
results	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        $results = $this->adapter->query($sql, Adapter::QUERY_MODE_EXECUTE);$/;"	v
results	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $results = $this->adapter->query($sql, Adapter::QUERY_MODE_EXECUTE);$/;"	v
results	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $results = $this->fetchPragma('database_list');$/;"	v
results	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $results = $this->fetchPragma('table_info', $table, $schema);$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^			$results = $this->forPage($page, $count)->get();$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^			$results = $this->parseNested($name, $results);$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$results = $relation->getEager();$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$results = $this->forPage($page = 1, $count)->get();$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$results = $this->get($columns)->all();$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$results = $this->query->get($columns);$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$results = $this->query->lists($column, $key);$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$results = array();$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$results = $query->delete();$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$results = $this->take(1)->get($columns);$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$results = array();$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^		$results = call_user_func($callback);$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^			$results = $this->forPage($page, $count)->get();$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$results = $this->forPage($page = 1, $count)->get();$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$results = $this->forPage($page, $perPage)->get($columns);$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$results = $this->get($columns);$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$results = $this->take(1)->get($columns);$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$results = new Collection($this->get($columns));$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\PostgresProcessor.php	/^		$results = $query->getConnection()->selectFromWriteConnection($sql, $values);$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^		$results = $this->connection->select($this->grammar->compileColumnExists($table));$/;"	v
results	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\MySqlBuilder.php	/^		$results = $this->connection->select($sql, array($database, $table));$/;"	v
results	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^				$results = array_merge($results, static::dot($value, $prepend.$key.'.'));$/;"	v
results	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^			$results = array();$/;"	v
results	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^		$results = array();$/;"	v
results	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^			$results = array_merge($results, $values);$/;"	v
results	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^		$results = [];$/;"	v
results	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^		$results = array();$/;"	v
results	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^		$results = [];$/;"	v
results	.\Source\application\module\Index\Controller\IndexController.php	/^        $results = Capsule::select('select * from users where id = ?', array(1));        $/;"	v
ret	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^            $ret = @oci_execute($this->resource, OCI_COMMIT_ON_SUCCESS);$/;"	v
ret	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^            $ret = @oci_execute($this->resource, OCI_NO_AUTO_COMMIT);$/;"	v
ret	.\Source\application\library\Zend\Session\Container.php	/^        $ret = null;$/;"	v
ret	.\Source\application\library\Zend\Session\Container.php	/^        $ret =& $storage[$name][$key];$/;"	v
ret	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^            $ret =& $this->offsetGet($key);$/;"	v
ret	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^        $ret = null;$/;"	v
ret	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^        $ret =& $this->storage[$key];$/;"	v
return	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $return = $this->resource->execute();$/;"	v
return	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^        $return = array();$/;"	v
return	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^        $return = array();$/;"	v
return	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^                $return = call_user_func_array(array($feature, $method), $args);$/;"	v
return	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^        $return = null;$/;"	v
return	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $return = $result->getAffectedRows();$/;"	v
return	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^                $return = call_user_func_array(array($feature, $method), $args);$/;"	v
return	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^        $return = null;$/;"	v
return	.\Source\application\library\Zend\Validator\File\Upload.php	/^            $return = array();$/;"	v
return	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^		$return = array();$/;"	v
return	.\Source\application\library\vendor\symfony\translation\PluralizationRules.php	/^            $return = call_user_func(self::$rules[$locale], $number);$/;"	v
returnType	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^        $this->returnType = (in_array($returnType, array(self::TYPE_ARRAY, self::TYPE_ARRAYOBJECT))) ? $returnType : self::TYPE_ARRAYOBJECT;$/;"	v
returnType	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^    protected $returnType = self::TYPE_ARRAYOBJECT;$/;"	v
returnValue	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $returnValue = sqlsrv_query($this->resource, $sql);$/;"	v
returnValue	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^                    $returnValue = true;$/;"	v
returnValue	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^            $returnValue = false;$/;"	v
returnValue	.\Source\application\library\Zend\Stdlib\Hydrator\Filter\FilterComposite.php	/^            $returnValue = true;$/;"	v
return_data	.\Source\application\module\Index\Controller\PassportController.php	/^    protected $return_data = [];$/;"	v
returns	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^     * Magic function returns the value of the requested property, if and only if it is the value or a$/;"	f
reverse	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\MapNamingStrategy.php	/^        $this->reverse = $reverse ?: $this->flipMapping($mapping);$/;"	v
reverse	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\MapNamingStrategy.php	/^    protected $reverse = array();$/;"	v
reverse	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\MapNamingStrategy.php	/^    public function __construct(array $mapping, array $reverse = null)$/;"	v
reverse	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    public function convert($str, $reverse = false)$/;"	v
reverse	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^    public function convert($str, $reverse = false)$/;"	v
reverse	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^    public function convert($str, $reverse = false)$/;"	v
reverse	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function convert($str, $reverse = false);$/;"	v
reverse	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function reverse()$/;"	f
rewind	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function rewind()$/;"	f
rewind	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function rewind()$/;"	f
rewind	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function rewind()$/;"	f
rewind	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function rewind()$/;"	f
rewind	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function rewind()$/;"	f
rewind	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function rewind()$/;"	f
rewind	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function rewind()$/;"	f
rewind	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    public function rewind()$/;"	f
rewind	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function rewind()$/;"	f
right	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^            $right = $this->normalizeArgument($right, $this->rightType);$/;"	v
right	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^        $right = null,$/;"	v
right	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^        $this->right = $right;$/;"	v
right	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    protected $right;$/;"	v
rightCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php	/^        $rightCatalogue = new MessageCatalogue('en', array('messages' => array('b' => 'new_b', 'c' => 'new_c')));$/;"	v
rightCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php	/^        $rightCatalogue = new MessageCatalogue('en', array('messages' => array('b' => 'new_b', 'c' => 'new_c')));$/;"	v
rightJoin	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function rightJoin($table, $first, $operator = null, $second = null)$/;"	f
rightJoinWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function rightJoinWhere($table, $one, $operator, $two)$/;"	f
rightNumber	.\Source\application\library\vendor\symfony\translation\Interval.php	/^            $rightNumber = self::convertNumber($matches['right']);$/;"	v
rightType	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^            $this->rightType = $right[1];$/;"	v
rightType	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^        $rightType = self::TYPE_VALUE$/;"	v
rightType	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^        $this->rightType = $type;$/;"	v
rightType	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    protected $rightType = self::TYPE_VALUE;$/;"	v
rollBack	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function rollBack()$/;"	f
rollBack	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function rollBack();$/;"	f
rollback	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public function rollback()$/;"	f
rollback	.\Source\application\library\Zend\Db\Adapter\Driver\ConnectionInterface.php	/^    public function rollback();$/;"	f
rollback	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    public function rollback()$/;"	f
rollback	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    public function rollback()$/;"	f
rollback	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    public function rollback()$/;"	f
rollback	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function rollback()$/;"	f
rollback	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    public function rollback()$/;"	f
rollback	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function rollback()$/;"	f
rollback	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function rollback($pretend = false)$/;"	f
root	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^        $root = pack('V7',$/;"	v
route	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function route($name, $parameters = array(), $absolute = true, $route = null)$/;"	f
router	.\Source\application\library\Alpaca\MVC\Application.php	/^        $this->router = Router::router();$/;"	v
router	.\Source\application\library\Alpaca\MVC\Application.php	/^    public $router;$/;"	v
router	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public static function router()$/;"	f
row	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $row = sqlsrv_fetch_array($result);$/;"	v
row	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^            $row = array_change_key_case($row, CASE_LOWER);$/;"	v
row	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^            $row = array_change_key_case($row, CASE_LOWER);$/;"	v
row	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^            $row = array_change_key_case($row, CASE_LOWER);$/;"	v
row	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^        $row = $dataSource->current();$/;"	v
row	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^        $row = (array) $row;$/;"	v
rowCount	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^            $rowCount = $oracleRowCounter->getRowCountClosure($context);$/;"	v
rowCount	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^            $rowCount = $sqliteRowCounter->getRowCountClosure($context);$/;"	v
rowCount	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^        $rowCount = null;$/;"	v
rowCount	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^            $this->rowCount = (int) $this->resource->rowCount();$/;"	v
rowCount	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^            $this->rowCount = (int) call_user_func($this->rowCount);$/;"	v
rowCount	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^        $this->rowCount = $rowCount;$/;"	v
rowCount	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    protected $rowCount = null;$/;"	v
rowCount	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function initialize(PDOStatement $resource, $generatedValue, $rowCount = null)$/;"	v
rowData	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^        $rowData = $result->current();$/;"	v
rowExistsInDatabase	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function populate(array $rowData, $rowExistsInDatabase = false)$/;"	v
rowExistsInDatabase	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function rowExistsInDatabase()$/;"	f
rowGateway	.\Source\application\library\Zend\Db\RowGateway\Feature\AbstractFeature.php	/^        $this->rowGateway = $rowGateway;$/;"	v
rowGateway	.\Source\application\library\Zend\Db\RowGateway\Feature\AbstractFeature.php	/^    protected $rowGateway = null;$/;"	v
rowGateway	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^        $this->rowGateway = $rowGateway;$/;"	v
rowGateway	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    protected $rowGateway = null;$/;"	v
rowGatewayPrototype	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^                $rowGatewayPrototype = $args[0];$/;"	v
rowGatewayPrototype	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^                $rowGatewayPrototype = new RowGateway($primaryKey, $this->tableGateway->table, $this->tableGateway->adapter);$/;"	v
rowGatewayPrototype	.\Source\application\library\Zend\Db\TableGateway\Feature\RowGatewayFeature.php	/^            $rowGatewayPrototype = new RowGateway($primaryKey, $this->tableGateway->table, $this->tableGateway->adapter);$/;"	v
rowchkvalue	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^        $rowchkvalue = array_keys($this->rows, $rowvalue);$/;"	v
rows	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^        $rows = $this->tableGateway->select(array($/;"	v
rows	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^    protected $rows = array($/;"	v
rowsAffected	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^            $rowsAffected = $result->getAffectedRows();$/;"	v
rowset	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^            $rowset = $this->tableGateway->select(function (Select $select) use($selectQuery, &$sqlStr)$/;"	v
rowset	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^            $rowset=$this->tableGateway->select(function (Select $select) use($selectQuery)$/;"	v
rowvalue	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^        $rowvalue = 0;$/;"	v
royalmail	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^    protected function royalmail($value)$/;"	f
rsaKeys	.\Source\application\library\vendor\lcobucci\jwt\test\functional\Keys.php	/^    protected static $rsaKeys;$/;"	v
rules	.\Source\application\library\vendor\symfony\translation\PluralizationRules.php	/^    private static $rules = array();$/;"	v
run	.\Source\application\library\Alpaca\MVC\Application.php	/^    public function run()$/;"	f
run	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected function run($query, $bindings, Closure $callback)$/;"	f
run	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function run($path, $pretend = false)$/;"	f
run	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Seeder.php	/^	public function run() {}$/;"	f
runDown	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	protected function runDown($migration, $pretend)$/;"	f
runForDebugAndProduction	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    public function runForDebugAndProduction()$/;"	f
runMigrationList	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function runMigrationList($migrations, $pretend = false)$/;"	f
runQueryCallback	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected function runQueryCallback($query, $bindings, Closure $callback)$/;"	f
runSeeder	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\RefreshCommand.php	/^	protected function runSeeder($database)$/;"	f
runSelect	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function runSelect()$/;"	f
runSoftDelete	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	protected function runSoftDelete()$/;"	f
runUp	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	protected function runUp($file, $batch, $pretend)$/;"	f
runtimeExpressionPrefix	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        static $runtimeExpressionPrefix = 0;$/;"	v
s	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->s = $val;$/;"	v
s	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                        $s = substr_replace($s, $uchr, $i - $ulen, $ulen);$/;"	v
s	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                    $s = str_replace(self::$caseFold[0], self::$caseFold[1], $s);$/;"	v
s	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $s = iconv($fromEncoding, 'UTF-8', $s);$/;"	v
s	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $s = base64_decode($s);$/;"	v
s	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $s = html_entity_decode($s, ENT_COMPAT, 'UTF-8');$/;"	v
s	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $s = iconv($encoding, 'UTF-8', $s);$/;"	v
s	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $s = preg_replace_callback('\/\\B[\\p{Lu}\\p{Lt}]+\/u', array(__CLASS__, 'title_case_lower'), $s);$/;"	v
s	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $s = preg_replace_callback('\/\\b\\p{Ll}\/u', array(__CLASS__, 'title_case_upper'), $s);$/;"	v
s	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $s = preg_replace('\/[\\x{1100}-\\x{115F}\\x{2329}\\x{232A}\\x{2E80}-\\x{303E}\\x{3040}-\\x{A4CF}\\x{AC00}-\\x{D7A3}\\x{F900}-\\x{FAFF}\\x{FE10}-\\x{FE19}\\x{FE30}-\\x{FE6F}\\x{FF00}-\\x{FF60}\\x{FFE0}-\\x{FFE6}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}]\/u', '', $s, -1, $wide);$/;"	v
s	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $s = $segment->appendChild($dom->createElement('source'));$/;"	v
s	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $s = $translation->appendChild($dom->createElement('source'));$/;"	v
safeCreateDateTimeZone	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    protected static function safeCreateDateTimeZone($object)$/;"	f
safeMode	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $safeMode = ini_get('safe_mode');$/;"	v
safeMode	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            if (!($safeMode == 'On' || $safeMode === 1)) {$/;"	v
safeWords	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^    public function quoteIdentifierInFragment($identifier, array $safeWords = array())$/;"	v
safeWordsInt	.\Source\application\library\Zend\Db\Adapter\Platform\AbstractPlatform.php	/^        $safeWordsInt = array('*' => true, ' ' => true, '.' => true, 'as' => true);$/;"	v
salt	.\Source\application\library\Zend\Validator\Csrf.php	/^        $this->salt = (string) $salt;$/;"	v
salt	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected $salt = 'salt';$/;"	v
sanitizeCollectedMessages	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    private function sanitizeCollectedMessages($messages)$/;"	f
sanitizeString	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    private function sanitizeString($string, $length = 80)$/;"	f
save	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function save()$/;"	f
save	.\Source\application\library\Zend\Db\RowGateway\RowGatewayInterface.php	/^    public function save();$/;"	f
save	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function save(array $options = array())$/;"	f
save	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function save(Model $model, array $joining = array(), $touch = true)$/;"	f
save	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function save(Model $model)$/;"	f
save	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	public function save(Model $model)$/;"	f
saveHandler	.\Source\application\library\Zend\Session\AbstractManager.php	/^            $this->saveHandler = $saveHandler;$/;"	v
saveHandler	.\Source\application\library\Zend\Session\AbstractManager.php	/^        $this->saveHandler = $saveHandler;$/;"	v
saveHandler	.\Source\application\library\Zend\Session\AbstractManager.php	/^        SaveHandler $saveHandler = null,$/;"	v
saveHandler	.\Source\application\library\Zend\Session\AbstractManager.php	/^    protected $saveHandler;$/;"	v
saveHandler	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^            $saveHandler = $services->get('Zend\\Session\\SaveHandler\\SaveHandlerInterface');$/;"	v
saveHandler	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^        $saveHandler   = null;$/;"	v
saveHandler	.\Source\application\library\Zend\Session\SessionManager.php	/^        $saveHandler = $this->getSaveHandler();$/;"	v
saveHandler	.\Source\application\library\Zend\Session\SessionManager.php	/^        SaveHandler\\SaveHandlerInterface $saveHandler = null,$/;"	v
saveMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function saveMany(array $models, array $joinings = array())$/;"	f
saveMany	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function saveMany(array $models)$/;"	f
saveOptions	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^        $saveOptions = array_replace($/;"	v
saveOptions	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^            $this->saveOptions = array('safe' => true);$/;"	v
saveOptions	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^        $this->saveOptions = $saveOptions;$/;"	v
saveOptions	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    protected $saveOptions = array('w' => 1);$/;"	v
savePath	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^        $this->savePath = $savePath;$/;"	v
savePath	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^            $this->savePath = $this->getStorageOption('save_path');$/;"	v
savePath	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $this->savePath = $savePath;$/;"	v
savePath	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    protected $savePath;$/;"	v
saved	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$saved = $this->performInsert($query, $options);$/;"	v
saved	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$saved = $this->performUpdate($query, $options);$/;"	v
saved	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function saved($callback)$/;"	f
saving	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function saving($callback)$/;"	f
scan	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    public static function scan($xml, DOMDocument $dom = null)$/;"	f
scanFile	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    public static function scanFile($file, DOMDocument $dom = null)$/;"	f
schema	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getColumn($columnName, $table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getColumnNames($table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getColumns($table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getConstraint($constraintName, $table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getConstraintKeys($constraint, $table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getConstraints($table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getTable($tableName, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getTrigger($triggerName, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    public function getView($viewName, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getColumn($columnName, $table, $schema = null);$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getColumnNames($table, $schema = null);$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getColumns($table, $schema = null);$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getConstraint($constraintName, $table, $schema = null);$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getConstraintKeys($constraint, $table, $schema = null);$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getConstraints($table, $schema = null);$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getTable($tableName, $schema = null);$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getTrigger($triggerName, $schema = null);$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\MetadataInterface.php	/^    public function getView($viewName, $schema = null);$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^            $schema = $this->defaultSchema;$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getColumn($columnName, $table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getColumnNames($table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getColumns($table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getConstraint($constraintName, $table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getConstraintKeys($constraint, $table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getConstraints($table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getTable($tableName, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getTrigger($triggerName, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^    public function getView($viewName, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $schema = null;$/;"	v
schema	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^            $this->schema = (string) $schema;$/;"	v
schema	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^            $this->schema = null;$/;"	v
schema	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^        $this->schema = $schema;$/;"	v
schema	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^    protected $schema;$/;"	v
schema	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^    public function __construct($table, $schema = null)$/;"	v
schema	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $this->schema = $schema;$/;"	v
schema	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    protected $schema = null;$/;"	v
schema	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public static function schema($connection = null)$/;"	f
schema	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$schema = $this->getDoctrineSchemaManager();$/;"	v
schema	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\PostgresConnector.php	/^			$schema = $config['schema'];$/;"	v
schema	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^		$schema = $this->getConnection()->getSchemaBuilder();$/;"	v
schema	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$schema = $connection->getDoctrineSchemaManager();$/;"	v
schema	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$schema = $connection->getDoctrineSchemaManager();$/;"	v
schemaGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->schemaGrammar = $grammar;$/;"	v
schemaGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->schemaGrammar = $this->getDefaultSchemaGrammar();$/;"	v
schemaGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $schemaGrammar;$/;"	v
schemaName	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    protected $schemaName = null;$/;"	v
schemaName	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        $this->schemaName = $schemaName;$/;"	v
schemaName	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $schemaName = null;$/;"	v
schemaName	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function __construct($name, $tableName, $schemaName = null)$/;"	v
schemaName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^        $this->schemaName = $schemaName;$/;"	v
schemaName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    protected $schemaName = null;$/;"	v
schemaName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function __construct($name, $tableName, $schemaName = null)$/;"	v
schemaSource	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $schemaSource = file_get_contents(__DIR__.'\/schema\/dic\/xliff-core\/xliff-core-1.2-strict.xsd');$/;"	v
schemaSource	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $schemaSource = file_get_contents(__DIR__.'\/schema\/dic\/xliff-core\/xliff-core-2.0.xsd');$/;"	v
schemas	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^        $schemas = array();$/;"	v
schemas	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $schemas = array();$/;"	v
schemas	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        $schemas = array();$/;"	v
schemas	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        $schemas = array();$/;"	v
scope	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		elseif (method_exists($this->model, $scope = 'scope'.ucfirst($method)))$/;"	v
search	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function search($value, $strict = false)$/;"	f
second	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^     *  - an array f.e. Validator(array($first => 'first', $second => 'second', $third => 'third'))$/;"	v
second	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$second = $clause['where'] ? '?' : $this->wrap($clause['second']);$/;"	v
second	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $second = $second === null ? 0 : $second;$/;"	v
second	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $second = $second === null ? date('s') : $second;$/;"	v
second	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $second = isset($time[2]) ? $time[2] : 0;$/;"	v
second	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $this->second = $value;$/;"	v
second	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function second($value)$/;"	f
second	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function setDateTime($year, $month, $day, $hour, $minute, $second = 0)$/;"	v
secondKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$secondKey = $secondKey ?: $through->getForeignKey();$/;"	v
secondKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$this->secondKey = $secondKey;$/;"	v
secondKey	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	protected $secondKey;$/;"	v
seconds	.\Source\application\library\Zend\Validator\DateStep.php	/^                            $seconds = ($diffParts['hours'] * 60 * 60)$/;"	v
seconds	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->seconds = $arg;$/;"	v
seconds	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^            $this->seconds = $this->seconds + $interval->s * $sign;$/;"	v
secondsSinceMidnight	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function secondsSinceMidnight()$/;"	f
secondsUntilEndOfDay	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function secondsUntilEndOfDay()$/;"	f
secure	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function asset($path, $secure = null)$/;"	v
secure_asset	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function secure_asset($path)$/;"	f
secure_url	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function secure_url($path, $parameters = array())$/;"	f
segment	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $segment = $translation->appendChild($dom->createElement('segment'));$/;"	v
segments	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $segments = array();$/;"	v
segments	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $segments = explode('\/', $path);$/;"	v
segments	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^		$segments = explode('.', $this->getForeignKey());$/;"	v
segments	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^			$segments = explode(' ', $value);$/;"	v
segments	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^		$segments = explode('.', $value);$/;"	v
segments	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$segments = preg_split('\/(And|Or)(?=[A-Z])\/', $finder, -1, PREG_SPLIT_DELIM_CAPTURE);$/;"	v
segments	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^			$segments = explode('@', $listener);$/;"	v
segments	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^			$segments = explode('.', $key);$/;"	v
select	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public function select($selectQuery)$/;"	f
select	.\Source\application\library\Zend\Db\Sql\Combine.php	/^            $select = $this->processSubSelect($combine['select'], $platform, $driver, $parameterContainer);$/;"	v
select	.\Source\application\library\Zend\Db\Sql\Insert.php	/^            $this->select = $values;$/;"	v
select	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    protected $select           = null;$/;"	v
select	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    public function select(Select $select)$/;"	f
select	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function select($table = null)$/;"	f
select	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $select = $this->sql->select();$/;"	v
select	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function select($where = null)$/;"	f
select	.\Source\application\library\Zend\Db\TableGateway\TableGatewayInterface.php	/^    public function select($where = null);$/;"	f
select	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $select          = new Select();$/;"	v
select	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $select = $this->getSelect();$/;"	v
select	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $this->select  = null;$/;"	v
select	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $this->select = $select;$/;"	v
select	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $this->select = null;$/;"	v
select	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    protected $select;$/;"	v
select	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function select($query, $bindings = array(), $useReadPdo = true)$/;"	f
select	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function select($query, $bindings = array());$/;"	f
select	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$select = $this->getSelectColumns($columns);$/;"	v
select	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$select = $this->getSelectColumns($columns);$/;"	v
select	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$select = is_null($key) ? array($column) : array($column, $key);$/;"	v
select	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function select($columns = array('*'))$/;"	f
select	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$select = $query->distinct ? 'select distinct ' : 'select ';$/;"	v
select	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$select = $this->compileSelect($where['query']);$/;"	v
select	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^		$select = $query->distinct ? 'select distinct ' : 'select ';$/;"	v
selectComponents	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected $selectComponents = array($/;"	v
selectComponents	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^	protected $selectComponents = array($/;"	v
selectDecorator	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\IbmDb2.php	/^    public function __construct(SelectDecorator $selectDecorator = null)$/;"	v
selectDecorator	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\Oracle.php	/^    public function __construct(SelectDecorator $selectDecorator = null)$/;"	v
selectDecorator	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SqlServer.php	/^    public function __construct(SelectDecorator $selectDecorator = null)$/;"	v
selectFirst	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public function selectFirst($selectQuery)$/;"	f
selectFromWriteConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function selectFromWriteConnection($query, $bindings = array())$/;"	f
selectOne	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function selectOne($query, $bindings = array())$/;"	f
selectOne	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function selectOne($query, $bindings = array());$/;"	f
selectOrInsert	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public function selectOrInsert($selectQuery,$insertQuery)$/;"	f
selectPaged	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public function selectPaged($selectQuery)$/;"	f
selectParameters	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^        $selectParameters = $parameters[self::SELECT];$/;"	v
selectParameters	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^        $selectParameters = $parameters[self::SELECT];$/;"	v
selectParameters	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^        $selectParameters = $parameters[self::SELECT];$/;"	v
selectRaw	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function selectRaw($expression)$/;"	f
selectSql	.\Source\application\library\Zend\Db\Sql\Insert.php	/^        $selectSql = $this->processSubSelect($this->select, $platform, $driver, $parameterContainer);$/;"	v
selectState	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $selectState = $select->getRawState();$/;"	v
selectWith	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function selectWith(Select $select)$/;"	f
selector	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^        $this->selector = $selector ?: new MessageSelector();$/;"	v
selector	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^    private $selector;$/;"	v
selector	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^    public function __construct(MessageSelector $selector = null)$/;"	v
selector	.\Source\application\library\vendor\symfony\translation\Tests\MessageSelectorTest.php	/^        $selector = new MessageSelector();$/;"	v
selector	.\Source\application\library\vendor\symfony\translation\Translator.php	/^        $this->selector = $selector ?: new MessageSelector();$/;"	v
selector	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    private $selector;$/;"	v
selector	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function __construct($locale, MessageSelector $selector = null, $cacheDir = null, $debug = false)$/;"	v
self	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$self = __FUNCTION__;$/;"	v
sep	.\Source\application\library\Zend\Validator\Isbn.php	/^        $sep      = quotemeta($this->getSeparator());$/;"	v
sepaCountries	.\Source\application\library\Zend\Validator\Iban.php	/^    protected static $sepaCountries = array($/;"	v
separator	.\Source\application\library\Zend\Validator\Hostname.php	/^        $separator = strrpos($encoded, '-');$/;"	v
separator	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function slug($title, $separator = '-')$/;"	v
sequence	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^        $sequence = $result->current();$/;"	v
sequence	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function insertGetId(array $values, $sequence = null)$/;"	v
sequence	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^		if (is_null($sequence)) $sequence = 'id';$/;"	v
sequence	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\PostgresProcessor.php	/^		$sequence = $sequence ?: 'id';$/;"	v
sequence	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\PostgresProcessor.php	/^	public function processInsertGetId(Builder $query, $sql, $values, $sequence = null)$/;"	v
sequence	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\Processor.php	/^	public function processInsertGetId(Builder $query, $sql, $values, $sequence = null)$/;"	v
sequence	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Processors\SqlServerProcessor.php	/^	public function processInsertGetId(Builder $query, $sql, $values, $sequence = null)$/;"	v
sequenceName	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^        $this->sequenceName    = $sequenceName;$/;"	v
sequenceName	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^    protected $sequenceName;$/;"	v
sequenceValue	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^            $this->sequenceValue = $values[$key];$/;"	v
sequenceValue	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^        $this->sequenceValue = $this->nextSequenceId();$/;"	v
sequenceValue	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^    protected $sequenceValue;$/;"	v
serial	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^        $this->serial = 0;$/;"	v
serial	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    protected $serial = 0;$/;"	v
serial	.\Source\application\library\Zend\Stdlib\SplPriorityQueue.php	/^    protected $serial = PHP_INT_MAX;$/;"	v
serialize	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function serialize()$/;"	f
serialize	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function serialize()$/;"	f
serialize	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function serialize()$/;"	f
serialize	.\Source\application\library\Zend\Stdlib\SplPriorityQueue.php	/^    public function serialize()$/;"	f
serialize	.\Source\application\library\Zend\Stdlib\SplQueue.php	/^    public function serialize()$/;"	f
serialize	.\Source\application\library\Zend\Stdlib\SplStack.php	/^    public function serialize()$/;"	f
serializeHandler	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^        $serializeHandler = (string) $serializeHandler;$/;"	v
serializeHandler	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^        $this->serializeHandler = (string) $serializeHandler;$/;"	v
serializeHandler	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    protected $serializeHandler;$/;"	v
serializer	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^        $serializer = $this->getSerializer();$/;"	v
serializer	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^        $this->serializer = $serializer;$/;"	v
serializer	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^    protected $serializer;$/;"	v
serializerOptions	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^        $this->serializerOptions = $serializerOptions;$/;"	v
serializerOptions	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^    protected $serializerOptions = array();$/;"	v
serializerOptions	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^    public function __construct($serializer, $serializerOptions = null)$/;"	v
serials	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected $serials = array('bigInteger', 'integer', 'mediumInteger', 'smallInteger', 'tinyInteger');$/;"	v
serials	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected $serials = array('bigInteger', 'integer');$/;"	v
serials	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected $serials = array('bigInteger', 'integer');$/;"	v
serials	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected $serials = array('bigInteger', 'integer');$/;"	v
serverName	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^                    $serverName = (string) $value;$/;"	v
serverName	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $serverName = '.';$/;"	v
service	.\Source\application\library\Zend\Validator\CreditCard.php	/^        $service = $this->getService();$/;"	v
serviceNames	.\Source\application\init_autoloader.php	/^    $serviceNames = 'Service';$/;"	v
session	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^        $session = $this->mongoCollection->findOne(array($/;"	v
session	.\Source\application\library\Zend\Validator\Csrf.php	/^            $this->session = new SessionContainer($this->getSessionName());$/;"	v
session	.\Source\application\library\Zend\Validator\Csrf.php	/^        $session = $this->getSession();$/;"	v
session	.\Source\application\library\Zend\Validator\Csrf.php	/^        $this->session = $session;$/;"	v
session	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected $session;$/;"	v
session	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^		$session = app('session');$/;"	v
session	.\Source\application\module\Index\Module.php	/^                \/\/         $session = $config['session'];$/;"	v
session	.\Source\application\module\Index\Module.php	/^                \/\/     $session = $sm->get('Test\\Auth\\SessionManager');$/;"	v
sessionConfig	.\Source\application\library\Zend\Session\Service\SessionConfigFactory.php	/^        $sessionConfig = new $class();$/;"	v
sessionConfig	.\Source\application\module\Index\Module.php	/^                \/\/             $sessionConfig = new $class();$/;"	v
sessionConfig	.\Source\application\module\Index\Module.php	/^                \/\/         $sessionConfig = null;$/;"	v
sessionExists	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function sessionExists();$/;"	f
sessionExists	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function sessionExists()$/;"	f
sessionManager	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^            $this->sessionManager = $services->get('Zend\\Session\\ManagerInterface');$/;"	v
sessionManager	.\Source\application\library\Zend\Session\Service\ContainerAbstractServiceFactory.php	/^    protected $sessionManager;$/;"	v
sessionManager	.\Source\application\module\Index\Module.php	/^                \/\/     $sessionManager = new SessionManager($sessionConfig);$/;"	v
sessionManager	.\Source\application\module\Index\Module.php	/^                \/\/     $sessionManager = null;   $/;"	v
sessionMode	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $sessionMode = $findParameterValue(array('session_mode'));$/;"	v
sessionName	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^        $this->sessionName     = $name;$/;"	v
sessionName	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    protected $sessionName;$/;"	v
sessionName	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^        $this->sessionName     = $name;$/;"	v
sessionName	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^    protected $sessionName;$/;"	v
sessionName	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^        $this->sessionName = $name;$/;"	v
sessionName	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^    protected $sessionName;$/;"	v
sessionSavePath	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^        $this->sessionSavePath = $savePath;$/;"	v
sessionSavePath	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    protected $sessionSavePath;$/;"	v
sessionSavePath	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^        $this->sessionSavePath = $savePath;$/;"	v
sessionSavePath	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^    protected $sessionSavePath;$/;"	v
set	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    protected $set = array();$/;"	v
set	.\Source\application\library\Zend\Db\Sql\Update.php	/^        $this->set = clone $this->set;$/;"	v
set	.\Source\application\library\Zend\Db\Sql\Update.php	/^        $this->set = new PriorityList();$/;"	v
set	.\Source\application\library\Zend\Db\Sql\Update.php	/^    protected $set;$/;"	v
set	.\Source\application\library\Zend\Db\Sql\Update.php	/^    public function set(array $values, $flag = self::VALUES_SET)$/;"	f
set	.\Source\application\library\Zend\Stdlib\Parameters.php	/^    public function set($name, $value)$/;"	f
set	.\Source\application\library\Zend\Stdlib\ParametersInterface.php	/^    public function set($name, $value);$/;"	f
set	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^                    $set  = 'A';$/;"	v
set	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^                    $set  = 'B';$/;"	v
set	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^                    $set = 'C';$/;"	v
set	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^        $set        = $this->getCodingSet($value);$/;"	v
set	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function set($prefix, $paths)$/;"	f
set	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function set(&$array, $key, $value)$/;"	f
set	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function set($name, $value)$/;"	f
set	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function set($id, $translation, $domain = 'messages')$/;"	f
set	.\Source\application\library\vendor\symfony\translation\MessageCatalogueInterface.php	/^    public function set($id, $translation, $domain = 'messages');$/;"	f
set	.\Source\application\library\vendor\symfony\translation\PluralizationRules.php	/^    public static function set(callable $rule, $locale)$/;"	f
setActionCondition	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setActionCondition($actionCondition)$/;"	f
setActionOrder	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setActionOrder($actionOrder)$/;"	f
setActionOrientation	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setActionOrientation($actionOrientation)$/;"	f
setActionReferenceNewRow	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setActionReferenceNewRow($actionReferenceNewRow)$/;"	f
setActionReferenceNewTable	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setActionReferenceNewTable($actionReferenceNewTable)$/;"	f
setActionReferenceOldRow	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setActionReferenceOldRow($actionReferenceOldRow)$/;"	f
setActionReferenceOldTable	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setActionReferenceOldTable($actionReferenceOldTable)$/;"	f
setActionStatement	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setActionStatement($actionStatement)$/;"	f
setActionTiming	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setActionTiming($actionTiming)$/;"	f
setAdapter	.\Source\application\library\Zend\Validator\Barcode.php	/^    public function setAdapter($adapter, $options = null)$/;"	f
setAdapter	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function setAdapter(DbAdapter $adapter)$/;"	f
setAllow	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function setAllow($allow)$/;"	f
setAllow	.\Source\application\library\Zend\Validator\Hostname.php	/^    public function setAllow($allow)$/;"	f
setAllowAbsolute	.\Source\application\library\Zend\Validator\Uri.php	/^    public function setAllowAbsolute($allowAbsolute)$/;"	f
setAllowNonSepa	.\Source\application\library\Zend\Validator\Iban.php	/^    public function setAllowNonSepa($allowNonSepa)$/;"	f
setAllowRelative	.\Source\application\library\Zend\Validator\Uri.php	/^    public function setAllowRelative($allowRelative)$/;"	f
setAppends	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setAppends(array $appends)$/;"	f
setArrayObjectPrototype	.\Source\application\library\Zend\Db\ResultSet\ResultSet.php	/^    public function setArrayObjectPrototype($arrayObjectPrototype)$/;"	f
setAsGlobal	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^    public function setAsGlobal()$/;"	f
setAsGlobal	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public function setAsGlobal()$/;"	f
setAsGlobal	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\CapsuleManagerTrait.php	/^	public function setAsGlobal()$/;"	f
setAttribute	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setAttribute($key, $value)$/;"	f
setAudience	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setAudience($audience, $replicateAsHeader = false)$/;"	f
setAudience	.\Source\application\library\vendor\lcobucci\jwt\src\ValidationData.php	/^    public function setAudience($audience)$/;"	f
setAudienceCanReplicateItemOnHeader	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setAudienceCanReplicateItemOnHeader()$/;"	f
setAudienceMustChangeTheAudClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setAudienceMustChangeTheAudClaim()$/;"	f
setAudienceMustKeepAFluentInterface	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setAudienceMustKeepAFluentInterface()$/;"	f
setAudienceShouldChangeTheAudience	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    public function setAudienceShouldChangeTheAudience($aud)$/;"	f
setBackup	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^    public function setBackup($backup)$/;"	f
setBackup	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^    public function setBackup($backup)$/;"	f
setBaseValue	.\Source\application\library\Zend\Validator\DateStep.php	/^    public function setBaseValue($baseValue)$/;"	f
setBaseValue	.\Source\application\library\Zend\Validator\Step.php	/^    public function setBaseValue($baseValue)$/;"	f
setBindings	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function setBindings(array $bindings, $type = 'where')$/;"	f
setBreakOnFirstFailure	.\Source\application\library\Zend\Validator\Explode.php	/^    public function setBreakOnFirstFailure($break)$/;"	f
setCacheExpire	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setCacheExpire($cacheExpire)$/;"	f
setCacheLimiter	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    public function setCacheLimiter($cacheLimiter)$/;"	f
setCacheManager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public function setCacheManager(CacheManager $cache)$/;"	f
setCacheManager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function setCacheManager($cache)$/;"	f
setCacheStorage	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    public function setCacheStorage(CacheStorage $cacheStorage)$/;"	f
setCallback	.\Source\application\library\Zend\Validator\Callback.php	/^    public function setCallback($callback)$/;"	f
setCallbackOptions	.\Source\application\library\Zend\Validator\Callback.php	/^    public function setCallbackOptions($options)$/;"	f
setCaptureTo	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setCaptureTo($capture)$/;"	f
setCase	.\Source\application\library\Zend\Validator\File\Extension.php	/^    public function setCase($case)$/;"	f
setCharacterMaximumLength	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setCharacterMaximumLength($characterMaximumLength)$/;"	f
setCharacterOctetLength	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setCharacterOctetLength($characterOctetLength)$/;"	f
setCharacters	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    protected function setCharacters($characters)$/;"	f
setCheckClause	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function setCheckClause($checkClause)$/;"	f
setCheckOption	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^    public function setCheckOption($checkOption)$/;"	f
setChecksum	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    protected function setChecksum($checksum)$/;"	f
setChildData	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setChildData($child, array $data)$/;"	f
setChildDataOne	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setChildDataOne($child,$name, $value)$/;"	f
setClassMapAuthoritative	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function setClassMapAuthoritative($classMapAuthoritative)$/;"	f
setClassName	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^    public function setClassName($className)$/;"	f
setCollection	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function setCollection($collection)$/;"	f
setColumnDefault	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setColumnDefault($columnDefault)$/;"	f
setColumnName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function setColumnName($columnName)$/;"	f
setColumns	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    public function setColumns(array $columns)$/;"	f
setColumns	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function setColumns(array $columns)$/;"	f
setColumns	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    public function setColumns($columns)$/;"	f
setCommand	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Seeder.php	/^	public function setCommand(Command $command)$/;"	f
setConfig	.\Source\application\library\Zend\Session\AbstractManager.php	/^    public function setConfig(Config $config)$/;"	f
setConfig	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function setConfig(Config $config);$/;"	f
setConfigCacheFactory	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function setConfigCacheFactory(ConfigCacheFactoryInterface $configCacheFactory)$/;"	f
setConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setConnection($name)$/;"	f
setConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\Migrator.php	/^	public function setConnection($name)$/;"	f
setConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	public function setConnection(Connection $connection)$/;"	f
setConnectionParameters	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    public function setConnectionParameters(array $connectionParameters)$/;"	f
setConnectionParameters	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function setConnectionParameters(array $connectionParameters)$/;"	f
setConnectionResolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function setConnectionResolver(Resolver $resolver)$/;"	f
setConstraints	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    public function setConstraints($constraints)$/;"	f
setContainer	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Seeder.php	/^	public function setContainer(Container $container)$/;"	f
setContainer	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\CapsuleManagerTrait.php	/^	public function setContainer(Container $container)$/;"	f
setContent	.\Source\application\library\Zend\Stdlib\Message.php	/^    public function setContent($value)$/;"	f
setContent	.\Source\application\library\Zend\Stdlib\MessageInterface.php	/^    public function setContent($content);$/;"	f
setContent	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Key.php	/^    private function setContent($content)$/;"	f
setControl	.\Source\application\library\Zend\Validator\Bitwise.php	/^    public function setControl($control)$/;"	f
setCookieDomain	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function setCookieDomain($cookieDomain);$/;"	f
setCookieDomain	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setCookieDomain($cookieDomain)$/;"	f
setCookieHttpOnly	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function setCookieHttpOnly($cookieHttpOnly);$/;"	f
setCookieHttpOnly	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setCookieHttpOnly($cookieHttpOnly)$/;"	f
setCookieLifetime	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function setCookieLifetime($cookieLifetime);$/;"	f
setCookieLifetime	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setCookieLifetime($cookieLifetime)$/;"	f
setCookiePath	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function setCookiePath($cookiePath);$/;"	f
setCookiePath	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setCookiePath($cookiePath)$/;"	f
setCookieSecure	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function setCookieSecure($cookieSecure);$/;"	f
setCookieSecure	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setCookieSecure($cookieSecure)$/;"	f
setCountryCode	.\Source\application\library\Zend\Validator\Iban.php	/^    public function setCountryCode($countryCode = null)$/;"	f
setCrc32	.\Source\application\library\Zend\Validator\File\Crc32.php	/^    public function setCrc32($options)$/;"	f
setCreated	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setCreated($created)$/;"	f
setCreatedAt	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setCreatedAt($value)$/;"	f
setCsvControl	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^    public function setCsvControl($delimiter = ';', $enclosure = '"')$/;"	f
setCsvControl	.\Source\application\library\vendor\symfony\translation\Loader\CsvFileLoader.php	/^    public function setCsvControl($delimiter = ';', $enclosure = '"', $escape = '\\\\')$/;"	f
setCurrentTime	.\Source\application\library\vendor\lcobucci\jwt\src\ValidationData.php	/^    public function setCurrentTime($currentTime)$/;"	f
setCurrentTimeShouldChangeTheTimeBasedValues	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    public function setCurrentTimeShouldChangeTheTimeBasedValues()$/;"	f
setData	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setData(array $data)$/;"	f
setDataColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    public function setDataColumn($dataColumn)$/;"	f
setDataField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function setDataField($dataField)$/;"	f
setDataOne	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setDataOne($name, $value)$/;"	f
setDataType	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setDataType($dataType)$/;"	f
setDatabase	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function setDatabase($database)$/;"	f
setDatabaseName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function setDatabaseName($database)$/;"	f
setDateTime	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function setDateTime($year, $month, $day, $hour, $minute, $second = 0)$/;"	f
setDbAdapter	.\Source\application\library\Zend\Db\Adapter\AdapterAwareInterface.php	/^    public function setDbAdapter(Adapter $adapter);$/;"	f
setDbAdapter	.\Source\application\library\Zend\Db\Adapter\AdapterAwareTrait.php	/^    public function setDbAdapter(Adapter $adapter)$/;"	f
setDecimal	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractPrecisionColumn.php	/^    public function setDecimal($decimal)$/;"	f
setDefault	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function setDefault($default)$/;"	f
setDefaultConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolver.php	/^	public function setDefaultConnection($name)$/;"	f
setDefaultConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionResolverInterface.php	/^	public function setDefaultConnection($name);$/;"	f
setDefaultConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	public function setDefaultConnection($name)$/;"	f
setDefaultManager	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public static function setDefaultManager(Manager $manager = null)$/;"	f
setDefaultOptions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\Connector.php	/^	public function setDefaultOptions(array $options)$/;"	f
setDefaultTranslator	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public static function setDefaultTranslator(Translator\\TranslatorInterface $translator = null, $textDomain = null)$/;"	f
setDefaultTranslatorTextDomain	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public static function setDefaultTranslatorTextDomain($textDomain = 'default')$/;"	f
setDeleteRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function setDeleteRule($deleteRule)$/;"	f
setDigits	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractPrecisionColumn.php	/^    public function setDigits($digits)$/;"	f
setDirectory	.\Source\application\library\Zend\Validator\File\Exists.php	/^    public function setDirectory($directory)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Feature\AbstractFeature.php	/^    public function setDriver(DriverInterface $driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    public function setDriver(IbmDb2 $driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function setDriver(IbmDb2 $driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    public function setDriver(Mysqli $driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function setDriver(Mysqli $driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    public function setDriver(Oci8 $driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function setDriver($driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function setDriver(Pdo $driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function setDriver(Pdo $driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    public function setDriver(Pgsql $driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    public function setDriver(Pgsql $driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function setDriver(Sqlsrv $driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function setDriver(Sqlsrv $driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Platform\Mysql.php	/^    public function setDriver($driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Platform\Postgresql.php	/^    public function setDriver($driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Platform\SqlServer.php	/^    public function setDriver($driver)$/;"	f
setDriver	.\Source\application\library\Zend\Db\Adapter\Platform\Sqlite.php	/^    public function setDriver($driver)$/;"	f
setEagerLoads	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function setEagerLoads(array $eagerLoad)$/;"	f
setEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    public function setEncoding($encoding, $convertEncoding = null)$/;"	f
setEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^    public function setEncoding($encoding, $convertEncoding = null)$/;"	f
setEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function setEncoding($encoding, $convertEncoding = null);$/;"	f
setEncoding	.\Source\application\library\Zend\Validator\StringLength.php	/^    public function setEncoding($encoding)$/;"	f
setEntropyFile	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setEntropyFile($entropyFile)$/;"	f
setEntropyLength	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setEntropyLength($entropyLength)$/;"	f
setErrata	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setErrata($errataName, $errataValue)$/;"	f
setErratas	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setErratas(array $erratas)$/;"	f
setEventDispatcher	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public function setEventDispatcher(Dispatcher $dispatcher)$/;"	f
setEventDispatcher	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function setEventDispatcher(Dispatcher $events)$/;"	f
setEventDispatcher	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function setEventDispatcher(Dispatcher $dispatcher)$/;"	f
setEventManager	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\AggregateHydrator.php	/^    public function setEventManager(EventManagerInterface $eventManager)$/;"	f
setEventManipulation	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setEventManipulation($eventManipulation)$/;"	f
setEventObjectCatalog	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setEventObjectCatalog($eventObjectCatalog)$/;"	f
setEventObjectSchema	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setEventObjectSchema($eventObjectSchema)$/;"	f
setEventObjectTable	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setEventObjectTable($eventObjectTable)$/;"	f
setExclude	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function setExclude($exclude)$/;"	f
setExpiration	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setExpiration($expiration, $replicateAsHeader = false)$/;"	f
setExpirationCanReplicateItemOnHeader	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setExpirationCanReplicateItemOnHeader()$/;"	f
setExpirationHops	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function setExpirationHops($hops, $vars = null)$/;"	f
setExpirationMustChangeTheExpClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setExpirationMustChangeTheExpClaim()$/;"	f
setExpirationMustKeepAFluentInterface	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setExpirationMustKeepAFluentInterface()$/;"	f
setExpirationSeconds	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function setExpirationSeconds($ttl, $vars = null)$/;"	f
setExpression	.\Source\application\library\Zend\Db\Sql\Expression.php	/^    public function setExpression($expression)$/;"	f
setExtension	.\Source\application\library\Zend\Validator\File\Extension.php	/^    public function setExtension($extension)$/;"	f
setExtractedData	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^    public function setExtractedData(array $extractedData)$/;"	f
setExtractionObject	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^    public function setExtractionObject($extractionObject)$/;"	f
setFacadeApplication	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	public static function setFacadeApplication($app)$/;"	f
setFactories	.\Source\application\library\Alpaca\Factory\ServerManager.php	/^    public function setFactories($factories)$/;"	f
setFallbackLocales	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function setFallbackLocales(array $locales)$/;"	f
setFetchMode	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function setFetchMode($fetchMode)$/;"	f
setFetchMode	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public function setFetchMode($fetchMode)$/;"	f
setFetchMode	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function setFetchMode($fetchMode)$/;"	f
setField	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function setField($field)$/;"	f
setFiles	.\Source\application\library\Zend\Validator\File\Upload.php	/^    public function setFiles($files = array())$/;"	f
setFlags	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function setFlags($flags)$/;"	f
setForeignAttributesForCreate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphOneOrMany.php	/^	protected function setForeignAttributesForCreate(Model $model)$/;"	f
setForeignKeyDeleteRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function setForeignKeyDeleteRule($foreignKeyDeleteRule)$/;"	f
setForeignKeyUpdateRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function setForeignKeyUpdateRule($foreignKeyUpdateRule)$/;"	f
setFormat	.\Source\application\library\Zend\Validator\Date.php	/^    public function setFormat($format = self::FORMAT_DEFAULT)$/;"	f
setFormat	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function setFormat($format = ':message')$/;"	f
setFromArray	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function setFromArray(Array $data)$/;"	f
setFromArray	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^    public function setFromArray($options)$/;"	f
setGcDivisor	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setGcDivisor($gcDivisor)$/;"	f
setGcMaxlifetime	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setGcMaxlifetime($gcMaxlifetime)$/;"	f
setGcProbability	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setGcProbability($gcProbability)$/;"	f
setHash	.\Source\application\library\Zend\Validator\File\Hash.php	/^    public function setHash($options)$/;"	f
setHashBitsPerCharacter	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    public function setHashBitsPerCharacter($hashBitsPerCharacter)$/;"	f
setHashBitsPerCharacter	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setHashBitsPerCharacter($hashBitsPerCharacter)$/;"	f
setHashFunction	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    public function setHashFunction($hashFunction)$/;"	f
setHaystack	.\Source\application\library\Zend\Validator\InArray.php	/^    public function setHaystack(array $haystack)$/;"	f
setHeader	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setHeader($name, $value)$/;"	f
setHeaderMustConfigureTheGivenClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setHeaderMustConfigureTheGivenClaim()$/;"	f
setHeaderMustKeepAFluentInterface	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setHeaderMustKeepAFluentInterface()$/;"	f
setHeaderMustRaiseExceptionWhenTokenHasBeenSigned	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setHeaderMustRaiseExceptionWhenTokenHasBeenSigned()$/;"	f
setHidden	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setHidden(array $hidden)$/;"	f
setHostnameValidator	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function setHostnameValidator(Hostname $hostnameValidator = null)$/;"	f
setHydratedObject	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^    public function setHydratedObject($hydratedObject)$/;"	f
setHydrationData	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^    public function setHydrationData(array $hydrationData)$/;"	f
setHydrator	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^    public function setHydrator(HydratorInterface $hydrator)$/;"	f
setHydrator	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorAwareInterface.php	/^    public function setHydrator(HydratorInterface $hydrator);$/;"	f
setHydrator	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorAwareTrait.php	/^    public function setHydrator(HydratorInterface $hydrator)$/;"	f
setId	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function setId($id);$/;"	f
setId	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function setId($id)$/;"	f
setId	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setId($id, $replicateAsHeader = false)$/;"	f
setId	.\Source\application\library\vendor\lcobucci\jwt\src\ValidationData.php	/^    public function setId($id)$/;"	f
setIdCanReplicateItemOnHeader	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setIdCanReplicateItemOnHeader()$/;"	f
setIdColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    public function setIdColumn($idColumn)$/;"	f
setIdMustChangeTheJtiClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setIdMustChangeTheJtiClaim()$/;"	f
setIdMustKeepAFluentInterface	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setIdMustKeepAFluentInterface()$/;"	f
setIdShouldChangeTheId	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    public function setIdShouldChangeTheId($id)$/;"	f
setIdentifier	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    public function setIdentifier($identifier)$/;"	f
setIdentifier	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^    public function setIdentifier($identifier)$/;"	f
setIdentifier	.\Source\application\library\Zend\Db\Sql\Predicate\IsNull.php	/^    public function setIdentifier($identifier)$/;"	f
setIdentifier	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^    public function setIdentifier($identifier)$/;"	f
setImageHeight	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function setImageHeight($options)$/;"	f
setImageMax	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function setImageMax($options)$/;"	f
setImageMin	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function setImageMin($options)$/;"	f
setImageWidth	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function setImageWidth($options)$/;"	f
setInclusive	.\Source\application\library\Zend\Validator\Between.php	/^    public function setInclusive($inclusive)$/;"	f
setInclusive	.\Source\application\library\Zend\Validator\GreaterThan.php	/^    public function setInclusive($inclusive)$/;"	f
setInclusive	.\Source\application\library\Zend\Validator\LessThan.php	/^    public function setInclusive($inclusive)$/;"	f
setIncrementing	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setIncrementing($value)$/;"	f
setInternalQueueClass	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function setInternalQueueClass($class)$/;"	f
setIpValidator	.\Source\application\library\Zend\Validator\Hostname.php	/^    public function setIpValidator(Ip $ipValidator = null)$/;"	f
setIsJsonp	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setIsJsonp($value)$/;"	f
setIsNullable	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setIsNullable($isNullable)$/;"	f
setIsSelectContainDistinct	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^    public function setIsSelectContainDistinct($isSelectContainDistinct)$/;"	f
setIsUpdatable	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^    public function setIsUpdatable($isUpdatable)$/;"	f
setIssuedAt	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setIssuedAt($issuedAt, $replicateAsHeader = false)$/;"	f
setIssuedAtCanReplicateItemOnHeader	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setIssuedAtCanReplicateItemOnHeader()$/;"	f
setIssuedAtMustChangeTheIatClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setIssuedAtMustChangeTheIatClaim()$/;"	f
setIssuedAtMustKeepAFluentInterface	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setIssuedAtMustKeepAFluentInterface()$/;"	f
setIssuer	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setIssuer($issuer, $replicateAsHeader = false)$/;"	f
setIssuer	.\Source\application\library\vendor\lcobucci\jwt\src\ValidationData.php	/^    public function setIssuer($issuer)$/;"	f
setIssuerCanReplicateItemOnHeader	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setIssuerCanReplicateItemOnHeader()$/;"	f
setIssuerMustChangeTheIssClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setIssuerMustChangeTheIssClaim()$/;"	f
setIssuerMustKeepAFluentInterface	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setIssuerMustKeepAFluentInterface()$/;"	f
setIssuerShouldChangeTheIssuer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    public function setIssuerShouldChangeTheIssuer($iss)$/;"	f
setIteratorClass	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function setIteratorClass($class)$/;"	f
setJoin	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function setJoin($query = null)$/;"	f
setJoin	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^	protected function setJoin(Builder $query = null)$/;"	f
setKeyName	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setKeyName($key)$/;"	f
setKeysForSaveQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function setKeysForSaveQuery(Builder $query)$/;"	f
setKeysForSaveQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphPivot.php	/^	protected function setKeysForSaveQuery(Builder $query)$/;"	f
setKeysForSaveQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	protected function setKeysForSaveQuery(Builder $query)$/;"	f
setLayout	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setLayout($layout)$/;"	f
setLayoutData	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setLayoutData(array $data)$/;"	f
setLayoutDataOne	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setLayoutDataOne($name, $value)$/;"	f
setLeft	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    public function setLeft($left)$/;"	f
setLeftType	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    public function setLeftType($type)$/;"	f
setLength	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractLengthColumn.php	/^    public function setLength($length)$/;"	f
setLength	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    protected function setLength($length)$/;"	f
setLifetimeColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    public function setLifetimeColumn($lifetimeColumn)$/;"	f
setLifetimeField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function setLifetimeField($lifetimeField)$/;"	f
setLike	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^    public function setLike($like)$/;"	f
setLiteral	.\Source\application\library\Zend\Db\Sql\Literal.php	/^    public function setLiteral($literal)$/;"	f
setLiteral	.\Source\application\library\Zend\Validator\Identical.php	/^    public function setLiteral($literal)$/;"	f
setLocale	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function setLocale($locale)$/;"	f
setLocale	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public static function setLocale($locale)$/;"	f
setLocale	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    public function setLocale($locale)$/;"	f
setLocale	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^    public function setLocale($locale)$/;"	f
setLocale	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^    public function setLocale($locale)$/;"	f
setLocale	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function setLocale($locale)$/;"	f
setLocale	.\Source\application\library\vendor\symfony\translation\TranslatorInterface.php	/^    public function setLocale($locale);$/;"	f
setMagicFile	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    public function setMagicFile($file)$/;"	f
setManager	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    protected function setManager(Manager $manager = null)$/;"	f
setMatchOption	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function setMatchOption($matchOption)$/;"	f
setMax	.\Source\application\library\Zend\Validator\Between.php	/^    public function setMax($max)$/;"	f
setMax	.\Source\application\library\Zend\Validator\File\Count.php	/^    public function setMax($max)$/;"	f
setMax	.\Source\application\library\Zend\Validator\File\Size.php	/^    public function setMax($max)$/;"	f
setMax	.\Source\application\library\Zend\Validator\File\WordCount.php	/^    public function setMax($max)$/;"	f
setMax	.\Source\application\library\Zend\Validator\LessThan.php	/^    public function setMax($max)$/;"	f
setMax	.\Source\application\library\Zend\Validator\StringLength.php	/^    public function setMax($max)$/;"	f
setMaxHeight	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function setMaxHeight($maxHeight)$/;"	f
setMaxValue	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    public function setMaxValue($maxValue)$/;"	f
setMaxWidth	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function setMaxWidth($maxWidth)$/;"	f
setMd5	.\Source\application\library\Zend\Validator\File\Md5.php	/^    public function setMd5($options)$/;"	f
setMessage	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function setMessage($messageString, $messageKey = null)$/;"	f
setMessage	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function setMessage($messageString, $messageKey = null)$/;"	f
setMessageLength	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public static function setMessageLength($length = -1)$/;"	f
setMessages	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function setMessages(array $messages)$/;"	f
setMetadata	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function setMetadata($key, $value, $overwriteArray = false)$/;"	f
setMetadata	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function setMetadata($key, $value, $overwriteArray = false)$/;"	f
setMetadata	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^    public function setMetadata($key, $value, $overwriteArray = false);$/;"	f
setMetadata	.\Source\application\library\Zend\Stdlib\Message.php	/^    public function setMetadata($spec, $value = null)$/;"	f
setMetadata	.\Source\application\library\Zend\Stdlib\MessageInterface.php	/^    public function setMetadata($spec, $value = null);$/;"	f
setMetadata	.\Source\application\library\vendor\symfony\translation\MessageCatalogue.php	/^    public function setMetadata($key, $value, $domain = 'messages')$/;"	f
setMetadata	.\Source\application\library\vendor\symfony\translation\MetadataAwareInterface.php	/^    public function setMetadata($key, $value, $domain = 'messages');$/;"	f
setMimeType	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    public function setMimeType($mimetype)$/;"	f
setMin	.\Source\application\library\Zend\Validator\Between.php	/^    public function setMin($min)$/;"	f
setMin	.\Source\application\library\Zend\Validator\File\Count.php	/^    public function setMin($min)$/;"	f
setMin	.\Source\application\library\Zend\Validator\File\Size.php	/^    public function setMin($min)$/;"	f
setMin	.\Source\application\library\Zend\Validator\File\WordCount.php	/^    public function setMin($min)$/;"	f
setMin	.\Source\application\library\Zend\Validator\GreaterThan.php	/^    public function setMin($min)$/;"	f
setMin	.\Source\application\library\Zend\Validator\StringLength.php	/^    public function setMin($min)$/;"	f
setMinHeight	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function setMinHeight($minHeight)$/;"	f
setMinValue	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    public function setMinValue($minValue)$/;"	f
setMinWidth	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    public function setMinWidth($minWidth)$/;"	f
setModel	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function setModel(Model $model)$/;"	f
setModel	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\ModelNotFoundException.php	/^	public function setModel($model)$/;"	f
setModifiedColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    public function setModifiedColumn($modifiedColumn)$/;"	f
setModifiedField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function setModifiedField($modifiedField)$/;"	f
setMorphClass	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphPivot.php	/^	public function setMorphClass($morphClass)$/;"	f
setMorphType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphPivot.php	/^	public function setMorphType($morphType)$/;"	f
setMustConfigureTheGivenClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setMustConfigureTheGivenClaim()$/;"	f
setMustKeepAFluentInterface	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setMustKeepAFluentInterface()$/;"	f
setMustRaiseExceptionWhenTokenHasBeenSigned	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setMustRaiseExceptionWhenTokenHasBeenSigned()$/;"	f
setName	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    public function setName($name)$/;"	f
setName	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setName($name)$/;"	f
setName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function setName($name)$/;"	f
setName	.\Source\application\library\Zend\Db\Metadata\Object\TriggerObject.php	/^    public function setName($name)$/;"	f
setName	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function setName($name)$/;"	f
setName	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    public function setName($name)$/;"	f
setName	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    public function setName($name)$/;"	f
setName	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function setName($name);$/;"	f
setName	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setName($name)$/;"	f
setName	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function setName($name);$/;"	f
setName	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function setName($name)$/;"	f
setName	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function setName($name)$/;"	f
setNameColumn	.\Source\application\library\Zend\Session\SaveHandler\DbTableGatewayOptions.php	/^    public function setNameColumn($nameColumn)$/;"	f
setNameField	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function setNameField($nameField)$/;"	f
setNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    public function setNamingStrategy(NamingStrategyInterface $strategy)$/;"	f
setNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    public function setNamingStrategy(NamingStrategyInterface $strategy)$/;"	f
setNamingStrategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategyEnabledInterface.php	/^    public function setNamingStrategy(NamingStrategyInterface $strategy);$/;"	f
setNotBefore	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setNotBefore($notBefore, $replicateAsHeader = false)$/;"	f
setNotBeforeCanReplicateItemOnHeader	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setNotBeforeCanReplicateItemOnHeader()$/;"	f
setNotBeforeMustChangeTheNbfClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setNotBeforeMustChangeTheNbfClaim()$/;"	f
setNotBeforeMustKeepAFluentInterface	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setNotBeforeMustKeepAFluentInterface()$/;"	f
setNullable	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Boolean.php	/^    public function setNullable($nullable)$/;"	f
setNullable	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function setNullable($nullable)$/;"	f
setNumericPrecision	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setNumericPrecision($numericPrecision)$/;"	f
setNumericScale	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setNumericScale($numericScale)$/;"	f
setNumericUnsigned	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setNumericUnsigned($numericUnsigned)$/;"	f
setObjectPrototype	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^    public function setObjectPrototype($objectPrototype)$/;"	f
setObservableEvents	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setObservableEvents(array $observables)$/;"	f
setOnDeleteRule	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    public function setOnDeleteRule($onDeleteRule)$/;"	f
setOnUpdateRule	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    public function setOnUpdateRule($onUpdateRule)$/;"	f
setOperator	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    public function setOperator($operator)$/;"	f
setOperator	.\Source\application\library\Zend\Validator\Bitwise.php	/^    public function setOperator($operator)$/;"	f
setOption	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function setOption($name, $value)$/;"	f
setOption	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function setOption($option, $value);$/;"	f
setOption	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setOption($option, $value)$/;"	f
setOptions	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    public function setOptions(array $options)$/;"	f
setOptions	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function setOptions($options);$/;"	f
setOptions	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setOptions($options)$/;"	f
setOptions	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    public function setOptions($options)$/;"	f
setOptions	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorOptionsInterface.php	/^    public function setOptions($options);$/;"	f
setOptions	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function setOptions($options = array())$/;"	f
setOptions	.\Source\application\library\Zend\Validator\Ip.php	/^    public function setOptions($options = array())$/;"	f
setOrdinalPosition	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setOrdinalPosition($ordinalPosition)$/;"	f
setOrdinalPosition	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function setOrdinalPosition($ordinalPosition)$/;"	f
setPaginator	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function setPaginator($paginator)$/;"	f
setParam	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    public function setParam($name, $value)$/;"	f
setParameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function setParameterContainer(ParameterContainer $parameterContainer)$/;"	f
setParameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function setParameterContainer(ParameterContainer $parameterContainer)$/;"	f
setParameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function setParameterContainer(ParameterContainer $parameterContainer)$/;"	f
setParameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function setParameterContainer(ParameterContainer $parameterContainer)$/;"	f
setParameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    public function setParameterContainer(ParameterContainer $parameterContainer)$/;"	f
setParameterContainer	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function setParameterContainer(ParameterContainer $parameterContainer)$/;"	f
setParameterContainer	.\Source\application\library\Zend\Db\Adapter\StatementContainer.php	/^    public function setParameterContainer(ParameterContainer $parameterContainer)$/;"	f
setParameterContainer	.\Source\application\library\Zend\Db\Adapter\StatementContainerInterface.php	/^    public function setParameterContainer(ParameterContainer $parameterContainer);$/;"	f
setParameters	.\Source\application\library\Zend\Db\Sql\Expression.php	/^    public function setParameters($parameters)$/;"	f
setParams	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    public function setParams($params)$/;"	f
setParsedKey	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\NamespacedItemResolver.php	/^	public function setParsedKey($key, $parsed)$/;"	f
setPattern	.\Source\application\library\Zend\Validator\Regex.php	/^    public function setPattern($pattern)$/;"	f
setPdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function setPdo($pdo)$/;"	f
setPdoForType	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	protected function setPdoForType(Connection $connection, $type = null)$/;"	f
setPerPage	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setPerPage($perPage)$/;"	f
setPhpSaveHandler	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    public function setPhpSaveHandler($phpSaveHandler)$/;"	f
setPivotKeys	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^	public function setPivotKeys($foreignKey, $otherKey)$/;"	f
setPluginManager	.\Source\application\library\Zend\Validator\StaticValidator.php	/^    public static function setPluginManager(ValidatorPluginManager $plugins = null)$/;"	f
setPluginManager	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    public function setPluginManager(ValidatorPluginManager $plugins)$/;"	f
setPositionInUniqueConstraint	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function setPositionInUniqueConstraint($positionInUniqueConstraint)$/;"	f
setPostProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function setPostProcessor(Processor $processor)$/;"	f
setPrefix	.\Source\application\library\vendor\symfony\translation\Extractor\ChainExtractor.php	/^    public function setPrefix($prefix)$/;"	f
setPrefix	.\Source\application\library\vendor\symfony\translation\Extractor\ExtractorInterface.php	/^    public function setPrefix($prefix);$/;"	f
setPrepareOptions	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function setPrepareOptions(array $prepareOptions)$/;"	f
setPrepareParams	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function setPrepareParams(array $prepareParams)$/;"	f
setPriority	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function setPriority($name, $priority)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\AbstractConnection.php	/^    public function setProfiler(ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function setProfiler(Profiler\\ProfilerInterface $profiler)$/;"	f
setProfiler	.\Source\application\library\Zend\Db\Adapter\Profiler\ProfilerAwareInterface.php	/^    public function setProfiler(ProfilerInterface $profiler);$/;"	f
setProxyHeader	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    public static function setProxyHeader($header = 'X-Forwarded-For')$/;"	f
setPsr4	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function setPsr4($prefix, $paths)$/;"	f
setQuery	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function setQuery($query)$/;"	f
setQueryGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function setQueryGrammar(Query\\Grammars\\Grammar $grammar)$/;"	f
setRawAttributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setRawAttributes(array $attributes, $sync = false)$/;"	f
setReadPdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function setReadPdo($pdo)$/;"	f
setReconnector	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function setReconnector(callable $reconnector)$/;"	f
setRecursive	.\Source\application\library\Zend\Validator\InArray.php	/^    public function setRecursive($recursive)$/;"	f
setReferenceColumn	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    public function setReferenceColumn($referenceColumn)$/;"	f
setReferenceTable	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^    public function setReferenceTable($referenceTable)$/;"	f
setReferencedColumnName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function setReferencedColumnName($referencedColumnName)$/;"	f
setReferencedColumns	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function setReferencedColumns(array $referencedColumns)$/;"	f
setReferencedTableName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function setReferencedTableName($referencedTableName)$/;"	f
setReferencedTableName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function setReferencedTableName($referencedTableName)$/;"	f
setReferencedTableSchema	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintKeyObject.php	/^    public function setReferencedTableSchema($referencedTableSchema)$/;"	f
setReferencedTableSchema	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function setReferencedTableSchema($referencedTableSchema)$/;"	f
setRegisteredClaim	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    protected function setRegisteredClaim($name, $value, $replicate)$/;"	f
setRelation	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setRelation($relation, $value)$/;"	f
setRelations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setRelations(array $relations)$/;"	f
setRelativePathTemplate	.\Source\application\library\vendor\symfony\translation\Dumper\FileDumper.php	/^    public function setRelativePathTemplate($relativePathTemplate)$/;"	f
setRememberMeSeconds	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function setRememberMeSeconds($rememberMeSeconds);$/;"	f
setRememberMeSeconds	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setRememberMeSeconds($rememberMeSeconds)$/;"	f
setRenamedColumns	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	protected function setRenamedColumns(TableDiff $tableDiff, Fluent $command, Column $column)$/;"	f
setRequestAccessTime	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    protected function setRequestAccessTime($time)$/;"	f
setRequestAccessTime	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    protected function setRequestAccessTime($time)$/;"	f
setResource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^    public function setResource($resource)$/;"	f
setResource	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function setResource($resource)$/;"	f
setResource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^    public function setResource(\\mysqli $resource)$/;"	f
setResource	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function setResource(\\mysqli_stmt $mysqliStatement)$/;"	f
setResource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^    public function setResource($resource)$/;"	f
setResource	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function setResource($oci8Statement)$/;"	f
setResource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^    public function setResource(\\PDO $resource)$/;"	f
setResource	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function setResource(\\PDOStatement $pdoStatement)$/;"	f
setResource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^    public function setResource($resource)$/;"	f
setResource	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function setResource($resource)$/;"	f
setRight	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    public function setRight($right)$/;"	f
setRightType	.\Source\application\library\Zend\Db\Sql\Predicate\Operator.php	/^    public function setRightType($type)$/;"	f
setRowGateway	.\Source\application\library\Zend\Db\RowGateway\Feature\AbstractFeature.php	/^    public function setRowGateway(AbstractRowGateway $rowGateway)$/;"	f
setRowGateway	.\Source\application\library\Zend\Db\RowGateway\Feature\FeatureSet.php	/^    public function setRowGateway(AbstractRowGateway $rowGateway)$/;"	f
setSalt	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function setSalt($salt)$/;"	f
setSaveHandler	.\Source\application\library\Zend\Session\AbstractManager.php	/^    public function setSaveHandler(SaveHandler $saveHandler)$/;"	f
setSaveHandler	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function setSaveHandler(SaveHandler $saveHandler);$/;"	f
setSaveOptions	.\Source\application\library\Zend\Session\SaveHandler\MongoDBOptions.php	/^    public function setSaveOptions(array $saveOptions)$/;"	f
setSavePath	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function setSavePath($savePath);$/;"	f
setSavePath	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    public function setSavePath($savePath)$/;"	f
setSavePath	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setSavePath($savePath)$/;"	f
setSchema	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^    public function setSchema($schema)$/;"	f
setSchema	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function setSchema($schema)$/;"	f
setSchemaGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function setSchemaGrammar(Schema\\Grammars\\Grammar $grammar)$/;"	f
setSchemaName	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setSchemaName($schemaName)$/;"	f
setSchemaName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function setSchemaName($schemaName)$/;"	f
setSelect	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function setSelect(Select $select)$/;"	f
setSeparator	.\Source\application\library\Zend\Validator\Isbn.php	/^    public function setSeparator($separator)$/;"	f
setSerializeHandler	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    public function setSerializeHandler($serializeHandler)$/;"	f
setSerializer	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^    public function setSerializer($serializer)$/;"	f
setSerializerOptions	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\SerializableStrategy.php	/^    public function setSerializerOptions($serializerOptions)$/;"	f
setService	.\Source\application\library\Zend\Validator\CreditCard.php	/^    public function setService($service)$/;"	f
setSession	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function setSession(SessionContainer $session)$/;"	f
setSessionCookieLifetime	.\Source\application\library\Zend\Session\SessionManager.php	/^    protected function setSessionCookieLifetime($ttl)$/;"	f
setSha1	.\Source\application\library\Zend\Validator\File\Sha1.php	/^    public function setSha1($options)$/;"	f
setSisterData	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setSisterData($sister, array $data)$/;"	f
setSisterDataOne	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setSisterDataOne($sister,$name, $value)$/;"	f
setSize	.\Source\application\library\Zend\Validator\File\Size.php	/^    protected function setSize($size)$/;"	f
setSource	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	public function setSource($name)$/;"	f
setSource	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationRepositoryInterface.php	/^	public function setSource($name);$/;"	f
setSpecification	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    public function setSpecification($specification)$/;"	f
setSpecification	.\Source\application\library\Zend\Db\Sql\Predicate\IsNull.php	/^    public function setSpecification($specification)$/;"	f
setSpecification	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^    public function setSpecification($specification)$/;"	f
setSpecification	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function setSpecification($index, $specification)$/;"	f
setSql	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    public function setSql($sql)$/;"	f
setSql	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    public function setSql($sql)$/;"	f
setSql	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    public function setSql($sql)$/;"	f
setSql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    public function setSql($sql)$/;"	f
setSql	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    public function setSql($sql)$/;"	f
setSql	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    public function setSql($sql)$/;"	f
setSql	.\Source\application\library\Zend\Db\Adapter\StatementContainer.php	/^    public function setSql($sql)$/;"	f
setSql	.\Source\application\library\Zend\Db\Adapter\StatementContainerInterface.php	/^    public function setSql($sql);$/;"	f
setSql	.\Source\application\library\Zend\Db\Sql\Update.php	/^        $setSql = array();$/;"	v
setStaticAdapter	.\Source\application\library\Zend\Db\TableGateway\Feature\GlobalAdapterFeature.php	/^    public static function setStaticAdapter(Adapter $adapter)$/;"	f
setStep	.\Source\application\library\Zend\Validator\DateStep.php	/^    public function setStep(DateInterval $step)$/;"	f
setStep	.\Source\application\library\Zend\Validator\Step.php	/^    public function setStep($step)$/;"	f
setStorage	.\Source\application\library\Zend\Session\AbstractManager.php	/^    public function setStorage(Storage $storage)$/;"	f
setStorage	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function setStorage(Storage $storage);$/;"	f
setStorageOption	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    public function setStorageOption($storageName, $storageValue)$/;"	f
setStorageOption	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setStorageOption($storageName, $storageValue)$/;"	f
setStrict	.\Source\application\library\Zend\Validator\Bitwise.php	/^    public function setStrict($strict)$/;"	f
setStrict	.\Source\application\library\Zend\Validator\Identical.php	/^    public function setStrict($strict)$/;"	f
setStrict	.\Source\application\library\Zend\Validator\InArray.php	/^    public function setStrict($strict)$/;"	f
setStringWrapper	.\Source\application\library\Zend\Validator\StringLength.php	/^    public function setStringWrapper(StringWrapper $stringWrapper)$/;"	f
setSubject	.\Source\application\library\Zend\Db\Sql\Platform\AbstractPlatform.php	/^    public function setSubject($subject)$/;"	f
setSubject	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^    public function setSubject($select)$/;"	f
setSubject	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^    public function setSubject($subject)$/;"	f
setSubject	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^    public function setSubject($subject)$/;"	f
setSubject	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\SelectDecorator.php	/^    public function setSubject($select)$/;"	f
setSubject	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^    public function setSubject($select)$/;"	f
setSubject	.\Source\application\library\Zend\Db\Sql\Platform\PlatformDecoratorInterface.php	/^    public function setSubject($subject);$/;"	f
setSubject	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\Ddl\CreateTableDecorator.php	/^    public function setSubject($subject)$/;"	f
setSubject	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^    public function setSubject($select)$/;"	f
setSubject	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function setSubject($subject, $replicateAsHeader = false)$/;"	f
setSubject	.\Source\application\library\vendor\lcobucci\jwt\src\ValidationData.php	/^    public function setSubject($subject)$/;"	f
setSubjectCanReplicateItemOnHeader	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setSubjectCanReplicateItemOnHeader()$/;"	f
setSubjectMustChangeTheSubClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setSubjectMustChangeTheSubClaim()$/;"	f
setSubjectMustKeepAFluentInterface	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function setSubjectMustKeepAFluentInterface()$/;"	f
setSubjectShouldChangeTheSubject	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^    public function setSubjectShouldChangeTheSubject($sub)$/;"	f
setTable	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    public function setTable($name)$/;"	f
setTable	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    public function setTable($name)$/;"	f
setTable	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function setTable($table)$/;"	f
setTable	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^    public function setTable($table)$/;"	f
setTable	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    public function setTable($table)$/;"	f
setTable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setTable($table)$/;"	f
setTableGateway	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    public function setTableGateway(AbstractTableGateway $tableGateway)$/;"	f
setTableGateway	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    public function setTableGateway(AbstractTableGateway $tableGateway)$/;"	f
setTableName	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    public function setTableName($tableName)$/;"	f
setTableName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function setTableName($tableName)$/;"	f
setTablePrefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function setTablePrefix($prefix)$/;"	f
setTablePrefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	public function setTablePrefix($prefix)$/;"	f
setTarget	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    public function setTarget($target)$/;"	f
setTemplate	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setTemplate($template)$/;"	f
setTemporary	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    public function setTemporary($temporary)$/;"	f
setTestNow	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function setTestNow(Carbon $testNow = null)$/;"	f
setTimeFromTimeString	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function setTimeFromTimeString($time)$/;"	f
setTimeout	.\Source\application\library\Zend\Validator\Csrf.php	/^    public function setTimeout($ttl)$/;"	f
setTimestampsOnAttach	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function setTimestampsOnAttach(array $record, $exists = false)$/;"	f
setTimezone	.\Source\application\library\Zend\Validator\DateStep.php	/^    public function setTimezone(DateTimeZone $timezone)$/;"	f
setTimezone	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function setTimezone($value)$/;"	f
setToStringFormat	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function setToStringFormat($format)$/;"	f
setToken	.\Source\application\library\Zend\Validator\Identical.php	/^    public function setToken($token)$/;"	f
setTouchedRelations	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setTouchedRelations(array $touches)$/;"	f
setTranslator	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function setTranslator(Translator\\TranslatorInterface $translator = null, $textDomain = null)$/;"	f
setTranslator	.\Source\application\library\Zend\Validator\Translator\TranslatorAwareInterface.php	/^    public function setTranslator(TranslatorInterface $translator = null, $textDomain = null);$/;"	f
setTranslator	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function setTranslator(TranslatorInterface $translator)$/;"	f
setTranslator	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public static function setTranslator(TranslatorInterface $translator)$/;"	f
setTranslatorEnabled	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function setTranslatorEnabled($flag = true)$/;"	f
setTranslatorEnabled	.\Source\application\library\Zend\Validator\Translator\TranslatorAwareInterface.php	/^    public function setTranslatorEnabled($enabled = true);$/;"	f
setTranslatorTextDomain	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function setTranslatorTextDomain($textDomain = 'default')$/;"	f
setTranslatorTextDomain	.\Source\application\library\Zend\Validator\Translator\TranslatorAwareInterface.php	/^    public function setTranslatorTextDomain($textDomain = 'default');$/;"	f
setTrustedProxies	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    public static function setTrustedProxies(array $trustedProxies)$/;"	f
setType	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setType($type)$/;"	f
setType	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    public function setType($type)$/;"	f
setType	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function setType($type)$/;"	f
setType	.\Source\application\library\Zend\Validator\CreditCard.php	/^    public function setType($type)$/;"	f
setType	.\Source\application\library\Zend\Validator\Isbn.php	/^    public function setType($type)$/;"	f
setType	.\Source\application\library\Zend\Validator\NotEmpty.php	/^    public function setType($type = null)$/;"	f
setType	.\Source\application\library\Zend\Validator\Timezone.php	/^    public function setType($type = null)$/;"	f
setTypeDecorator	.\Source\application\library\Zend\Db\Sql\Platform\AbstractPlatform.php	/^    public function setTypeDecorator($type, PlatformDecoratorInterface $decorator)$/;"	f
setTypeDecorator	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^    public function setTypeDecorator($type, PlatformDecoratorInterface $decorator, $adapterOrPlatform = null)$/;"	f
setTypes	.\Source\application\library\Zend\Db\Sql\Expression.php	/^    public function setTypes(array $types)$/;"	f
setUnderscoreSeparatedKeys	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    public function setUnderscoreSeparatedKeys($underscoreSeparatedKeys)$/;"	f
setUnguardState	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function setUnguardState($state)$/;"	f
setUnnest	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function setUnnest(Predicate $predicate)$/;"	f
setUp	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    protected function setUp()$/;"	f
setUp	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^    protected function setUp()$/;"	f
setUp	.\Source\application\library\vendor\lcobucci\jwt\test\unit\SignatureTest.php	/^    protected function setUp()$/;"	f
setUp	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\BaseSignerTest.php	/^    protected function setUp()$/;"	f
setUp	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\HmacTest.php	/^    protected function setUp()$/;"	f
setUp	.\Source\application\library\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php	/^    protected function setUp()$/;"	f
setUp	.\Source\application\library\vendor\symfony\translation\Tests\Loader\LocalizedTestCase.php	/^    protected function setUp()$/;"	f
setUp	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    protected function setUp()$/;"	f
setUpdateRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    public function setUpdateRule($updateRule)$/;"	f
setUpdatedAt	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setUpdatedAt($value)$/;"	f
setUriHandler	.\Source\application\library\Zend\Validator\Uri.php	/^    public function setUriHandler($uriHandler)$/;"	f
setUseCookies	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function setUseCookies($useCookies);$/;"	f
setUseCookies	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function setUseCookies($useCookies)$/;"	f
setUseIncludePath	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function setUseIncludePath($useIncludePath)$/;"	f
setUseLayout	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^    public function setUseLayout($value){$/;"	f
setUseProxy	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    public static function setUseProxy($useProxy = true)$/;"	f
setUtf8StringWrapper	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^    public function setUtf8StringWrapper(StringWrapperInterface $utf8StringWrapper)$/;"	f
setValidator	.\Source\application\library\Zend\Validator\Explode.php	/^    public function setValidator($validator)$/;"	f
setValidatorChain	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function setValidatorChain(EventManagerInterface $chain);$/;"	f
setValidatorChain	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function setValidatorChain(EventManagerInterface $chain)$/;"	f
setValidatorPluginManager	.\Source\application\library\Zend\Validator\Explode.php	/^    public function setValidatorPluginManager(ValidatorPluginManager $pluginManager)$/;"	f
setValidatorPluginManager	.\Source\application\library\Zend\Validator\ValidatorPluginManagerAwareInterface.php	/^    public function setValidatorPluginManager(ValidatorPluginManager $pluginManager);$/;"	f
setValue	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    protected function setValue($value)$/;"	f
setValueDelimiter	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ExplodeStrategy.php	/^    private function setValueDelimiter($delimiter)$/;"	f
setValueDelimiter	.\Source\application\library\Zend\Validator\Explode.php	/^    public function setValueDelimiter($delimiter)$/;"	f
setValueObscured	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function setValueObscured($flag)$/;"	f
setValueSet	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^    public function setValueSet($valueSet)$/;"	f
setViewDefinition	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^    public function setViewDefinition($viewDefinition)$/;"	f
setVisible	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setVisible(array $visible)$/;"	f
setWeekEndsAt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function setWeekEndsAt($day)$/;"	f
setWeekStartsAt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function setWeekStartsAt($day)$/;"	f
setWeekendDays	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function setWeekendDays($days)$/;"	f
setWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function setWhere()$/;"	f
setWhere	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphToMany.php	/^	protected function setWhere()$/;"	f
setter	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^            $setter = 'set' . str_replace(' ', '', ucwords(str_replace('_', ' ', $key)));$/;"	v
setter	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^        $setter = 'set' . str_replace('_', '', $key);$/;"	v
setterName	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^                $setterName = 'set' . ucfirst($this->hydrateName($property, $data));$/;"	v
setupContainer	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Traits\CapsuleManagerTrait.php	/^	protected function setupContainer($container)$/;"	f
setupDefaultConfiguration	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	protected function setupDefaultConfiguration()$/;"	f
setupDefaultFeatures	.\Source\application\library\Zend\Db\Adapter\Driver\Feature\DriverFeatureInterface.php	/^    public function setupDefaultFeatures();$/;"	f
setupDefaultFeatures	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function setupDefaultFeatures()$/;"	f
setupManager	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	protected function setupManager()$/;"	f
setupWildcardListen	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	protected function setupWildcardListen($event, $listener)$/;"	f
share	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function share(Closure $closure)$/;"	f
shareByDefault	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorPluginManager.php	/^    protected $shareByDefault = false;$/;"	v
shareByDefault	.\Source\application\library\Zend\Validator\ValidatorPluginManager.php	/^    protected $shareByDefault = false;$/;"	v
shared	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			$shared = $this->bindings[$abstract]['shared'];$/;"	v
shared	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			$shared = false;$/;"	v
shared	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^		return isset($this->instances[$abstract]) || $shared === true;$/;"	v
sharedData	.\Source\application\library\Zend\Db\RowGateway\Feature\AbstractFeature.php	/^    protected $sharedData = array();$/;"	v
sharedData	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    protected $sharedData = array();$/;"	v
sharedLock	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function sharedLock()$/;"	f
shift	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function shift()$/;"	f
shouldReceive	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	public static function shouldReceive()$/;"	f
shuffle	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function shuffle()$/;"	f
sid	.\Source\application\library\Zend\Session\SessionManager.php	/^        $sid = defined('SID') ? constant('SID') : false;$/;"	v
sign	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function sign(Signer $signer, $key)$/;"	f
sign	.\Source\application\library\vendor\lcobucci\jwt\src\Signer.php	/^    public function sign($payload, $key);$/;"	f
sign	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\BaseSigner.php	/^    public function sign($payload, $key)$/;"	f
sign	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^        $sign = $interval->invert === 1 ? -1 : 1;$/;"	v
signMustChangeTheSignature	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function signMustChangeTheSignature()$/;"	f
signMustKeepAFluentInterface	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function signMustKeepAFluentInterface()$/;"	f
signMustReturnANewSignature	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\BaseSignerTest.php	/^    public function signMustReturnANewSignature()$/;"	f
signShouldConvertKeyWhenItsNotAnObject	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\BaseSignerTest.php	/^    public function signShouldConvertKeyWhenItsNotAnObject()$/;"	f
signature	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^        $this->signature = $signer->sign($/;"	v
signature	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^        $this->signature = null;$/;"	v
signature	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    private $signature;$/;"	v
signature	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^        $signature = $this->parseSignature($header, $data[2]);$/;"	v
signature	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa.php	/^        $signature = '';$/;"	v
signature	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^        $this->signature = $signature;$/;"	v
signature	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^        Signature $signature = null,$/;"	v
signature	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    private $signature;$/;"	v
signature	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^        $signature = $this->getMock(Signature::class, [], [], '', false);$/;"	v
signature	.\Source\application\library\vendor\lcobucci\jwt\test\unit\SignatureTest.php	/^        $signature = new Signature('test');$/;"	v
signature	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $signature = $this->getMock(Signature::class, [], [], '', false);$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^        $this->signer = $signer ?: EccFactory::getSigner($this->adapter);$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^    private $signer;$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^        $this->signer = new Sha256();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^    private $signer;$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^        $this->signer = new Sha256();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^    private $signer;$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^        $this->signer = new Sha256();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^    private $signer;$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^        $signer = $this->getMock(Signer::class);$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\SignatureTest.php	/^        $this->signer = $this->getMock(Signer::class);$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\SignatureTest.php	/^    protected $signer;$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\BaseSignerTest.php	/^        $this->signer = $this->getMockForAbstractClass(BaseSigner::class);$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\BaseSignerTest.php	/^    protected $signer;$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^        $signer = $this->getMockForAbstractClass($/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^        $signer = $this->getSigner();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^        $this->signer = $this->getMock(Signer::class, [], [$this->adapter]);$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\EcdsaTest.php	/^    private $signer;$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha256Test.php	/^        $signer = new Sha256();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha384Test.php	/^        $signer = new Sha384();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Ecdsa\Sha512Test.php	/^        $signer = new Sha512();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\HmacTest.php	/^        $this->signer = $this->getMockForAbstractClass(Hmac::class);$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\HmacTest.php	/^    protected $signer;$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Hmac\Sha256Test.php	/^        $signer = new Sha256();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Hmac\Sha384Test.php	/^        $signer = new Sha384();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Hmac\Sha512Test.php	/^        $signer = new Sha512();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Rsa\Sha256Test.php	/^        $signer = new Sha256();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Rsa\Sha384Test.php	/^        $signer = new Sha384();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\Rsa\Sha512Test.php	/^        $signer = new Sha512();$/;"	v
signer	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $signer = $this->getMock(Signer::class);$/;"	v
signer	.\Source\application\service\JwtAuth\JwtManager.php	/^		$signer = new Sha256();$/;"	v
simplePaginate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function simplePaginate($perPage = null, $columns = array('*'))$/;"	f
simplePaginate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function simplePaginate($perPage = null, $columns = array('*'))$/;"	f
simpleXml	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^            $simpleXml = true;$/;"	v
singleByteEncodings	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    protected static $singleByteEncodings = array($/;"	v
singleton	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^	public function singleton($abstract, $concrete = null)$/;"	f
singular	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^	public static $singular = array($/;"	v
singular	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^	public static function singular($value)$/;"	f
singular	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function singular($value)$/;"	f
singularCache	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^	protected static $singularCache = array();$/;"	v
singularId	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^            $singularId = $pluralId = null;$/;"	v
singularId	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^            $singularId = fread($stream, $length);$/;"	v
size	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^                    $this->size          = $size;$/;"	v
size	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^                    $this->size          = $this->toByteString($size);$/;"	v
size	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^                $this->size          = $size;$/;"	v
size	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^                $this->size          = $this->toByteString($size);$/;"	v
size	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^            $this->size = $size;$/;"	v
size	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^        $size = $this->getSize();$/;"	v
size	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^        $size = getimagesize($file);$/;"	v
size	.\Source\application\library\Zend\Validator\File\Size.php	/^                $this->size          = $size;$/;"	v
size	.\Source\application\library\Zend\Validator\File\Size.php	/^                $this->size          = $this->toByteString($size);$/;"	v
size	.\Source\application\library\Zend\Validator\File\Size.php	/^        $size = sprintf("%u", filesize($file));$/;"	v
size	.\Source\application\library\Zend\Validator\File\Size.php	/^        $this->size = $size;$/;"	v
size	.\Source\application\library\Zend\Validator\File\Size.php	/^    protected $size;$/;"	v
size	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^        $size = 0;$/;"	v
size	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^                $size = strpos($line, ']');$/;"	v
sizes	.\Source\application\library\Zend\Validator\File\Size.php	/^        $sizes = array('B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB');$/;"	v
skip	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function skip($value)$/;"	f
skippedPropertiesCache	.\Source\application\library\Zend\Stdlib\Hydrator\ObjectProperty.php	/^    private static $skippedPropertiesCache = array();$/;"	v
slaveAdapter	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^        $this->slaveAdapter = $slaveAdapter;$/;"	v
slaveAdapter	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^    protected $slaveAdapter = null;$/;"	v
slaveSql	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^            $this->slaveSql = $slaveSql;$/;"	v
slaveSql	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^            $this->slaveSql = new Sql($/;"	v
slaveSql	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^    protected $slaveSql = null;$/;"	v
slaveSql	.\Source\application\library\Zend\Db\TableGateway\Feature\MasterSlaveFeature.php	/^    public function __construct(AdapterInterface $slaveAdapter, Sql $slaveSql = null)$/;"	v
slice	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function slice($offset, $length = null, $preserveKeys = false)$/;"	f
sliced	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$sliced = array_slice($results, $start, $perPage);$/;"	v
slug	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function slug($title, $separator = '-')$/;"	f
sm	.\Source\application\library\Alpaca\MVC\Controller\AbstractController.php	/^    protected $sm = null;$/;"	v
smallInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function smallInteger($column, $autoIncrement = false, $unsigned = false)$/;"	f
snake	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function snake($value, $delimiter = '_')$/;"	f
snakeAttributes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static $snakeAttributes = true;$/;"	v
snakeCache	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	protected static $snakeCache = [];$/;"	v
snake_case	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function snake_case($value, $delimiter = '_')$/;"	f
socket	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $socket   = (isset($p['socket'])) ? $p['socket'] : null;$/;"	v
softDeletes	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function softDeletes()$/;"	f
sort	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    protected function sort()$/;"	f
sort	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function sort($array, Closure $callback)$/;"	f
sort	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function sort(Closure $callback)$/;"	f
sortBy	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function sortBy($callback, $options = SORT_REGULAR, $descending = false)$/;"	f
sortByDesc	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function sortByDesc($callback, $options = SORT_REGULAR)$/;"	f
sortListeners	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	protected function sortListeners($eventName)$/;"	f
sorted	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^                $this->sorted = false;$/;"	v
sorted	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^            $this->sorted = true;$/;"	v
sorted	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^        $this->sorted                   = false;$/;"	v
sorted	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^        $this->sorted = false;$/;"	v
sorted	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    protected $sorted = false;$/;"	v
sorted	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	protected $sorted = array();$/;"	v
source	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^        $this->source = $this->createSourceFromAdapter($adapter);$/;"	v
source	.\Source\application\library\Zend\Db\Metadata\Metadata.php	/^    protected $source = null;$/;"	v
source	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^        $this->source = $source;$/;"	v
source	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^    protected $source;$/;"	v
source	.\Source\application\library\vendor\symfony\translation\Dumper\CsvFileDumper.php	/^        foreach ($messages->all($domain) as $source => $target) {$/;"	v
source	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^        foreach ($messages->all($domain) as $source => $target) {$/;"	v
source	.\Source\application\library\vendor\symfony\translation\Dumper\IniFileDumper.php	/^        foreach ($messages->all($domain) as $source => $target) {$/;"	v
source	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^        foreach ($messages->all($domain) as $source => $target) {$/;"	v
source	.\Source\application\library\vendor\symfony\translation\Dumper\PoFileDumper.php	/^        foreach ($messages->all($domain) as $source => $target) {$/;"	v
source	.\Source\application\library\vendor\symfony\translation\Dumper\QtFileDumper.php	/^        foreach ($messages->all($domain) as $source => $target) {$/;"	v
source	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^        foreach ($messages->all($domain) as $source => $target) {$/;"	v
source	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $source = $segment->source;$/;"	v
source	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $source = isset($attributes['resname']) && $attributes['resname'] ? $attributes['resname'] : $translation->source;$/;"	v
sourcesSize	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^        $sourcesSize = strlen($sources);$/;"	v
sourcesStart	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^        $sourcesStart = $header['offsetHashes'] + 1;$/;"	v
spec	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractTimestampColumn.php	/^        $spec = $this->specification;$/;"	v
spec	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^        $spec = $this->specification;$/;"	v
spec	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^        $spec = static::PERIOD_PREFIX;$/;"	v
specDays	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^        $specDays = 0;$/;"	v
specPart	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^            $specPart = '%s';$/;"	v
specific	.\Source\application\library\Zend\Db\TableGateway\Feature\GlobalAdapterFeature.php	/^        \/\/ class specific adapter$/;"	c
specification	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    protected $specification = '%s %s';$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^    protected $specification = '';$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\Check.php	/^    protected $specification = 'CHECK (%s)';$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\PrimaryKey.php	/^    protected $specification = 'PRIMARY KEY';$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\UniqueKey.php	/^    protected $specification = 'UNIQUE';$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^    protected $specification = 'INDEX %s(...)';$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^        $this->specification = $specification;$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Predicate\Between.php	/^    protected $specification = '%1$s BETWEEN %2$s AND %3$s';$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^            $specification = vsprintf($/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^    protected $specification = '%s IN %s';$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Predicate\IsNotNull.php	/^    protected $specification = '%1$s IS NOT NULL';$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Predicate\IsNull.php	/^        $this->specification = $specification;$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Predicate\IsNull.php	/^    protected $specification = '%1$s IS NULL';$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^        $this->specification = $specification;$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Predicate\Like.php	/^    protected $specification = '%1$s LIKE %2$s';$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Predicate\NotIn.php	/^    protected $specification = '%s NOT IN %s';$/;"	v
specification	.\Source\application\library\Zend\Db\Sql\Predicate\NotLike.php	/^    protected $specification = '%1$s NOT LIKE %2$s';$/;"	v
specificationString	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        foreach ($specifications as $specificationString => $paramSpecs) {$/;"	v
specifications	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^    protected $specifications = array();$/;"	v
specifications	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    protected $specifications = array($/;"	v
specifications	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected $specifications = array($/;"	v
specifications	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected $specifications = array($/;"	v
specifications	.\Source\application\library\Zend\Db\Sql\Ddl\DropTable.php	/^    protected $specifications = array($/;"	v
specifications	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    protected $specifications = array($/;"	v
specifications	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    protected $specifications = array($/;"	v
specifications	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $specifications = array($/;"	v
specifications	.\Source\application\library\Zend\Db\Sql\Update.php	/^    protected $specifications = array($/;"	v
splice	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function splice($offset, $length = 0, $replacement = array())$/;"	f
splitEmailParts	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected function splitEmailParts($value)$/;"	f
splitJwt	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^    protected function splitJwt($jwt)$/;"	f
sql	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public function sql($query)$/;"	f
sql	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^            $sql = $this->sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^        $this->sql = $sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Statement.php	/^    protected $sql = '';$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $sql = ($sql) ?: $this->sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $this->sql = $sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^    protected $sql = '';$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        $sql = ($sql) ?: $this->sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        $this->sql = $sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^    protected $sql = '';$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                $sql = 'SELECT CURRENT_SCHEMA';$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                $sql = 'SELECT DATABASE()';$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                $sql = 'SELECT SCHEMA_NAME()';$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\OracleRowCounter.php	/^        $sql = $statement->getSql();$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^        $sql = $statement->getSql();$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^            $sql = $this->sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^        $this->sql = $sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^    protected $sql = '';$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^        $sql = ($sql) ?: $this->sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^        $sql = preg_replace_callback($/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^        $this->sql = $sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    protected $sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $sql = 'SELECT @@IDENTITY as Current_Identity';$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $sql = ($sql) ?: $this->sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $this->sql = $sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    protected $sql = null;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\StatementContainer.php	/^        $this->sql = $sql;$/;"	v
sql	.\Source\application\library\Zend\Db\Adapter\StatementContainer.php	/^    protected $sql = '';$/;"	v
sql	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^        $sql = 'SELECT ' . $p->quoteIdentifier('SCHEMA_NAME')$/;"	v
sql	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^        $sql = 'SELECT ' . implode(', ', $isColumns)$/;"	v
sql	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $sql = '$/;"	v
sql	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $sql = 'SELECT ' . implode(', ', $isColumns)$/;"	v
sql	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $sql = 'SELECT USERNAME FROM ALL_USERS';$/;"	v
sql	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        $sql = 'SELECT ' . $p->quoteIdentifier('schema_name')$/;"	v
sql	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        $sql = 'SELECT ' . implode(', ', $isColumns)$/;"	v
sql	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        $sql = 'SELECT ' . $p->quoteIdentifier('SCHEMA_NAME')$/;"	v
sql	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        $sql = 'SELECT ' . implode(', ', $isColumns)$/;"	v
sql	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $sql = 'PRAGMA ';$/;"	v
sql	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $sql = 'SELECT "name", "tbl_name", "sql" FROM '$/;"	v
sql	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $sql = 'SELECT "name", "type", "sql" FROM ' . $p->quoteIdentifierChain(array($schema, 'sqlite_master'))$/;"	v
sql	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    protected $sql = null;$/;"	v
sql	.\Source\application\library\Zend\Db\RowGateway\RowGateway.php	/^            $this->sql = $adapterOrSql;$/;"	v
sql	.\Source\application\library\Zend\Db\RowGateway\RowGateway.php	/^            $this->sql = new Sql($adapterOrSql, $this->table);$/;"	v
sql	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            $sql = $decorator->buildSqlString($platform, $driver, $parameterContainer);$/;"	v
sql	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $sql = '';$/;"	v
sql	.\Source\application\library\Zend\Db\Sql\Combine.php	/^        $sql = '';$/;"	v
sql	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^                    $sql = substr_replace($sql, $insert, $insertStart[$j], 0);$/;"	v
sql	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^            $sql           = $this->processExpression($column, $adapterPlatform);$/;"	v
sql	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^                    $sql = substr_replace($sql, $insert, $insertStart[$j], 0);$/;"	v
sql	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^            $sql           = $this->processExpression($column, $platform);$/;"	v
sql	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^            $this->sql = new Sql($this->adapter, $this->table);$/;"	v
sql	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $sql = $this->sql;$/;"	v
sql	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $this->sql = clone $this->sql;$/;"	v
sql	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    protected $sql = null;$/;"	v
sql	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^                $sql = 'SELECT ' . $platform->quoteIdentifier($this->sequenceName) . '.CURRVAL as "currval" FROM dual';$/;"	v
sql	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^                $sql = 'SELECT ' . $platform->quoteIdentifier($this->sequenceName) . '.NEXTVAL as "nextval" FROM dual';$/;"	v
sql	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^                $sql = 'SELECT CURRVAL(\\'' . $this->sequenceName . '\\')';$/;"	v
sql	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^                $sql = 'SELECT NEXTVAL(\\'"' . $this->sequenceName . '"\\')';$/;"	v
sql	.\Source\application\library\Zend\Db\TableGateway\TableGateway.php	/^        $this->sql = ($sql) ?: new Sql($this->adapter, $this->table);$/;"	v
sql	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $sql = new Sql($this->getAdapter());$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^		$this->sql = $sql;$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\QueryException.php	/^	protected $sql;$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$sql = $this->grammar->compileDelete($this);$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$sql = $this->grammar->compileInsert($this, $values);$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$sql = $this->grammar->compileInsertGetId($this, $values, $sequence);$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$sql = $this->grammar->compileUpdate($this, $values);$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		foreach ($this->grammar->compileTruncate($this) as $sql => $bindings)$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^			$sql = implode(' ', $sql);$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$sql = '';$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$sql = array();$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$sql = implode(' ', array_map(array($this, 'compileHaving'), $havings));$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^			$sql = '('.$sql.') '.$this->compileUnions($query);$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^		$sql = parent::compileSelect($query);$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^		$sql = parent::compileUpdate($query, $values);$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^		$sql = array('delete from sqlite_sequence where name = ?' => array($query->from));$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^		$sql = $this->concatenate($components);$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^		$sql = $this->grammar->compileTableExists();$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^			$sql = $this->wrap($column).' '.$this->getType($column);$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$sql = "alter table {$table} add constraint {$command->index} ";$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^		$sql = $this->compileCreateEncoding($sql, $connection);$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^		$sql = 'create table '.$this->wrapTable($blueprint)." ($columns)";$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$sql = '';$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$sql = 'create table '.$this->wrapTable($blueprint)." ($columns";$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\MySqlBuilder.php	/^		$sql = $this->grammar->compileColumnExists();$/;"	v
sql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\MySqlBuilder.php	/^		$sql = $this->grammar->compileTableExists();$/;"	v
sqlLength	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^        $sqlLength   = strlen($sql);$/;"	v
sqlLength	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^        $sqlLength   = strlen($sql);$/;"	v
sqlPlatform	.\Source\application\library\Zend\Db\Sql\Sql.php	/^        $this->sqlPlatform = $sqlPlatform ?: new Platform\\Platform($adapter);$/;"	v
sqlPlatform	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    protected $sqlPlatform = null;$/;"	v
sqlServerPlatform	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^        $sqlServerPlatform = new SqlServer\\SqlServer();$/;"	v
sqlStr	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^                $sqlStr = $this->tableGateway->getSql()->getSqlStringForSqlObject($select);$/;"	v
sqlStr	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^        $sqlStr="";$/;"	v
sqliteRowCounter	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Feature\SqliteRowCounter.php	/^        $sqliteRowCounter = $this;$/;"	v
sqls	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $sqls       = array();$/;"	v
sqls	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^        $sqls = array();$/;"	v
sqls	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^        $sqls = array();$/;"	v
sqls	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^        $sqls = array();$/;"	v
sqls	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^        $sqls = array();$/;"	v
sqlsrv	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^            $this->sqlsrv = $resource;$/;"	v
sqlsrv	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^    protected $sqlsrv = null;$/;"	v
stack	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^        $stack = & static::$stack[count(static::$stack) - 1];$/;"	v
stack	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^        $stack = new ErrorException($errstr, 0, $errno, $errfile, $errline, $stack);$/;"	v
stack	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^    protected static $stack = array();$/;"	v
standardRules	.\Source\application\library\vendor\symfony\translation\MessageSelector.php	/^        $standardRules = array();$/;"	v
starSuffix	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^        $starSuffix = $platform->getIdentifierSeparator() . self::SQL_STAR;$/;"	v
starSuffix	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^        $starSuffix = $platform->getIdentifierSeparator() . self::SQL_STAR;$/;"	v
starSuffix	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^        $starSuffix = $platform->getIdentifierSeparator() . self::SQL_STAR;$/;"	v
start	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^    public function start()$/;"	f
start	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function start();$/;"	f
start	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function start($preserveStorage = false)$/;"	f
start	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^    public static function start($errorLevel = \\E_WARNING)$/;"	f
start	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$start = microtime(true);$/;"	v
start	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$start = ($paginator->getCurrentPage() - 1) * $perPage;$/;"	v
start	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^		$start = $query->offset + 1;$/;"	v
start	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^		$start = 9999;$/;"	v
start	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $start = $end;$/;"	v
start	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $start = $this;$/;"	v
start	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $start = 0;$/;"	v
start	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            $start = iconv_strlen($s, $encoding) + $start;$/;"	v
startOfCentury	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function startOfCentury()$/;"	f
startOfDay	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function startOfDay()$/;"	f
startOfDecade	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function startOfDecade()$/;"	f
startOfMonth	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function startOfMonth()$/;"	f
startOfWeek	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function startOfWeek()$/;"	f
startOfYear	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function startOfYear()$/;"	f
started	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^    public static function started()$/;"	f
startsWith	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function startsWith($haystack, $needles)$/;"	f
starts_with	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function starts_with($haystack, $needles)$/;"	f
stat	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^        $stat = fstat($stream);$/;"	v
state	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^            $state = self::MESSAGE_DEFINED;$/;"	v
state	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^            $state = self::MESSAGE_EQUALS_FALLBACK;$/;"	v
state	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^            $state = self::MESSAGE_MISSING;$/;"	v
statement	.\Source\application\library\Zend\Db\Adapter\Adapter.php	/^        $statement = $this->driver->createStatement($initialSql);$/;"	v
statement	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^        $statement = clone $this->statementPrototype;$/;"	v
statement	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^        $statement = clone $this->statementPrototype;$/;"	v
statement	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^        $statement = clone $this->statementPrototype;$/;"	v
statement	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^        $statement = $this->driver->createStatement($sql);$/;"	v
statement	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^        $statement = clone $this->statementPrototype;$/;"	v
statement	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^        $statement = clone $this->statementPrototype;$/;"	v
statement	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Connection.php	/^        $statement = $this->driver->createStatement($sql);$/;"	v
statement	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^        $statement = clone $this->statementPrototype;$/;"	v
statement	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^            $statement = $this->sql->prepareStatementForSqlObject($insert);$/;"	v
statement	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^            $statement = $this->sql->prepareStatementForSqlObject($this->sql->update()->set($data)->where($where));$/;"	v
statement	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^        $statement = $this->sql->prepareStatementForSqlObject($this->sql->delete()->where($where));$/;"	v
statement	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^        $statement = $this->sql->prepareStatementForSqlObject($this->sql->select()->where($where));$/;"	v
statement	.\Source\application\library\Zend\Db\Sql\Sql.php	/^        $statement = $statement ?: $adapter->getDriver()->createStatement();$/;"	v
statement	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function prepareStatementForSqlObject(PreparableSqlInterface $sqlObject, StatementInterface $statement = null, AdapterInterface $adapter = null)$/;"	v
statement	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $statement = $this->sql->prepareStatementForSqlObject($delete);$/;"	v
statement	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $statement = $this->sql->prepareStatementForSqlObject($insert);$/;"	v
statement	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $statement = $this->sql->prepareStatementForSqlObject($select);$/;"	v
statement	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $statement = $this->sql->prepareStatementForSqlObject($update);$/;"	v
statement	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^        $statement = $this->tableGateway->adapter->createStatement();$/;"	v
statement	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $statement = $sql->prepareStatementForSqlObject($select);$/;"	v
statement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^			$statement = $me->getPdo()->prepare($query);$/;"	v
statement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^			$statement = $this->getPdoForSelect($useReadPdo)->prepare($query);$/;"	v
statement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function statement($query, $bindings = array())$/;"	f
statement	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function statement($query, $bindings = array());$/;"	f
statementBindValues	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    protected $statementBindValues = array('keys' => null, 'values' => array());$/;"	v
statementBindValues	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    protected $statementBindValues = array('keys' => null, 'values' => array());$/;"	v
statementIndex	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    protected static $statementIndex = 0;$/;"	v
statementMode	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    protected $statementMode = self::STATEMENT_MODE_FORWARD;$/;"	v
statementName	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^        $this->statementName = 'statement' . ++static::$statementIndex;$/;"	v
statementName	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Statement.php	/^    protected $statementName = '';$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^        $this->statementPrototype = $statementPrototype;$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    protected $statementPrototype;$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function __construct($connection, Statement $statementPrototype = null, Result $resultPrototype = null)$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^        $this->statementPrototype = $statementPrototype;$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    protected $statementPrototype = null;$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function __construct($connection, Statement $statementPrototype = null, Result $resultPrototype = null, array $options = array())$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^        $this->statementPrototype = $statementPrototype;$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    protected $statementPrototype = null;$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function __construct($connection, Statement $statementPrototype = null, Result $resultPrototype = null)$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^        $this->statementPrototype = $statementPrototype;$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    protected $statementPrototype = null;$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function __construct($connection, Statement $statementPrototype = null, Result $resultPrototype = null, $features = self::FEATURES_DEFAULT)$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^        $this->statementPrototype = $statement;$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    protected $statementPrototype = null;$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function __construct($connection, Statement $statementPrototype = null, Result $resultPrototype = null, $options = null)$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^        $this->statementPrototype = $statementPrototype;$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    protected $statementPrototype = null;$/;"	v
statementPrototype	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function __construct($connection, Statement $statementPrototype = null, Result $resultPrototype = null)$/;"	v
statements	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^					$statements = array_merge($statements, (array) $sql);$/;"	v
statements	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^		$statements = array();$/;"	v
statements	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$statements = array();$/;"	v
staticAdapters	.\Source\application\library\Zend\Db\TableGateway\Feature\GlobalAdapterFeature.php	/^    protected static $staticAdapters = array();$/;"	v
status	.\Source\application\library\Zend\Validator\Hostname.php	/^                                    $status = false;$/;"	v
status	.\Source\application\library\Zend\Validator\Hostname.php	/^                            $status = false;$/;"	v
status	.\Source\application\library\Zend\Validator\Hostname.php	/^                            $status = preg_match($regexChar, $domainPart);$/;"	v
status	.\Source\application\library\Zend\Validator\Hostname.php	/^                        $status = false;$/;"	v
status	.\Source\application\library\Zend\Validator\Hostname.php	/^                    $status = false;$/;"	v
status	.\Source\application\library\Zend\Validator\Hostname.php	/^            $status = false;$/;"	v
status	.\Source\application\library\Zend\Validator\Hostname.php	/^        $status = preg_match($regexLocal, $value);$/;"	v
status	.\Source\application\library\Zend\Validator\Regex.php	/^        $status        = preg_match($this->pattern, "Test");$/;"	v
status	.\Source\application\library\Zend\Validator\Regex.php	/^        $status = preg_match($this->pattern, $value);$/;"	v
status	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^	public static function json($data = array(), $status = 200, array $headers = array(), $options = 0)$/;"	v
status	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^	public static function make($content = '', $status = 200, array $headers = array())$/;"	v
status	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^	public static function stream($callback, $status = 200, array $headers = array())$/;"	v
step	.\Source\application\library\Zend\Validator\DateStep.php	/^        $step      = $this->getStep();$/;"	v
step	.\Source\application\library\Zend\Validator\DateStep.php	/^        $this->step = $step;$/;"	v
step	.\Source\application\library\Zend\Validator\DateStep.php	/^    protected $step;$/;"	v
step	.\Source\application\library\Zend\Validator\Step.php	/^        $this->step = (float) $step;$/;"	v
step	.\Source\application\library\Zend\Validator\Step.php	/^    protected $step = 1;$/;"	v
stepValue	.\Source\application\library\Zend\Validator\DateStep.php	/^                    $stepValue    = (int) $value;$/;"	v
stepValue	.\Source\application\library\Zend\Validator\DateStep.php	/^            $stepValue    = null;$/;"	v
stmt	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $stmt = oci_parse($this->resource, $query);$/;"	v
stop	.\Source\application\library\Zend\Stdlib\ErrorHandler.php	/^    public static function stop($throw = false)$/;"	f
stopPropagation	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    public function stopPropagation($flag = true)$/;"	f
storage	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $storage   = $this->getStorage();$/;"	v
storage	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $storage   = $this->verifyNamespace();$/;"	v
storage	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $storage = $this->getStorage();$/;"	v
storage	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $storage = $this->verifyNamespace();$/;"	v
storage	.\Source\application\library\Zend\Session\AbstractManager.php	/^            $storage = new $this->defaultStorageClass();$/;"	v
storage	.\Source\application\library\Zend\Session\AbstractManager.php	/^        $this->storage = $storage;$/;"	v
storage	.\Source\application\library\Zend\Session\AbstractManager.php	/^        Storage $storage = null,$/;"	v
storage	.\Source\application\library\Zend\Session\AbstractManager.php	/^    protected $storage;$/;"	v
storage	.\Source\application\library\Zend\Session\Container.php	/^        $storage = $this->getStorage();$/;"	v
storage	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^            $storage = $services->get('Zend\\Session\\Storage\\StorageInterface');$/;"	v
storage	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^        $storage       = null;$/;"	v
storage	.\Source\application\library\Zend\Session\Service\StorageFactory.php	/^            $storage = Factory::factory($type, $options);$/;"	v
storage	.\Source\application\library\Zend\Session\SessionManager.php	/^        $storage  = $this->getStorage();$/;"	v
storage	.\Source\application\library\Zend\Session\SessionManager.php	/^        $storage = $this->getStorage();$/;"	v
storage	.\Source\application\library\Zend\Session\SessionManager.php	/^        Storage\\StorageInterface $storage = null,$/;"	v
storage	.\Source\application\library\Zend\Session\ValidatorChain.php	/^        $this->storage = $storage;$/;"	v
storage	.\Source\application\library\Zend\Session\ValidatorChain.php	/^    protected $storage;$/;"	v
storage	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^        $storage = $this->storage;$/;"	v
storage	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^        $this->storage = $data;$/;"	v
storage	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^        $this->storage = $input;$/;"	v
storage	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    protected $storage;$/;"	v
storage_path	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function storage_path($path = '')$/;"	f
str	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $this->str = $str;$/;"	v
str	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    protected $str;$/;"	v
strPad	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    public function strPad($input, $padLength, $padString = ' ', $padType = STR_PAD_RIGHT)$/;"	f
strPad	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function strPad($input, $padLength, $padString = ' ', $padType = STR_PAD_RIGHT);$/;"	f
strWrapper	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^        $strWrapper = $this->getUtf8StringWrapper();$/;"	v
str_contains	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function str_contains($haystack, $needles)$/;"	f
str_finish	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function str_finish($value, $cap)$/;"	f
str_is	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function str_is($pattern, $value)$/;"	f
str_limit	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function str_limit($value, $limit = 100, $end = '...')$/;"	f
str_plural	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function str_plural($value, $count = 2)$/;"	f
str_random	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function str_random($length = 16)$/;"	f
str_replace_array	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function str_replace_array($search, array $replace, $subject)$/;"	f
str_singular	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function str_singular($value)$/;"	f
strategies	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^        $this->strategies = new ArrayObject();$/;"	v
strategies	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^    protected $strategies;$/;"	v
strategy	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^            $strategy = $this->getStrategy($name);$/;"	v
strategy	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\CompositeNamingStrategy.php	/^        $strategy = isset($this->namingStrategies[$name])$/;"	v
stream	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^	public static function stream($callback, $status = 200, array $headers = array())$/;"	f
stream	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^        $stream = fopen($resource, 'r');$/;"	v
stream	.\Source\application\library\vendor\symfony\translation\Loader\PoFileLoader.php	/^        $stream = fopen($resource, 'r');$/;"	v
strict	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^     * has been added to prevent this. When $strict = 0\/false, the most secure$/;"	v
strict	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^     * non-strict check is implemented. if $strict = -1, the default in_array$/;"	v
strict	.\Source\application\library\Zend\Stdlib\ArrayUtils.php	/^    public static function inArray($needle, array $haystack, $strict = false)$/;"	v
strict	.\Source\application\library\Zend\Validator\Bitwise.php	/^        $this->strict = (bool) $strict;$/;"	v
strict	.\Source\application\library\Zend\Validator\Bitwise.php	/^    protected $strict = false;$/;"	v
strict	.\Source\application\library\Zend\Validator\Identical.php	/^        $strict = $this->getStrict();$/;"	v
strict	.\Source\application\library\Zend\Validator\Identical.php	/^        $this->strict = (bool) $strict;$/;"	v
strict	.\Source\application\library\Zend\Validator\Identical.php	/^    protected $strict  = true;$/;"	v
strict	.\Source\application\library\Zend\Validator\InArray.php	/^            || $this->strict == self::COMPARE_STRICT$/;"	v
strict	.\Source\application\library\Zend\Validator\InArray.php	/^        $this->strict = $strict;$/;"	v
strict	.\Source\application\library\Zend\Validator\InArray.php	/^     * an option has been added to prevent this. When $strict = 0\/false, the most$/;"	v
strict	.\Source\application\library\Zend\Validator\InArray.php	/^     * secure non-strict check is implemented. if $strict = -1, the default in_array non-strict$/;"	v
strict	.\Source\application\library\Zend\Validator\InArray.php	/^    protected $strict = self::COMPARE_NOT_STRICT_AND_PREVENT_STR_TO_INT_VULNERABILITY;$/;"	v
strict	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function search($value, $strict = false)$/;"	v
string	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $string = (string) $string;$/;"	v
string	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function string($column, $length = 255)$/;"	f
string	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^        $string = trim(preg_replace('\/\\s+\/', ' ', $string));$/;"	v
stringWidth	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $stringWidth = $this->strlen($string);$/;"	v
stringWrapper	.\Source\application\library\Zend\Validator\StringLength.php	/^            $this->stringWrapper = StringUtils::getWrapper($this->getEncoding());$/;"	v
stringWrapper	.\Source\application\library\Zend\Validator\StringLength.php	/^        $this->stringWrapper = $stringWrapper;$/;"	v
stringWrapper	.\Source\application\library\Zend\Validator\StringLength.php	/^        $this->stringWrapper = StringUtils::getWrapper($encoding);$/;"	v
stringWrapper	.\Source\application\library\Zend\Validator\StringLength.php	/^    protected $stringWrapper;$/;"	v
strlen	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^    public function strlen($str)$/;"	f
strlen	.\Source\application\library\Zend\Stdlib\StringWrapper\Intl.php	/^    public function strlen($str)$/;"	f
strlen	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^    public function strlen($str)$/;"	f
strlen	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^    public function strlen($str)$/;"	f
strlen	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function strlen($str);$/;"	f
strpos	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^    public function strpos($haystack, $needle, $offset = 0)$/;"	f
strpos	.\Source\application\library\Zend\Stdlib\StringWrapper\Intl.php	/^    public function strpos($haystack, $needle, $offset = 0)$/;"	f
strpos	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^    public function strpos($haystack, $needle, $offset = 0)$/;"	f
strpos	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^    public function strpos($haystack, $needle, $offset = 0)$/;"	f
strpos	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function strpos($haystack, $needle, $offset = 0);$/;"	f
stub	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^			$stub = $create ? 'create.stub' : 'update.stub';$/;"	v
stub	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^			$stub = str_replace('{{table}}', $table, $stub);$/;"	v
stub	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^		$stub = $this->getStub($table, $create);$/;"	v
stub	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^		$stub = str_replace('{{class}}', $this->getClassName($name), $stub);$/;"	v
studly	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function studly($value)$/;"	f
studlyCache	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	protected static $studlyCache = [];$/;"	v
studly_case	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function studly_case($value)$/;"	f
sub	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^        $sub = null,$/;"	v
subDay	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subDay($value = 1)$/;"	f
subDays	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subDays($value)$/;"	f
subHour	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subHour($value = 1)$/;"	f
subHours	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subHours($value)$/;"	f
subMinute	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subMinute($value = 1)$/;"	f
subMinutes	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subMinutes($value)$/;"	f
subMonth	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subMonth($value = 1)$/;"	f
subMonthNoOverflow	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subMonthNoOverflow($value = 1)$/;"	f
subMonths	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subMonths($value)$/;"	f
subMonthsNoOverflow	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subMonthsNoOverflow($value)$/;"	f
subPattern	.\Source\application\library\Zend\Stdlib\Glob.php	/^            $subPattern = substr($pattern, 0, $begin)$/;"	v
subSecond	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subSecond($value = 1)$/;"	f
subSeconds	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subSeconds($value)$/;"	f
subWeek	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subWeek($value = 1)$/;"	f
subWeekday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subWeekday($value = 1)$/;"	f
subWeekdays	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subWeekdays($value)$/;"	f
subWeeks	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subWeeks($value)$/;"	f
subYear	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subYear($value = 1)$/;"	f
subYears	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function subYears($value)$/;"	f
subject	.\Source\application\library\Zend\Db\Sql\Platform\AbstractPlatform.php	/^        $this->subject = $subject;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\AbstractPlatform.php	/^    protected $subject;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^        $this->subject = $select;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\IbmDb2\SelectDecorator.php	/^    protected $subject = null;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^        $this->subject = $subject;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\AlterTableDecorator.php	/^    protected $subject;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^        $this->subject = $subject;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\Ddl\CreateTableDecorator.php	/^    protected $subject;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\SelectDecorator.php	/^        $this->subject = $select;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\Mysql\SelectDecorator.php	/^    protected $subject = null;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^        $this->subject = $select;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\Oracle\SelectDecorator.php	/^    protected $subject = null;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\Ddl\CreateTableDecorator.php	/^        $this->subject = $subject;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\Ddl\CreateTableDecorator.php	/^    protected $subject;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^        $this->subject = $select;$/;"	v
subject	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\SelectDecorator.php	/^    protected $subject = null;$/;"	v
subject	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^			$subject = preg_replace('\/'.$search.'\/', $value, $subject, 1);$/;"	v
subnode	.\Source\application\library\vendor\symfony\translation\Loader\ArrayLoader.php	/^            $subnode = &$messages;$/;"	v
subnode	.\Source\application\library\vendor\symfony\translation\Loader\ArrayLoader.php	/^    private function flatten(array &$messages, array $subnode = null, $path = null)$/;"	v
subscribe	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function subscribe($subscriber)$/;"	f
subscriber	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^		$subscriber = $this->resolveSubscriber($subscriber);$/;"	v
substr	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^    public function substr($str, $offset = 0, $length = null)$/;"	f
substr	.\Source\application\library\Zend\Stdlib\StringWrapper\Intl.php	/^    public function substr($str, $offset = 0, $length = null)$/;"	f
substr	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^    public function substr($str, $offset = 0, $length = null)$/;"	f
substr	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^    public function substr($str, $offset = 0, $length = null)$/;"	f
substr	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function substr($str, $offset = 0, $length = null);$/;"	f
substr	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^        $substr = '';$/;"	v
substr	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^    protected static function substr($string, $start, $end)$/;"	f
successLangcodes	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^    public function successLangcodes()$/;"	f
sum	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $sum     = 0;$/;"	v
sum	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^            $sum = 103;$/;"	v
sum	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^            $sum = 104;$/;"	v
sum	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^            $sum = 105;$/;"	v
sum	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^        $sum        = 0;$/;"	v
sum	.\Source\application\library\Zend\Validator\CreditCard.php	/^        $sum    = 0;$/;"	v
sum	.\Source\application\library\Zend\Validator\Isbn.php	/^                $sum    = 0;$/;"	v
sum	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function sum($column)$/;"	f
sum	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function sum($callback = null)$/;"	f
supportedEncodings	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $supportedEncodings = static::getSupportedEncodings();$/;"	v
supportedEncodings	.\Source\application\library\Zend\Stdlib\StringWrapper\Native.php	/^        $supportedEncodings = static::getSupportedEncodings();$/;"	v
swap	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Facade.php	/^	public static function swap($instance)$/;"	f
sync	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function setRawAttributes(array $attributes, $sync = false)$/;"	v
sync	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function sync($ids, $detaching = true)$/;"	f
syncOriginal	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function syncOriginal()$/;"	f
syncOriginalAttribute	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function syncOriginalAttribute($attribute)$/;"	f
systemGlob	.\Source\application\library\Zend\Stdlib\Glob.php	/^    protected static function systemGlob($pattern, $flags)$/;"	f
t	.\Source\application\library\Zend\Db\TableGateway\Feature\MetadataFeature.php	/^        $t = $this->tableGateway;$/;"	v
t	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $t = $segment->appendChild($targetElement);$/;"	v
t	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $t = $translation->appendChild($targetElement);$/;"	v
table	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^                $table = new Object\\TableObject($tableName);$/;"	v
table	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^                $table = new Object\\ViewObject($tableName);$/;"	v
table	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^                    $table = array_merge($table, $data);$/;"	v
table	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^                $table = array($/;"	v
table	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    protected $table = null;$/;"	v
table	.\Source\application\library\Zend\Db\RowGateway\RowGateway.php	/^        $this->table = $table;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            $table = $platform->quoteIdentifier($schema) . $platform->getIdentifierSeparator() . $table;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            $table = $platform->quoteIdentifier($table);$/;"	v
table	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            $table = '(' . $this->processSubselect($table, $platform, $driver, $parameterContainer) . ')';$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^        $this->table = $name;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Ddl\AlterTable.php	/^    protected $table = '';$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^        $this->table = $name;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^        $this->table = $table;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Ddl\CreateTable.php	/^    protected $table = '';$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Ddl\DropTable.php	/^        $this->table = $table;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Ddl\DropTable.php	/^    protected $table = '';$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Delete.php	/^        $this->table = $table;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    protected $table = '';$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Insert.php	/^        $this->table = $table;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    protected $table            = null;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Platform\SqlServer\Ddl\CreateTableDecorator.php	/^        $table = ($this->isTemporary ? '#' : '') . ltrim($this->table, '#');$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $this->table = null;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $table = $this->renderTable($table, $fromTable);$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $table = current($table);$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $table = parent::resolveTable($table, $platform, $driver, $parameterContainer);$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $this->table = $table;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $table = null;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Sql.php	/^            $this->table = $table;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    protected $table = null;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function __construct(AdapterInterface $adapter, $table = null, Platform\\AbstractPlatform $sqlPlatform = null)$/;"	v
table	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^        $this->table = $table;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^        $this->table = (string) $table;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\TableIdentifier.php	/^    protected $table;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Update.php	/^        $this->table = $table;$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Update.php	/^    protected $table = '';$/;"	v
table	.\Source\application\library\Zend\Db\Sql\Update.php	/^    public function table($table)$/;"	f
table	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^            $this->table = clone $this->table;$/;"	v
table	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    protected $table = null;$/;"	v
table	.\Source\application\library\Zend\Db\TableGateway\TableGateway.php	/^        $this->table = $table;$/;"	v
table	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $this->table  = (string) $table;$/;"	v
table	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^    protected $table = '';$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Capsule\Manager.php	/^	public static function table($table, $connection = null)$/;"	f
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function table($table)$/;"	f
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function table($table);$/;"	f
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^		$table = $this->input->getOption('table');$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^		if ( ! $table && is_string($create)) $table = $create;$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$table = $this->joiningTable($related);$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$table = $instance->getTable();$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$table = $table ?: str_plural($name);$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->table = $table;$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $table;$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function belongsToMany($related, $table = null, $foreignKey = null, $otherKey = null, $relation = null)$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function morphToMany($related, $name, $table = null, $foreignKey = null, $otherKey = null, $inverse = false)$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function morphedByMany($related, $name, $table = null, $foreignKey = null, $otherKey = null)$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^			$table = $this->related->getTable();$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$this->table = $table;$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected $table;$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^		$table = $this->parent->getTable();$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\MigrationServiceProvider.php	/^			$table = $app['config']['database.migrations'];$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^		$this->table = $table;$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	protected $table;$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\DatabaseMigrationRepository.php	/^	protected function table()$/;"	f
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Migrations\MigrationCreator.php	/^	public function create($name, $path, $table = null, $create = false)$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^			$table = $this->wrapTable($join->table);$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$table = $this->wrapTable($query->from);$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^		$table = $this->wrapTable($query->from);$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^		$table = $this->wrapTable($query->from);$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^		$table = $this->wrapTable($query->from);$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^		$this->table = $table;$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public $table;$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^		$this->table = $table;$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	protected $table;$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^		$table = $this->connection->getTablePrefix().$table;$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Builder.php	/^	public function table($table, Closure $callback)$/;"	f
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$table = $this->getTablePrefix().$blueprint->getTable();$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$table = $this->wrapTable($blueprint);$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		if ($table instanceof Blueprint) $table = $table->getTable();$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^		$table = $this->wrapTable($blueprint);$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^		$table = $blueprint->getTable();$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^		$table = $this->wrapTable($blueprint);$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$table = $this->wrapTable($blueprint);$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^		$table = $this->wrapTable($blueprint);$/;"	v
table	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\MySqlBuilder.php	/^		$table = $this->connection->getTablePrefix().$table;$/;"	v
table	.\Source\application\resource\Model\Relation.php	/^	protected $table = 'tb_relation';$/;"	v
table	.\Source\application\resource\Model\User.php	/^	protected $table = 'tb_user';$/;"	v
tableData	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^            $tableData      = array_values($insertState['table']);$/;"	v
tableDiff	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$tableDiff = $this->getDoctrineTableDiff($blueprint, $schema);$/;"	v
tableDiff	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$tableDiff = $this->getRenamedDiff($blueprint, $command, $column, $schema);$/;"	v
tableDiff	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		$tableDiff = new TableDiff($table);$/;"	v
tableDiff	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^		$tableDiff = $this->getDoctrineTableDiff($blueprint, $schema);$/;"	v
tableGateway	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^        $this->tableGateway = $tableGateway;$/;"	v
tableGateway	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public  $tableGateway;$/;"	v
tableGateway	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^        $this->tableGateway = $tableGateway;$/;"	v
tableGateway	.\Source\application\library\Zend\Db\TableGateway\Feature\AbstractFeature.php	/^    protected $tableGateway = null;$/;"	v
tableGateway	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^        $this->tableGateway = $tableGateway;$/;"	v
tableGateway	.\Source\application\library\Zend\Db\TableGateway\Feature\FeatureSet.php	/^    protected $tableGateway = null;$/;"	v
tableGateway	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^        $this->tableGateway = $tableGateway;$/;"	v
tableGateway	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^    protected $tableGateway;$/;"	v
tableGatewayEvent	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature.php	/^        EventFeature\\TableGatewayEvent $tableGatewayEvent = null$/;"	v
tableIdentifier	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^        $tableIdentifier = new TableIdentifier($this->table, $this->schema);$/;"	v
tableName	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^        $this->tableName = $tableName;$/;"	v
tableName	.\Source\application\library\Zend\Db\Metadata\Object\ColumnObject.php	/^    protected $tableName = null;$/;"	v
tableName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^        $this->tableName = $tableName;$/;"	v
tableName	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    protected $tableName = null;$/;"	v
tableName	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        foreach ($this->data['table_names'][$schema] as $tableName => $data) {$/;"	v
tableNames	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $tableNames = $this->data['table_names'][$schema];$/;"	v
tableNames	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $tableNames = array();$/;"	v
tableObject	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^                $tableObject = clone $tableObject;$/;"	v
tablePrefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->tablePrefix = $prefix;$/;"	v
tablePrefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$this->tablePrefix = $tablePrefix;$/;"	v
tablePrefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $tablePrefix = '';$/;"	v
tablePrefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$tablePrefix = $this->query->getQuery()->getConnection()->getTablePrefix();$/;"	v
tablePrefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^		$this->tablePrefix = $prefix;$/;"	v
tablePrefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	protected $tablePrefix = '';$/;"	v
tableReadOnly	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $this->tableReadOnly = true;$/;"	v
tableReadOnly	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $tableReadOnly = false;$/;"	v
tables	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $tables = array();$/;"	v
tables	.\Source\application\library\Zend\Db\Metadata\Source\MysqlMetadata.php	/^        $tables = array();$/;"	v
tables	.\Source\application\library\Zend\Db\Metadata\Source\OracleMetadata.php	/^        $tables = array();$/;"	v
tables	.\Source\application\library\Zend\Db\Metadata\Source\PostgresqlMetadata.php	/^        $tables = array();$/;"	v
tables	.\Source\application\library\Zend\Db\Metadata\Source\SqlServerMetadata.php	/^        $tables = array();$/;"	v
tables	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $tables = array();$/;"	v
tag	.\Source\application\library\Zend\Validator\Hostname.php	/^                $tag    = ($key <= $base) ? 1 : (($key >= $base + 26) ? 26 : ($key - $base));$/;"	v
take	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function take($value)$/;"	f
take	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function take($limit = null)$/;"	f
takes	.\Source\application\library\vendor\symfony\translation\Loader\ArrayLoader.php	/^     * This function takes an array by reference and will modify it$/;"	f
takes	.\Source\application\library\vendor\symfony\translation\Loader\IcuResFileLoader.php	/^     * This function takes an array by reference and will modify it$/;"	f
target	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^        $this->target = $target;$/;"	v
target	.\Source\application\library\Zend\Db\TableGateway\Feature\EventFeature\TableGatewayEvent.php	/^    protected $target = null;$/;"	v
target	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\ExtractEvent.php	/^        $this->target           = $target;$/;"	v
target	.\Source\application\library\Zend\Stdlib\Hydrator\Aggregate\HydrateEvent.php	/^        $this->target         = $target;$/;"	v
target	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^				$target = $target->{$segment};$/;"	v
target	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^				$target = $target[$segment];$/;"	v
target	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^        $this->target = $target;$/;"	v
target	.\Source\application\library\vendor\symfony\translation\Catalogue\AbstractOperation.php	/^    protected $target;$/;"	v
target	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $target = $this->utf8ToCharset((string) (isset($segment->target) ? $segment->target : $source), $encoding);$/;"	v
target	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $target = $this->utf8ToCharset((string) (isset($translation->target) ? $translation->target : $source), $encoding);$/;"	v
targetElement	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $targetElement = $dom->createElement('target');$/;"	v
tearDown	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    protected function tearDown()$/;"	f
temp	.\Source\application\library\Zend\Validator\Barcode.php	/^                $temp = $this->options['length'];$/;"	v
temp	.\Source\application\library\Zend\Validator\Db\AbstractDb.php	/^                $temp = ArrayUtils::iteratorToArray($firstArgument);$/;"	v
temp	.\Source\application\library\Zend\Validator\Iban.php	/^        $temp = intval(substr($format, 0, 1));$/;"	v
temp	.\Source\application\library\Zend\Validator\NotEmpty.php	/^            $temp    = array();$/;"	v
temp	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $temp = $dt1;$/;"	v
tempDir	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^        $tempDir = sys_get_temp_dir();$/;"	v
template	.\Source\application\library\Alpaca\MVC\Controller\AbstractController.php	/^        $template=  APP_PATH."\/application\/modules\/{$this->getRequest()->getModuleName()}\/views\/layout\/layout.phtml";$/;"	v
template	.\Source\application\library\Alpaca\MVC\Controller\AbstractController.php	/^        $template=  APP_PATH."\/application\/modules\/{$this->getRequest()->getModuleName()}\/views\/{$this->getRequest()->getControllerName()}\/{$this->getRequest()->getActionName()}.phtml";$/;"	v
templatePostfix	.\Source\application\library\Alpaca\MVC\View\ViewModel.php	/^        $templatePostfix = self::$TemplatePostfix;$/;"	v
test	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $test = parse_url($cookiePath, PHP_URL_PATH);$/;"	v
test	.\Source\application\library\Zend\Session\ValidatorChain.php	/^            $test = array_shift($callback);$/;"	v
test	.\Source\application\library\vendor\symfony\translation\Interval.php	/^    public static function test($number, $interval)$/;"	f
test	.\Source\application\resource\Model\Relation.php	/^    public static function test(){$/;"	f
test	.\Source\application\resource\Model\User.php	/^    public static function test(){$/;"	f
test	.\Source\application\service\Test\Test.php	/^   public function test() $/;"	f
testAdd	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testAdd()$/;"	f
testAddCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testAddCatalogue()$/;"	f
testAddCatalogueWhenLocaleIsNotTheSameAsTheCurrentOne	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testAddCatalogueWhenLocaleIsNotTheSameAsTheCurrentOne()$/;"	f
testAddFallbackCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testAddFallbackCatalogue()$/;"	f
testAddFallbackCatalogueWithFallbackCircularReference	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testAddFallbackCatalogueWithFallbackCircularReference()$/;"	f
testAddFallbackCatalogueWithParentCircularReference	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testAddFallbackCatalogueWithParentCircularReference()$/;"	f
testAddResourceAfterTrans	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testAddResourceAfterTrans()$/;"	f
testAddResourceInvalidLocales	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testAddResourceInvalidLocales($locale)$/;"	f
testAddResourceValidLocales	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testAddResourceValidLocales($locale)$/;"	f
testAll	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testAll()$/;"	f
testCatalogueIsReloadedWhenResourcesAreNoLongerFresh	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    public function testCatalogueIsReloadedWhenResourcesAreNoLongerFresh()$/;"	f
testChoose	.\Source\application\library\vendor\symfony\translation\Tests\MessageSelectorTest.php	/^    public function testChoose($expected, $id, $number)$/;"	f
testCollect	.\Source\application\library\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php	/^    public function testCollect()$/;"	f
testCollectEmptyMessages	.\Source\application\library\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php	/^    public function testCollectEmptyMessages()$/;"	f
testCollectMessages	.\Source\application\library\vendor\symfony\translation\Tests\DataCollectorTranslatorTest.php	/^    public function testCollectMessages()$/;"	f
testConstructorInvalidLocale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testConstructorInvalidLocale($locale)$/;"	f
testConstructorValidLocale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testConstructorValidLocale($locale)$/;"	f
testConstructorWithoutLocale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testConstructorWithoutLocale()$/;"	f
testDatEnglishLoad	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php	/^    public function testDatEnglishLoad()$/;"	f
testDatFrenchLoad	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php	/^    public function testDatFrenchLoad()$/;"	f
testDetectsMultibyteXXEVectorsUnderFPMWithEncodedStringMissingBOM	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^    public function testDetectsMultibyteXXEVectorsUnderFPMWithEncodedStringMissingBOM($encoding, $bom, $bomLength)$/;"	f
testDetectsMultibyteXXEVectorsUnderFPMWithEncodedStringUsingBOM	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^    public function testDetectsMultibyteXXEVectorsUnderFPMWithEncodedStringUsingBOM($encoding, $bom)$/;"	f
testDetectsXXEWhenXMLDocumentEncodingDiffersFromFileEncoding	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^    public function testDetectsXXEWhenXMLDocumentEncodingDiffersFromFileEncoding($encoding, $bom)$/;"	f
testDifferentCacheFilesAreUsedForDifferentSetsOfFallbackLocales	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    public function testDifferentCacheFilesAreUsedForDifferentSetsOfFallbackLocales()$/;"	f
testDifferentTranslatorsForSameLocaleDoNotOverwriteEachOthersCache	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    public function testDifferentTranslatorsForSameLocaleDoNotOverwriteEachOthersCache($debug)$/;"	f
testDisableBackup	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^    public function testDisableBackup()$/;"	f
testDocTypeIsNotAllowed	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testDocTypeIsNotAllowed()$/;"	f
testDoesNotFlagValidMultibyteXmlAsInvalidUnderFPM	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^    public function testDoesNotFlagValidMultibyteXmlAsInvalidUnderFPM($encoding)$/;"	f
testDump	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^    public function testDump()$/;"	f
testDump	.\Source\application\library\vendor\symfony\translation\Tests\Util\ArrayConverterTest.php	/^    public function testDump($input, $expectedOutput)$/;"	f
testDumpBackupsFileIfExisting	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^    public function testDumpBackupsFileIfExisting()$/;"	f
testDumpCreatesNestedDirectoriesAndFile	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^    public function testDumpCreatesNestedDirectoriesAndFile()$/;"	f
testDumpWithCustomEncoding	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\JsonFileDumperTest.php	/^    public function testDumpWithCustomEncoding()$/;"	f
testEncoding	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testEncoding()$/;"	f
testEscapedId	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^    public function testEscapedId()$/;"	f
testEscapedIdPlurals	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^    public function testEscapedIdPlurals()$/;"	f
testFailedLangcodes	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^    public function testFailedLangcodes($nplural, $langCodes)$/;"	f
testFallbackCatalogueResources	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testFallbackCatalogueResources()$/;"	f
testFlattenedTrans	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testFlattenedTrans($expected, $messages, $id)$/;"	f
testFormatCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\CsvFileDumperTest.php	/^    public function testFormatCatalogue()$/;"	f
testFormatCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\IcuResFileDumperTest.php	/^    public function testFormatCatalogue()$/;"	f
testFormatCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\IniFileDumperTest.php	/^    public function testFormatCatalogue()$/;"	f
testFormatCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\JsonFileDumperTest.php	/^    public function testFormatCatalogue()$/;"	f
testFormatCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\MoFileDumperTest.php	/^    public function testFormatCatalogue()$/;"	f
testFormatCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\PhpFileDumperTest.php	/^    public function testFormatCatalogue()$/;"	f
testFormatCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\PoFileDumperTest.php	/^    public function testFormatCatalogue()$/;"	f
testFormatCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\QtFileDumperTest.php	/^    public function testFormatCatalogue()$/;"	f
testFormatCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php	/^    public function testFormatCatalogue()$/;"	f
testFormatCatalogueWithCustomToolInfo	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php	/^    public function testFormatCatalogueWithCustomToolInfo()$/;"	f
testFormatCatalogueWithTargetAttributesMetadata	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php	/^    public function testFormatCatalogueWithTargetAttributesMetadata()$/;"	f
testFormatCatalogueXliff2	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php	/^    public function testFormatCatalogueXliff2()$/;"	f
testGetAddResource	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testGetAddResource()$/;"	f
testGetCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testGetCatalogue()$/;"	f
testGetCatalogueReturnsConsolidatedCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testGetCatalogueReturnsConsolidatedCatalogue()$/;"	f
testGetDomains	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testGetDomains()$/;"	f
testGetEmptyDomains	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php	/^    public function testGetEmptyDomains()$/;"	f
testGetEmptyMessages	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php	/^    public function testGetEmptyMessages()$/;"	f
testGetEmptyResult	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php	/^    public function testGetEmptyResult()$/;"	f
testGetLocale	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testGetLocale()$/;"	f
testGetLocaleReturnsDefaultLocaleIfNotSet	.\Source\application\library\vendor\symfony\translation\Tests\IdentityTranslatorTest.php	/^    public function testGetLocaleReturnsDefaultLocaleIfNotSet()$/;"	f
testGetMergedDomains	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php	/^    public function testGetMergedDomains()$/;"	f
testGetMessagesFromSingleDomain	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php	/^    public function testGetMessagesFromSingleDomain()$/;"	f
testGetMessagesFromSingleDomain	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php	/^    public function testGetMessagesFromSingleDomain()$/;"	f
testGetMessagesFromUnknownDomain	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php	/^    public function testGetMessagesFromUnknownDomain()$/;"	f
testGetResultFromSingleDomain	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php	/^    public function testGetResultFromSingleDomain()$/;"	f
testGetResultFromSingleDomain	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php	/^    public function testGetResultFromSingleDomain()$/;"	f
testGetResultWithMetadata	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php	/^    public function testGetResultWithMetadata()$/;"	f
testGetResultWithMetadata	.\Source\application\library\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php	/^    public function testGetResultWithMetadata()$/;"	f
testGetSet	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testGetSet()$/;"	f
testGetSetLocale	.\Source\application\library\vendor\symfony\translation\Tests\IdentityTranslatorTest.php	/^    public function testGetSetLocale()$/;"	f
testHas	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testHas()$/;"	f
testIncompleteResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testIncompleteResource()$/;"	f
testInstance	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $testInstance = clone static::getTestNow();$/;"	v
testLangcodes	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^    public function testLangcodes($nplural, $langCodes)$/;"	f
testLinearFormatCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\YamlFileDumperTest.php	/^    public function testLinearFormatCatalogue()$/;"	f
testLoad	.\Source\application\library\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php	/^    public function testLoad()$/;"	f
testLoad	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuResFileLoaderTest.php	/^    public function testLoad()$/;"	f
testLoad	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php	/^    public function testLoad()$/;"	f
testLoad	.\Source\application\library\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php	/^    public function testLoad()$/;"	f
testLoad	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^    public function testLoad()$/;"	f
testLoad	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php	/^    public function testLoad()$/;"	f
testLoad	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^    public function testLoad()$/;"	f
testLoad	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^    public function testLoad()$/;"	f
testLoad	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testLoad()$/;"	f
testLoad	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^    public function testLoad()$/;"	f
testLoadDoesNothingIfEmpty	.\Source\application\library\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php	/^    public function testLoadDoesNothingIfEmpty()$/;"	f
testLoadDoesNothingIfEmpty	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php	/^    public function testLoadDoesNothingIfEmpty()$/;"	f
testLoadDoesNothingIfEmpty	.\Source\application\library\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php	/^    public function testLoadDoesNothingIfEmpty()$/;"	f
testLoadDoesNothingIfEmpty	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^    public function testLoadDoesNothingIfEmpty()$/;"	f
testLoadDoesNothingIfEmpty	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^    public function testLoadDoesNothingIfEmpty()$/;"	f
testLoadEmptyResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^    public function testLoadEmptyResource()$/;"	f
testLoadEmptyTranslation	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^    public function testLoadEmptyTranslation()$/;"	f
testLoadEmptyTranslation	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^    public function testLoadEmptyTranslation()$/;"	f
testLoadInvalidResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php	/^    public function testLoadInvalidResource()$/;"	f
testLoadInvalidResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuResFileLoaderTest.php	/^    public function testLoadInvalidResource()$/;"	f
testLoadInvalidResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^    public function testLoadInvalidResource()$/;"	f
testLoadInvalidResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^    public function testLoadInvalidResource()$/;"	f
testLoadInvalidResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testLoadInvalidResource()$/;"	f
testLoadNonExistingResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php	/^    public function testLoadNonExistingResource()$/;"	f
testLoadNonExistingResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php	/^    public function testLoadNonExistingResource()$/;"	f
testLoadNonExistingResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IcuResFileLoaderTest.php	/^    public function testLoadNonExistingResource()$/;"	f
testLoadNonExistingResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php	/^    public function testLoadNonExistingResource()$/;"	f
testLoadNonExistingResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php	/^    public function testLoadNonExistingResource()$/;"	f
testLoadNonExistingResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^    public function testLoadNonExistingResource()$/;"	f
testLoadNonExistingResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php	/^    public function testLoadNonExistingResource()$/;"	f
testLoadNonExistingResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^    public function testLoadNonExistingResource()$/;"	f
testLoadNonExistingResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^    public function testLoadNonExistingResource()$/;"	f
testLoadNonExistingResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testLoadNonExistingResource()$/;"	f
testLoadNonExistingResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^    public function testLoadNonExistingResource()$/;"	f
testLoadNonLocalResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php	/^    public function testLoadNonLocalResource()$/;"	f
testLoadNonLocalResource	.\Source\application\library\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php	/^    public function testLoadNonLocalResource()$/;"	f
testLoadNotes	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testLoadNotes()$/;"	f
testLoadPlurals	.\Source\application\library\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php	/^    public function testLoadPlurals()$/;"	f
testLoadPlurals	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^    public function testLoadPlurals()$/;"	f
testLoadResourceDoesNotValidate	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testLoadResourceDoesNotValidate()$/;"	f
testLoadThrowsAnExceptionIfFileNotLocal	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php	/^    public function testLoadThrowsAnExceptionIfFileNotLocal()$/;"	f
testLoadThrowsAnExceptionIfFileNotLocal	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testLoadThrowsAnExceptionIfFileNotLocal()$/;"	f
testLoadThrowsAnExceptionIfFileNotLocal	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^    public function testLoadThrowsAnExceptionIfFileNotLocal()$/;"	f
testLoadThrowsAnExceptionIfNotAnArray	.\Source\application\library\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php	/^    public function testLoadThrowsAnExceptionIfNotAnArray()$/;"	f
testLoadVersion2	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testLoadVersion2()$/;"	f
testLoadWithExternalEntitiesDisabled	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testLoadWithExternalEntitiesDisabled()$/;"	f
testLoadWithInternalErrorsEnabled	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testLoadWithInternalErrorsEnabled()$/;"	f
testLoadWithResname	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testLoadWithResname()$/;"	f
testMetadataDelete	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testMetadataDelete()$/;"	f
testMetadataMerge	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testMetadataMerge()$/;"	f
testMetadataSetGetDelete	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testMetadataSetGetDelete()$/;"	f
testNow	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    protected static $testNow;$/;"	v
testNow	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function setTestNow(Carbon $testNow = null)$/;"	v
testParseEmptyFile	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testParseEmptyFile()$/;"	f
testParseException	.\Source\application\library\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php	/^    public function testParseException()$/;"	f
testPrimaryAndFallbackCataloguesContainTheSameMessagesRegardlessOfCaching	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    public function testPrimaryAndFallbackCataloguesContainTheSameMessagesRegardlessOfCaching()$/;"	f
testRefreshCacheWhenResourcesAreNoLongerFresh	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    public function testRefreshCacheWhenResourcesAreNoLongerFresh()$/;"	f
testReplace	.\Source\application\library\vendor\symfony\translation\Tests\MessageCatalogueTest.php	/^    public function testReplace()$/;"	f
testReturnMessageIfExactlyOneStandardRuleIsGiven	.\Source\application\library\vendor\symfony\translation\Tests\MessageSelectorTest.php	/^    public function testReturnMessageIfExactlyOneStandardRuleIsGiven()$/;"	f
testScanDom	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^    public function testScanDom()$/;"	f
testScanFile	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^    public function testScanFile()$/;"	f
testScanForXEE	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^    public function testScanForXEE()$/;"	f
testScanForXXE	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^    public function testScanForXXE()$/;"	f
testScanInvalidXml	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^    public function testScanInvalidXml()$/;"	f
testScanInvalidXmlDom	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^    public function testScanInvalidXmlDom()$/;"	f
testScanSimpleXmlResult	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^    public function testScanSimpleXmlResult()$/;"	f
testScanXmlWithDTD	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^    public function testScanXmlWithDTD()$/;"	f
testSetFallbackInvalidLocales	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testSetFallbackInvalidLocales($locale)$/;"	f
testSetFallbackLocales	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testSetFallbackLocales()$/;"	f
testSetFallbackLocalesMultiple	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testSetFallbackLocalesMultiple()$/;"	f
testSetFallbackValidLocales	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testSetFallbackValidLocales($locale)$/;"	f
testSetGetLocale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testSetGetLocale()$/;"	f
testSetInvalidLocale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testSetInvalidLocale($locale)$/;"	f
testSetValidLocale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testSetValidLocale($locale)$/;"	f
testSkipFuzzyTranslations	.\Source\application\library\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php	/^    public function testSkipFuzzyTranslations()$/;"	f
testTargetAttributesAreStoredCorrectly	.\Source\application\library\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php	/^    public function testTargetAttributesAreStoredCorrectly()$/;"	f
testTest	.\Source\application\library\vendor\symfony\translation\Tests\IntervalTest.php	/^    public function testTest($expected, $number, $interval)$/;"	f
testTestException	.\Source\application\library\vendor\symfony\translation\Tests\IntervalTest.php	/^    public function testTestException()$/;"	f
testThatACacheIsUsed	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    public function testThatACacheIsUsed($debug)$/;"	f
testThrowExceptionIfMatchingMessageCannotBeFound	.\Source\application\library\vendor\symfony\translation\Tests\MessageSelectorTest.php	/^    public function testThrowExceptionIfMatchingMessageCannotBeFound($id, $number)$/;"	f
testTrans	.\Source\application\library\vendor\symfony\translation\Tests\IdentityTranslatorTest.php	/^    public function testTrans($expected, $id, $parameters)$/;"	f
testTrans	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTrans($expected, $id, $translation, $parameters, $locale, $domain)$/;"	f
testTransChoice	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransChoice($expected, $id, $translation, $number, $parameters, $locale, $domain)$/;"	f
testTransChoiceFallback	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransChoiceFallback()$/;"	f
testTransChoiceFallbackBis	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransChoiceFallbackBis()$/;"	f
testTransChoiceFallbackIsLogged	.\Source\application\library\vendor\symfony\translation\Tests\LoggingTranslatorTest.php	/^    public function testTransChoiceFallbackIsLogged()$/;"	f
testTransChoiceFallbackWithNoTranslation	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransChoiceFallbackWithNoTranslation()$/;"	f
testTransChoiceInvalidLocale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransChoiceInvalidLocale($locale)$/;"	f
testTransChoiceValidLocale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransChoiceValidLocale($locale)$/;"	f
testTransChoiceWithDefaultLocale	.\Source\application\library\vendor\symfony\translation\Tests\IdentityTranslatorTest.php	/^    public function testTransChoiceWithDefaultLocale($expected, $id, $number, $parameters)$/;"	f
testTransChoiceWithExplicitLocale	.\Source\application\library\vendor\symfony\translation\Tests\IdentityTranslatorTest.php	/^    public function testTransChoiceWithExplicitLocale($expected, $id, $number, $parameters)$/;"	f
testTransInvalidLocale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransInvalidLocale($locale)$/;"	f
testTransNonExistentWithFallback	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransNonExistentWithFallback()$/;"	f
testTransValidLocale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransValidLocale($locale)$/;"	f
testTransWithFallbackLocale	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransWithFallbackLocale()$/;"	f
testTransWithFallbackLocaleBis	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransWithFallbackLocaleBis()$/;"	f
testTransWithFallbackLocaleFile	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransWithFallbackLocaleFile($format, $loader)$/;"	f
testTransWithFallbackLocaleTer	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransWithFallbackLocaleTer()$/;"	f
testTransWithNoTranslationIsLogged	.\Source\application\library\vendor\symfony\translation\Tests\LoggingTranslatorTest.php	/^    public function testTransWithNoTranslationIsLogged()$/;"	f
testTransWithoutFallbackLocaleFile	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testTransWithoutFallbackLocaleFile($format, $loader)$/;"	f
testTreeFormatCatalogue	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\YamlFileDumperTest.php	/^    public function testTreeFormatCatalogue()$/;"	f
testWhenAResourceHasNoRegisteredLoader	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^    public function testWhenAResourceHasNoRegisteredLoader()$/;"	f
testWriteTranslations	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^    public function testWriteTranslations()$/;"	f
text	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function text($column)$/;"	f
text	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $text = 1 === preg_match('\/[&<>]\/', $target) ? $dom->createCDATASection($target) : $dom->createTextNode($target);$/;"	v
textDomain	.\Source\application\library\Zend\Validator\Translator\TranslatorInterface.php	/^    public function translate($message, $textDomain = 'default', $locale = null);$/;"	v
than	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $catalogue->addResource(new StaleResource()); \/\/ better use a helper class than a mock, because it gets serialized in the cache and re-loaded$/;"	c
that	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^                'Static method call "%s" refers to a class that does not exist',$/;"	c
that	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Keychain.php	/^ * A utilitarian class that encapsulates the retrieval of public and private keys$/;"	c
this	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        return $this == $dt;$/;"	v
through	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$through = new $through;$/;"	v
throwError	.\Source\application\library\Zend\Validator\File\Count.php	/^    protected function throwError($file, $errorType)$/;"	f
throwError	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^    protected function throwError($file, $errorType)$/;"	f
throwError	.\Source\application\library\Zend\Validator\File\Upload.php	/^    protected function throwError($file, $errorType)$/;"	f
time	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^		$time = $this->getElapsedTime($start);$/;"	v
time	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function logQuery($query, $bindings, $time = null)$/;"	v
time	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$time = $this->freshTimestamp();$/;"	v
time	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^		$this->{$this->getDeletedAtColumn()} = $time = $this->freshTimestamp();$/;"	v
time	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function time($column)$/;"	f
time	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ValidationDataTest.php	/^        $time = 1$/;"	v
time	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $time = $testInstance->toDateTimeString();$/;"	v
time	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^            $time = static::translator()->transChoice($tryKeyExists, $count, array(':count' => $count));$/;"	v
time	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $time = explode(":", $time);$/;"	v
time	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $time = static::translator()->transChoice($unit, $count, array(':count' => $count));$/;"	v
time	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        if (static::hasTestNow() && (empty($time) || $time === 'now' || static::hasRelativeKeywords($time))) {$/;"	v
timeDiff	.\Source\application\library\Zend\Validator\DateStep.php	/^        $timeDiff  = $absoluteValueDate->diff($absoluteBaseDate, 1);$/;"	v
timed	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$timed = ($this->hasPivotColumn($this->createdAt()) || $this->hasPivotColumn($this->updatedAt()));$/;"	v
timeout	.\Source\application\library\Zend\Validator\Csrf.php	/^        $this->timeout = ($ttl !== null) ? (int) $ttl : null;$/;"	v
timeout	.\Source\application\library\Zend\Validator\Csrf.php	/^        $timeout = $this->getTimeout();$/;"	v
timeout	.\Source\application\library\Zend\Validator\Csrf.php	/^    protected $timeout = 300;$/;"	v
timestamp	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function timestamp($column)$/;"	f
timestamp	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $this->timestamp = $value;$/;"	v
timestamp	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function timestamp($value)$/;"	f
timestamps	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public $timestamps = true;$/;"	v
timestamps	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Pivot.php	/^		$this->timestamps = $this->hasTimestampAttributes();$/;"	v
timestamps	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function timestamps()$/;"	f
timestamps	.\Source\application\resource\Model\Relation.php	/^	public $timestamps = false;$/;"	v
timestamps	.\Source\application\resource\Model\User.php	/^	public $timestamps = false;$/;"	v
timezone	.\Source\application\library\Zend\Stdlib\DateTime.php	/^    public static function createFromISO8601($time, DateTimeZone $timezone = null)$/;"	v
timezone	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DateTimeFormatterStrategy.php	/^        $this->timezone = $timezone;$/;"	v
timezone	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DateTimeFormatterStrategy.php	/^    private $timezone;$/;"	v
timezone	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DateTimeFormatterStrategy.php	/^    public function __construct($format = DateTime::RFC3339, DateTimeZone $timezone = null)$/;"	v
timezone	.\Source\application\library\Zend\Validator\DateStep.php	/^        $this->timezone = $timezone;$/;"	v
timezone	.\Source\application\library\Zend\Validator\DateStep.php	/^    protected $timezone;$/;"	v
timezone	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function timezone($value)$/;"	f
tinyInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function tinyInteger($column, $autoIncrement = false, $unsigned = false)$/;"	f
title	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^		$title = preg_replace('!['.preg_quote($flip).']+!u', $separator, $title);$/;"	v
title	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^		$title = preg_replace('!['.preg_quote($separator).'\\s]+!u', $separator, $title);$/;"	v
title	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^		$title = preg_replace('![^'.preg_quote($separator).'\\pL\\pN\\s]+!u', '', mb_strtolower($title));$/;"	v
title	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^		$title = static::ascii($title);$/;"	v
title	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function title($value)$/;"	f
title	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function link_to($url, $title = null, $attributes = array(), $secure = null)$/;"	v
title	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function link_to_action($action, $title = null, $parameters = array(), $attributes = array())$/;"	v
title	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function link_to_asset($url, $title = null, $attributes = array(), $secure = null)$/;"	v
title	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function link_to_route($name, $title = null, $parameters = array(), $attributes = array())$/;"	v
title_case_lower	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    private static function title_case_lower($s)$/;"	f
title_case_upper	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^    private static function title_case_upper($s)$/;"	f
tld	.\Source\application\library\Zend\Validator\Hostname.php	/^                    $this->tld = strtoupper($matches[1]);$/;"	v
tld	.\Source\application\library\Zend\Validator\Hostname.php	/^    protected $tld;$/;"	v
tmpDir	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $this->tmpDir = sys_get_temp_dir().'\/sf2_translation';$/;"	v
tmpDir	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^    protected $tmpDir;$/;"	v
tmpOptions	.\Source\application\library\Zend\Validator\IsInstanceOf.php	/^            $tmpOptions = array();$/;"	v
tmpfile	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $tmpfile = tempnam(sys_get_temp_dir(), 'sf2');$/;"	v
to	.\Source\application\library\Zend\Session\AbstractContainer.php	/^     * Default manager class to use if no manager has been provided$/;"	c
to	.\Source\application\library\Zend\Session\AbstractManager.php	/^     * Default configuration class to use when no configuration provided$/;"	c
to	.\Source\application\library\Zend\Session\AbstractManager.php	/^     * Default storage class to use when no storage provided$/;"	c
to	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^     * Inner queue class to use for iteration$/;"	c
to	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $to   = $reverse ? $encoding : $convertEncoding;$/;"	v
to	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		\/\/ We will append the names of the class to the event to distinguish it from$/;"	c
to	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		\/\/ use the implode function to join them together with an underscores,$/;"	f
to	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		\/\/ more syntax that is best handled by that function to keep things neat.$/;"	f
toArray	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    public function toArray()$/;"	f
toArray	.\Source\application\library\Zend\Db\ResultSet\HydratingResultSet.php	/^    public function toArray()$/;"	f
toArray	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^    public function toArray()$/;"	f
toArray	.\Source\application\library\Zend\Session\Config\ConfigInterface.php	/^    public function toArray();$/;"	f
toArray	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    public function toArray()$/;"	f
toArray	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function toArray($metaData = false)$/;"	f
toArray	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function toArray($metaData = false)$/;"	f
toArray	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^    public function toArray($metaData = false);$/;"	f
toArray	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^    public function toArray()$/;"	f
toArray	.\Source\application\library\Zend\Stdlib\Parameters.php	/^    public function toArray()$/;"	f
toArray	.\Source\application\library\Zend\Stdlib\ParametersInterface.php	/^    public function toArray();$/;"	f
toArray	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function toArray($flag = self::EXTR_DATA)$/;"	f
toArray	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function toArray($flag = self::EXTR_DATA)$/;"	f
toArray	.\Source\application\library\Zend\Stdlib\SplPriorityQueue.php	/^    public function toArray()$/;"	f
toArray	.\Source\application\library\Zend\Stdlib\SplQueue.php	/^    public function toArray()$/;"	f
toArray	.\Source\application\library\Zend\Stdlib\SplStack.php	/^    public function toArray()$/;"	f
toArray	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function toArray()$/;"	f
toArray	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function toArray()$/;"	f
toArray	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Contracts\ArrayableInterface.php	/^	public function toArray();$/;"	f
toArray	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function toArray()$/;"	f
toArray	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function toArray()$/;"	f
toAtomString	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toAtomString()$/;"	f
toBase	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function toBase()$/;"	f
toByteString	.\Source\application\library\Zend\Validator\File\Size.php	/^    protected function toByteString($size)$/;"	f
toCookieString	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toCookieString()$/;"	f
toDateString	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toDateString()$/;"	f
toDateTimeString	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toDateTimeString()$/;"	f
toDayDateTimeString	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toDayDateTimeString()$/;"	f
toEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\Iconv.php	/^        $toEncoding   = $reverse ? $encoding : $convertEncoding;$/;"	v
toEncoding	.\Source\application\library\Zend\Stdlib\StringWrapper\MbString.php	/^        $toEncoding   = $reverse ? $encoding : $convertEncoding;$/;"	v
toEncoding	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $toEncoding = self::getEncoding($toEncoding);$/;"	v
toFormattedDateString	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toFormattedDateString()$/;"	f
toIso8601String	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toIso8601String()$/;"	f
toJson	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function toJson($options = 0)$/;"	f
toJson	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function toJson($options = 0)$/;"	f
toJson	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Contracts\JsonableInterface.php	/^	public function toJson($options = 0);$/;"	f
toJson	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Fluent.php	/^	public function toJson($options = 0)$/;"	f
toJson	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	public function toJson($options = 0)$/;"	f
toRfc1036String	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toRfc1036String()$/;"	f
toRfc1123String	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toRfc1123String()$/;"	f
toRfc2822String	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toRfc2822String()$/;"	f
toRfc3339String	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toRfc3339String()$/;"	f
toRfc822String	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toRfc822String()$/;"	f
toRfc850String	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toRfc850String()$/;"	f
toRssString	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toRssString()$/;"	f
toSplFileInfo	.\Source\application\library\vendor\symfony\translation\Extractor\AbstractFileExtractor.php	/^    private function toSplFileInfo($file)$/;"	f
toSql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function toSql()$/;"	f
toSql	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function toSql(Connection $connection, Grammar $grammar)$/;"	f
toString	.\Source\application\library\Zend\Stdlib\Message.php	/^    public function toString()$/;"	f
toString	.\Source\application\library\Zend\Stdlib\Parameters.php	/^    public function toString()$/;"	f
toString	.\Source\application\library\Zend\Stdlib\ParametersInterface.php	/^    public function toString();$/;"	f
toStringFormat	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    protected static $toStringFormat = self::DEFAULT_TO_STRING_FORMAT;$/;"	v
toStringMustReturnEncodedData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function toStringMustReturnEncodedData()$/;"	f
toStringMustReturnEncodedDataWithEmptySignature	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function toStringMustReturnEncodedDataWithEmptySignature()$/;"	f
toStringMustReturnTheHash	.\Source\application\library\vendor\lcobucci\jwt\test\unit\SignatureTest.php	/^    public function toStringMustReturnTheHash()$/;"	f
toStringShouldReturnTheClaimValue	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\BasicTest.php	/^    public function toStringShouldReturnTheClaimValue()$/;"	f
toTimeString	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toTimeString()$/;"	f
toW3cString	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function toW3cString()$/;"	f
today	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function today($tz = null)$/;"	f
toekn	.\Source\application\module\Index\Controller\PassportController.php	/^        $toekn = $token->getToeknString();$/;"	v
token	.\Source\application\library\Zend\Validator\Barcode\Issn.php	/^                $token = 10;$/;"	v
token	.\Source\application\library\Zend\Validator\Csrf.php	/^        $token = $this->getTokenFromHash($hash);$/;"	v
token	.\Source\application\library\Zend\Validator\Csrf.php	/^        $token = md5($this->getSalt() . Rand::getBytes(32) .  $this->getName());$/;"	v
token	.\Source\application\library\Zend\Validator\Identical.php	/^                    $token   = $token[$key];$/;"	v
token	.\Source\application\library\Zend\Validator\Identical.php	/^                $token = $context[$token];$/;"	v
token	.\Source\application\library\Zend\Validator\Identical.php	/^                $token = $this->getToken();$/;"	v
token	.\Source\application\library\Zend\Validator\Identical.php	/^            $token = ArrayUtils::iteratorToArray($token);$/;"	v
token	.\Source\application\library\Zend\Validator\Identical.php	/^        $this->token       = $token;$/;"	v
token	.\Source\application\library\Zend\Validator\Identical.php	/^        $token = $this->getToken();$/;"	v
token	.\Source\application\library\Zend\Validator\Identical.php	/^    protected $token;$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^        $token = (new Builder())->setId(1)$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^        $token = (new Parser())->parse((string) $data);$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^        $token = (new Builder())->setId(1)$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^        $token = (new Parser())->parse((string) $data);$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^        $token = (new Builder())->setId(1)$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^        $token = (new Parser())->parse((string) $data);$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^        $token = (new Builder())->setId(1)$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^        $token = $builder->getToken();$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^        $token = $parser->parse('a.a.');$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\ParserTest.php	/^        $token = $parser->parse('a.a.a');$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $token = new Token($/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $token = new Token();$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $token = new Token(['alg' => 'HS256'], [], $signature);$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $token = new Token(['alg' => 'RS256'], [], $signature);$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $token = new Token(['alg' => 'none'], [], $signature, ['test', 'test', 'test']);$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $token = new Token(['alg' => 'none'], [], null, ['test', 'test']);$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $token = new Token(['alg' => 'none'], [], null, ['test1', 'test2', 'test3']);$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $token = new Token(['jti' => new EqualsTo('jti', 1)]);$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $token = new Token(['test' => 'testing']);$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $token = new Token([], ['test' => 'testing']);$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $token = new Token([], ['test' => new Basic('test', 'testing')]);$/;"	v
token	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^        $token = new Token([], ['testing' => new Basic('testing', 'test')]);$/;"	v
token	.\Source\application\module\Index\Controller\PassportController.php	/^        $token = $_GET['token'];$/;"	v
token	.\Source\application\module\Index\Controller\PassportController.php	/^        $token = JwtManager::jwt()->creatToken($data);$/;"	v
token	.\Source\application\service\JwtAuth\JwtManager.php	/^        $token = (new Builder())$/;"	v
tokenFromHash	.\Source\application\library\Zend\Validator\Csrf.php	/^        $tokenFromHash = $this->getTokenFromHash($hash);$/;"	v
tokenFromValue	.\Source\application\library\Zend\Validator\Csrf.php	/^        $tokenFromValue = $this->getTokenFromHash($value);$/;"	v
tokenId	.\Source\application\library\Zend\Validator\Csrf.php	/^        $tokenId = $this->getTokenIdFromHash($hash);$/;"	v
tokenId	.\Source\application\library\Zend\Validator\Csrf.php	/^        $tokenId = $this->getTokenIdFromHash($value);$/;"	v
tokenInfo	.\Source\application\module\Index\Controller\PassportController.php	/^        $tokenInfo = jwtManager::jwt()->parserToekn($token);$/;"	v
tokenInfo	.\Source\application\service\JwtAuth\JwtManager.php	/^        $tokenInfo = (new Parser())->parse(($token)); \/\/ Parses from a string$/;"	v
tokenSign	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^        $tokenSign = new \\ReflectionProperty($token, 'signature');$/;"	v
tokenString	.\Source\application\library\Zend\Validator\Identical.php	/^        $this->tokenString = (is_array($token) ? var_export($token, true) : (string) $token);$/;"	v
tokenString	.\Source\application\library\Zend\Validator\Identical.php	/^    protected $tokenString;$/;"	v
tokenValidationShouldReturnFalseWhenExpectedDataDontMatch	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^    public function tokenValidationShouldReturnFalseWhenExpectedDataDontMatch(ValidationData $data, Token $generated)$/;"	f
tokenValidationShouldReturnWhenEverythingIsFine	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^    public function tokenValidationShouldReturnWhenEverythingIsFine(Token $generated)$/;"	f
tomorrow	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function tomorrow($tz = null)$/;"	f
toolInfo	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $toolInfo = array_merge($toolInfo, $options['tool_info']);$/;"	v
toolInfo	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^        $toolInfo = array('tool-id' => 'symfony', 'tool-name' => 'Symfony');$/;"	v
top	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function top()$/;"	f
topParameters	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^        $topParameters = array();$/;"	v
total	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^		$total = $this->query->getPaginationCount();$/;"	v
total	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$total = $this->count();$/;"	v
total	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$total = $this->getPaginationCount();$/;"	v
total	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function decimal($column, $total = 8, $places = 2)$/;"	v
total	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function double($column, $total = null, $places = null)$/;"	v
total	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function float($column, $total = 8, $places = 2)$/;"	v
totallyGuarded	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$totallyGuarded = $this->totallyGuarded();$/;"	v
totallyGuarded	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function totallyGuarded()$/;"	f
touch	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function touch()$/;"	f
touch	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function attachNew(array $records, array $current, $touch = true)$/;"	v
touch	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function detach($ids = array(), $touch = true)$/;"	v
touch	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function touch()$/;"	f
touch	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function updateExistingPivot($id, array $attributes, $touch = true)$/;"	v
touch	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function touch()$/;"	f
touchIfTouching	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function touchIfTouching()$/;"	f
touchOwners	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function touchOwners()$/;"	f
touches	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->touches = $touches;$/;"	v
touches	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $touches = array();$/;"	v
touches	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function touches($relation)$/;"	f
touchingParent	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	protected function touchingParent()$/;"	f
trait_uses_recursive	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function trait_uses_recursive($trait)$/;"	f
traits	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^		$traits = class_uses($trait);$/;"	v
trans	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function trans($id, $parameters = array(), $domain = 'messages', $locale = null)$/;"	f
trans	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^        $trans = $this->translator->trans($id, $parameters, $domain, $locale);$/;"	v
trans	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^        $trans = $this->translator->transChoice($id, $number, $parameters, $domain, $locale);$/;"	v
trans	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    public function trans($id, array $parameters = array(), $domain = null, $locale = null)$/;"	f
trans	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^    public function trans($id, array $parameters = array(), $domain = null, $locale = null)$/;"	f
trans	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^        $trans = $this->translator->trans($id, $parameters, $domain, $locale);$/;"	v
trans	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^        $trans = $this->translator->transChoice($id, $number, $parameters, $domain, $locale);$/;"	v
trans	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^    public function trans($id, array $parameters = array(), $domain = null, $locale = null)$/;"	f
trans	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function trans($id, array $parameters = array(), $domain = null, $locale = null)$/;"	f
trans	.\Source\application\library\vendor\symfony\translation\TranslatorInterface.php	/^    public function trans($id, array $parameters = array(), $domain = null, $locale = null);$/;"	f
transChoice	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    public function transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null)$/;"	f
transChoice	.\Source\application\library\vendor\symfony\translation\IdentityTranslator.php	/^    public function transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null)$/;"	f
transChoice	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^    public function transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null)$/;"	f
transChoice	.\Source\application\library\vendor\symfony\translation\Translator.php	/^    public function transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null)$/;"	f
transChoice	.\Source\application\library\vendor\symfony\translation\TranslatorInterface.php	/^    public function transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null);$/;"	f
transId	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $transId = $isNow ? ($isFuture ? 'from_now' : 'ago') : ($isFuture ? 'after' : 'before');$/;"	v
trans_choice	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function trans_choice($id, $number, array $parameters = array(), $domain = 'messages', $locale = null)$/;"	f
transaction	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function transaction(Closure $callback)$/;"	f
transaction	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function transaction(Closure $callback);$/;"	f
transaction	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\SqlServerConnection.php	/^	public function transaction(Closure $callback)$/;"	f
transactionLevel	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function transactionLevel()$/;"	f
transactionLevel	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function transactionLevel();$/;"	f
transactions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^			$this->transactions = 0;$/;"	v
transactions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected $transactions = 0;$/;"	v
transform	.\Source\application\library\Zend\Stdlib\AbstractOptions.php	/^        $transform = function ($letters) {$/;"	v
transform	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function transform(Closure $callback)$/;"	f
transform	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\MessageBag.php	/^	protected function transform($messages, $format, $messageKey)$/;"	f
translate	.\Source\application\library\Zend\Validator\Translator\TranslatorInterface.php	/^    public function translate($message, $textDomain = 'default', $locale = null);$/;"	f
translateMessage	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    protected function translateMessage($messageKey, $message)$/;"	f
translated	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^                $translated = explode("\\000", $translated);$/;"	v
translated	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^            $translated = fread($stream, $length);$/;"	v
translated	.\Source\application\library\vendor\symfony\translation\Loader\MoFileLoader.php	/^            $translated = null;$/;"	v
translation	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $translation = $dom->createElement('trans-unit');$/;"	v
translation	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $translation = $dom->createElement('unit');$/;"	v
translation	.\Source\application\library\vendor\symfony\translation\Loader\QtFileLoader.php	/^                $translation = $translation->nextSibling;$/;"	v
translationValue	.\Source\application\library\vendor\symfony\translation\Loader\QtFileLoader.php	/^                $translationValue = (string) $translation->getElementsByTagName('translation')->item(0)->nodeValue;$/;"	v
translations	.\Source\application\library\vendor\symfony\translation\Loader\QtFileLoader.php	/^            $translations = $nodes->item(0)->nextSibling->parentNode->parentNode->getElementsByTagName('message');$/;"	v
translationsDir	.\Source\application\library\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php	/^        $translationsDir = $tempDir.'\/test\/translations';$/;"	v
translator	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^        $translator = $this->getTranslator();$/;"	v
translator	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public function setTranslator(Translator\\TranslatorInterface $translator = null, $textDomain = null)$/;"	v
translator	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    public static function setDefaultTranslator(Translator\\TranslatorInterface $translator = null, $textDomain = null)$/;"	v
translator	.\Source\application\library\Zend\Validator\Translator\TranslatorAwareInterface.php	/^    public function setTranslator(TranslatorInterface $translator = null, $textDomain = null);$/;"	v
translator	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    protected static $translator;$/;"	v
translator	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    protected static function translator()$/;"	f
translator	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    protected static $translator;$/;"	v
translator	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    protected static function translator()$/;"	f
translator	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^        $this->translator = $translator;$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\DataCollectorTranslator.php	/^    private $translator;$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^        $this->translator = $translator;$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\DataCollector\TranslationDataCollector.php	/^    private $translator;$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^        $this->translator = $translator;$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\LoggingTranslator.php	/^    private $translator;$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\DataCollectorTranslatorTest.php	/^        $translator = new Translator('en');$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php	/^        $translator = $this$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php	/^        $translator = $this->getTranslator();$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\IdentityTranslatorTest.php	/^        $translator = new IdentityTranslator();$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\LoggingTranslatorTest.php	/^        $translator = new Translator('ar');$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $translator = new Translator($locale, null, $this->tmpDir, $debug);$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $translator = new Translator($locale, null, $this->tmpDir, true);$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $translator = new Translator('a', null, $this->tmpDir);$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorCacheTest.php	/^        $translator = new Translator('fr', null, $this->tmpDir, true);$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator = new Translator($locale);$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator = new Translator($locale, new MessageSelector());$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator = new Translator('en');$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator = new Translator('en', new MessageSelector());$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator = new Translator('en_GB');$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator = new Translator('en_GB', new MessageSelector());$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator = new Translator('en_US');$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator = new Translator('fr');$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator = new Translator('fr', new MessageSelector());$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator = new Translator('fr_FR');$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator = new Translator('ru');$/;"	v
translator	.\Source\application\library\vendor\symfony\translation\Tests\TranslatorTest.php	/^        $translator = new Translator(null, new MessageSelector());$/;"	v
trashed	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	public function trashed()$/;"	f
tree	.\Source\application\library\vendor\symfony\translation\Util\ArrayConverter.php	/^        $tree = array();$/;"	v
trigger	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $trigger = new Object\\TriggerObject();$/;"	v
trigger	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^                $trigger = array_merge($trigger, $data);$/;"	v
trigger	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^            $trigger = array($/;"	v
triggers	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $triggers = array();$/;"	v
triggers	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^        $triggers = array();$/;"	v
trueValue	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\BooleanStrategy.php	/^        $this->trueValue  = $trueValue;$/;"	v
trueValue	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\BooleanStrategy.php	/^    private $trueValue;$/;"	v
truncate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function truncate()$/;"	f
trustedProxies	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    protected static $trustedProxies = array();$/;"	v
tryAgainIfCausedByLostConnection	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	protected function tryAgainIfCausedByLostConnection(QueryException $e, $query, $bindings, Closure $callback)$/;"	f
tryKeyExists	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $tryKeyExists = $unit.'_'.$transId;$/;"	v
ts	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $ts       = $storage->getRequestAccessTime();$/;"	v
ts	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $ts      = $_SERVER['REQUEST_TIME'] + $ttl;$/;"	v
ts	.\Source\application\library\Zend\Session\AbstractContainer.php	/^        $ts      = $storage->getRequestAccessTime();$/;"	v
ts	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^        $ts = $this->getRequestAccessTime();$/;"	v
ts	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^        $ts = $this->getRequestAccessTime();$/;"	v
ts	.\Source\application\library\vendor\symfony\translation\Dumper\QtFileDumper.php	/^        $ts = $dom->appendChild($dom->createElement('TS'));$/;"	v
ttl	.\Source\application\library\Zend\Session\SessionManager.php	/^            $ttl = $this->getConfig()->getRememberMeSeconds();$/;"	v
type	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^                            $type = (!empty($j['type'])) ? $j['type'] : 'left';$/;"	v
type	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^                        $type = (!empty($j['type'])) ? $j['type'] : 'left';$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\DriverInterface.php	/^    public function formatParameterName($name, $type = null);$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\IbmDb2.php	/^    public function formatParameterName($name, $type = null)$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Mysqli.php	/^    public function formatParameterName($name, $type = null)$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^        $type = '';$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Oci8.php	/^    public function formatParameterName($name, $type = null)$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                        $type = OCI_B_CLOB;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                        $type = SQLT_BIN;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                        $type = SQLT_CHR;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                        $type = SQLT_INT;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                        $type = null;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                $type = SQLT_CHR;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^        $type = oci_statement_type($oci8Statement);$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^        if ($type === null && !is_numeric($name) || $type == self::PARAMETERIZATION_NAMED) {$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Pdo.php	/^    public function formatParameterName($name, $type = null)$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^                        $type = \\PDO::PARAM_INT;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^                        $type = \\PDO::PARAM_LOB;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^                        $type = \\PDO::PARAM_NULL;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^                $type = \\PDO::PARAM_BOOL;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^                $type = \\PDO::PARAM_INT;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Statement.php	/^                $type = \\PDO::PARAM_STR;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^        $this->type = $type;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Connection.php	/^    protected $type = null;$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Pgsql.php	/^    public function formatParameterName($name, $type = null)$/;"	v
type	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Sqlsrv.php	/^    public function formatParameterName($name, $type = null)$/;"	v
type	.\Source\application\library\Zend\Db\Metadata\Object\AbstractTableObject.php	/^    protected $type = null;$/;"	v
type	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^        $this->type = $type;$/;"	v
type	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    protected $type = null;$/;"	v
type	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^                $type = $types[$vIndex];$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Combine.php	/^            $type = $i == 0$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    public function __construct($select = null, $type = self::COMBINE_UNION, $modifier = '')$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    public function combine($select, $type = self::COMBINE_UNION, $modifier = '')$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\BigInteger.php	/^    protected $type = 'BIGINT';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Binary.php	/^    protected $type = 'BINARY';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Blob.php	/^    protected $type = 'BLOB';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Boolean.php	/^    protected $type = 'BOOLEAN';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Char.php	/^    protected $type = 'CHAR';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^    protected $type = 'INTEGER';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Date.php	/^    protected $type = 'DATE';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Datetime.php	/^    protected $type = 'DATETIME';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Decimal.php	/^    protected $type = 'DECIMAL';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Floating.php	/^    protected $type = 'FLOAT';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Text.php	/^    protected $type = 'TEXT';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Time.php	/^    protected $type = 'TIME';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Timestamp.php	/^    protected $type = 'TIMESTAMP';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Varbinary.php	/^    protected $type = 'VARBINARY';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Varchar.php	/^    protected $type = 'VARCHAR';$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Platform\AbstractPlatform.php	/^        foreach ($this->decorators as $type => $decorator) {$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Platform\Platform.php	/^            foreach ($this->decorators[$platformName] as $type => $decorator) {$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $type = $this->combine['type'];$/;"	v
type	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function combine(Select $select, $type = self::COMBINE_UNION, $modifier = '')$/;"	v
type	.\Source\application\library\Zend\Session\Service\StorageFactory.php	/^        $type = $config['type'];$/;"	v
type	.\Source\application\library\Zend\Session\Storage\Factory.php	/^            $type = $class;$/;"	v
type	.\Source\application\library\Zend\Validator\CreditCard.php	/^            $type = array($type);$/;"	v
type	.\Source\application\library\Zend\Validator\Date.php	/^        $type = gettype($param);$/;"	v
type	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^                $this->type = finfo_file($this->finfo, $file);$/;"	v
type	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^            $this->type = $filetype;$/;"	v
type	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^            $this->type = null;$/;"	v
type	.\Source\application\library\Zend\Validator\File\MimeType.php	/^                $this->type = finfo_file($this->finfo, $file);$/;"	v
type	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $this->type = $filetype;$/;"	v
type	.\Source\application\library\Zend\Validator\File\MimeType.php	/^            $this->type = null;$/;"	v
type	.\Source\application\library\Zend\Validator\File\MimeType.php	/^    protected $type;$/;"	v
type	.\Source\application\library\Zend\Validator\File\Size.php	/^        $type  = trim(substr($size, -2, 1));$/;"	v
type	.\Source\application\library\Zend\Validator\Isbn.php	/^        $type     = $this->getType();$/;"	v
type	.\Source\application\library\Zend\Validator\Isbn.php	/^        if ($type == self::ISBN10 || $type == self::AUTO) {$/;"	v
type	.\Source\application\library\Zend\Validator\Isbn.php	/^        if ($type == self::ISBN13 || $type == self::AUTO) {$/;"	v
type	.\Source\application\library\Zend\Validator\NotEmpty.php	/^            $type = $detected;$/;"	v
type	.\Source\application\library\Zend\Validator\NotEmpty.php	/^            $type = array_search($type, $this->constants);$/;"	v
type	.\Source\application\library\Zend\Validator\NotEmpty.php	/^        $type    = $this->getType();$/;"	v
type	.\Source\application\library\Zend\Validator\NotEmpty.php	/^        $type = $this->calculateTypeValue($type);$/;"	v
type	.\Source\application\library\Zend\Validator\Timezone.php	/^        $type = $this->calculateTypeValue($type);$/;"	v
type	.\Source\application\library\Zend\Validator\Timezone.php	/^        $type = $this->options['type'];$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseManager.php	/^	protected function setPdoForType(Connection $connection, $type = null)$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$type = $type ?: $name.'_type';$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function morphMany($related, $name, $type = null, $id = null, $localKey = null)$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function morphOne($related, $name, $type = null, $id = null, $localKey = null)$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function morphTo($name = null, $type = null, $id = null)$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^		return $type == 'one' ? reset($value) : $this->related->newCollection($value);$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^			$type = 'Nested';$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$type = $not ? 'NotExists' : 'Exists';$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$type = $not ? 'NotIn' : 'In';$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$type = $not ? 'NotInSub' : 'InSub';$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$type = $not ? 'NotNull' : 'Null';$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$type = 'Basic';$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$type = 'Sub';$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$type = 'basic';$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$type = 'between';$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$type = 'raw';$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function addBinding($value, $type = 'where')$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function joinWhere($table, $one, $operator, $two, $type = 'inner')$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function setBindings(array $bindings, $type = 'where')$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^			$type = $join->type;$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^		$this->type = $type;$/;"	v
type	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public $type;$/;"	v
typeBigInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeBigInteger(Fluent $column)$/;"	f
typeBigInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeBigInteger(Fluent $column)$/;"	f
typeBigInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeBigInteger(Fluent $column)$/;"	f
typeBigInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeBigInteger(Fluent $column)$/;"	f
typeBinary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeBinary(Fluent $column)$/;"	f
typeBinary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeBinary(Fluent $column)$/;"	f
typeBinary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeBinary(Fluent $column)$/;"	f
typeBinary	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeBinary(Fluent $column)$/;"	f
typeBoolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeBoolean(Fluent $column)$/;"	f
typeBoolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeBoolean(Fluent $column)$/;"	f
typeBoolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeBoolean(Fluent $column)$/;"	f
typeBoolean	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeBoolean(Fluent $column)$/;"	f
typeChar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeChar(Fluent $column)$/;"	f
typeChar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeChar(Fluent $column)$/;"	f
typeChar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeChar(Fluent $column)$/;"	f
typeChar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeChar(Fluent $column)$/;"	f
typeDate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeDate(Fluent $column)$/;"	f
typeDate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeDate(Fluent $column)$/;"	f
typeDate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeDate(Fluent $column)$/;"	f
typeDate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeDate(Fluent $column)$/;"	f
typeDateTime	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeDateTime(Fluent $column)$/;"	f
typeDateTime	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeDateTime(Fluent $column)$/;"	f
typeDateTime	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeDateTime(Fluent $column)$/;"	f
typeDateTime	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeDateTime(Fluent $column)$/;"	f
typeDecimal	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeDecimal(Fluent $column)$/;"	f
typeDecimal	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeDecimal(Fluent $column)$/;"	f
typeDecimal	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeDecimal(Fluent $column)$/;"	f
typeDecimal	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeDecimal(Fluent $column)$/;"	f
typeDouble	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeDouble(Fluent $column)$/;"	f
typeDouble	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeDouble(Fluent $column)$/;"	f
typeDouble	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeDouble(Fluent $column)$/;"	f
typeDouble	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeDouble(Fluent $column)$/;"	f
typeEnum	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeEnum(Fluent $column)$/;"	f
typeEnum	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeEnum(Fluent $column)$/;"	f
typeEnum	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeEnum(Fluent $column)$/;"	f
typeEnum	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeEnum(Fluent $column)$/;"	f
typeFloat	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeFloat(Fluent $column)$/;"	f
typeFloat	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeFloat(Fluent $column)$/;"	f
typeFloat	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeFloat(Fluent $column)$/;"	f
typeFloat	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeFloat(Fluent $column)$/;"	f
typeInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeInteger(Fluent $column)$/;"	f
typeInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeInteger(Fluent $column)$/;"	f
typeInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeInteger(Fluent $column)$/;"	f
typeInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeInteger(Fluent $column)$/;"	f
typeLongText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeLongText(Fluent $column)$/;"	f
typeLongText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeLongText(Fluent $column)$/;"	f
typeLongText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeLongText(Fluent $column)$/;"	f
typeLongText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeLongText(Fluent $column)$/;"	f
typeMediumInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeMediumInteger(Fluent $column)$/;"	f
typeMediumInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeMediumInteger(Fluent $column)$/;"	f
typeMediumInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeMediumInteger(Fluent $column)$/;"	f
typeMediumInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeMediumInteger(Fluent $column)$/;"	f
typeMediumText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeMediumText(Fluent $column)$/;"	f
typeMediumText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeMediumText(Fluent $column)$/;"	f
typeMediumText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeMediumText(Fluent $column)$/;"	f
typeMediumText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeMediumText(Fluent $column)$/;"	f
typeSmallInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeSmallInteger(Fluent $column)$/;"	f
typeSmallInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeSmallInteger(Fluent $column)$/;"	f
typeSmallInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeSmallInteger(Fluent $column)$/;"	f
typeSmallInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeSmallInteger(Fluent $column)$/;"	f
typeString	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeString(Fluent $column)$/;"	f
typeString	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeString(Fluent $column)$/;"	f
typeString	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeString(Fluent $column)$/;"	f
typeString	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeString(Fluent $column)$/;"	f
typeText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeText(Fluent $column)$/;"	f
typeText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeText(Fluent $column)$/;"	f
typeText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeText(Fluent $column)$/;"	f
typeText	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeText(Fluent $column)$/;"	f
typeTime	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeTime(Fluent $column)$/;"	f
typeTime	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeTime(Fluent $column)$/;"	f
typeTime	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeTime(Fluent $column)$/;"	f
typeTime	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeTime(Fluent $column)$/;"	f
typeTimestamp	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeTimestamp(Fluent $column)$/;"	f
typeTimestamp	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeTimestamp(Fluent $column)$/;"	f
typeTimestamp	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeTimestamp(Fluent $column)$/;"	f
typeTimestamp	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeTimestamp(Fluent $column)$/;"	f
typeTinyInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function typeTinyInteger(Fluent $column)$/;"	f
typeTinyInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\PostgresGrammar.php	/^	protected function typeTinyInteger(Fluent $column)$/;"	f
typeTinyInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SQLiteGrammar.php	/^	protected function typeTinyInteger(Fluent $column)$/;"	f
typeTinyInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\SqlServerGrammar.php	/^	protected function typeTinyInteger(Fluent $column)$/;"	f
types	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            $types = isset($part[2]) ? $part[2] : array();$/;"	v
types	.\Source\application\library\Zend\Db\Sql\Ddl\Column\AbstractTimestampColumn.php	/^        $types = array(self::TYPE_IDENTIFIER, self::TYPE_LITERAL);$/;"	v
types	.\Source\application\library\Zend\Db\Sql\Ddl\Column\Column.php	/^        $types = array(self::TYPE_IDENTIFIER, self::TYPE_LITERAL);$/;"	v
types	.\Source\application\library\Zend\Db\Sql\Expression.php	/^        $this->types = $types;$/;"	v
types	.\Source\application\library\Zend\Db\Sql\Expression.php	/^    protected $types = array();$/;"	v
types	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^            $types = array(self::TYPE_IDENTIFIER);$/;"	v
types	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^            $types = array_fill(0, count($identifier), self::TYPE_IDENTIFIER);$/;"	v
types	.\Source\application\library\Zend\Validator\CreditCard.php	/^        $types  = $this->getType();$/;"	v
types	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^        $types = array_merge($types, explode('-', $this->type));$/;"	v
types	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^        $types = array_merge($types, explode(';', $this->type));$/;"	v
types	.\Source\application\library\Zend\Validator\File\ExcludeMimeType.php	/^        $types = explode('\/', $this->type);$/;"	v
types	.\Source\application\library\Zend\Validator\File\MimeType.php	/^        $types = array_merge($types, explode('-', $this->type));$/;"	v
types	.\Source\application\library\Zend\Validator\File\MimeType.php	/^        $types = array_merge($types, explode(';', $this->type));$/;"	v
types	.\Source\application\library\Zend\Validator\File\MimeType.php	/^        $types = explode('\/', $this->type);$/;"	v
types	.\Source\application\library\Zend\Validator\Timezone.php	/^        $types    = (array) $type;$/;"	v
tz	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $tz = $testInstance->tz;$/;"	v
tz	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $tz = @timezone_open((string) $object);$/;"	v
tz	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function __construct($time = null, $tz = null)$/;"	v
tz	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function tz($value)$/;"	f
tz	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function createFromFormat($format, $time, $tz = null)$/;"	v
tz	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function createFromTimestamp($timestamp, $tz = null)$/;"	v
tz	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function parse($time = null, $tz = null)$/;"	v
uasort	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function uasort($function)$/;"	f
uchr	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                    $uchr = $map[$uchr];$/;"	v
uchr	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $uchr = substr($s, $i, $ulen);$/;"	v
uksort	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function uksort($function)$/;"	f
ulen	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                $ulen = $s[$i] < "\\x80" ? 1 : $ulenMask[$s[$i] & "\\xF0"];$/;"	v
ulenMask	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            static $ulenMask = array("\\xC0" => 2, "\\xD0" => 2, "\\xE0" => 3, "\\xF0" => 4);$/;"	v
unaliasedTable	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^            $unaliasedTable = array_shift($tableData);$/;"	v
unaliasedTable	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $unaliasedTable = false;$/;"	v
uncountable	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^	protected static function uncountable($value)$/;"	f
uncountable	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Pluralizer.php	/^	public static $uncountable = array($/;"	v
under	.\Source\application\library\vendor\composer\ClassLoader.php	/^ * the autoloader will first look for the class under the component\/$/;"	c
underscoreSeparatedKeys	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^        $this->underscoreSeparatedKeys = (bool) $underscoreSeparatedKeys;$/;"	v
underscoreSeparatedKeys	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^    protected $underscoreSeparatedKeys = true;$/;"	v
underscoreToStudlyCaseFilter	.\Source\application\library\Zend\Stdlib\Hydrator\NamingStrategy\UnderscoreNamingStrategy.php	/^    protected static $underscoreToStudlyCaseFilter;$/;"	v
ungroupedPaginate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	protected function ungroupedPaginate($paginator, $perPage, $columns)$/;"	f
ungroupedPaginate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function ungroupedPaginate($paginator, $perPage, $columns)$/;"	f
unguard	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function unguard()$/;"	f
unguarded	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected static $unguarded = false;$/;"	v
union	.\Source\application\library\Zend\Db\Sql\Combine.php	/^    public function union($select, $modifier = '')$/;"	f
union	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function union($query, $all = false)$/;"	f
unionAll	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function unionAll($query)$/;"	f
unionLimit	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $unionLimit;$/;"	v
unionOffset	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $unionOffset;$/;"	v
unionOrders	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $unionOrders;$/;"	v
unions	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $unions;$/;"	v
unique	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Collection.php	/^	public function unique()$/;"	f
unique	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function unique($columns, $name = null)$/;"	f
unique	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function unique()$/;"	f
unit	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                    $unit = 'week';$/;"	v
unit	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $unit = 'day';$/;"	v
unit	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $unit = 'hour';$/;"	v
unit	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $unit = 'minute';$/;"	v
unit	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $unit = 'month';$/;"	v
unit	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $unit = 'second';$/;"	v
unit	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^                $unit = 'year';$/;"	v
unit	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^        foreach ($periods as $unit => $count) {$/;"	v
unitKeys	.\Source\application\library\Zend\Validator\DateStep.php	/^        $unitKeys = array('years', 'months', 'days', 'hours', 'minutes', 'seconds');$/;"	v
unlock	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function unlock($key = null)$/;"	f
unlock	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^    public function unlock($key = null)$/;"	f
unlock	.\Source\application\library\Zend\Session\Storage\StorageInterface.php	/^    public function unlock($key = null);$/;"	f
unnest	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^        $this->unnest = $predicate;$/;"	v
unnest	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^        $this->unnest = null;$/;"	v
unnest	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^        $unnest       = $this->unnest;$/;"	v
unnest	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    protected $unnest = null;$/;"	v
unnest	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function unnest()$/;"	f
unprepared	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function unprepared($query)$/;"	f
unprepared	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function unprepared($query);$/;"	f
unregister	.\Source\application\library\vendor\composer\ClassLoader.php	/^    public function unregister()$/;"	f
unregisterWrapper	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    public static function unregisterWrapper($wrapper)$/;"	f
unserialize	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^    public function unserialize($session)$/;"	f
unserialize	.\Source\application\library\Zend\Stdlib\ArrayObject.php	/^    public function unserialize($data)$/;"	f
unserialize	.\Source\application\library\Zend\Stdlib\PriorityQueue.php	/^    public function unserialize($data)$/;"	f
unserialize	.\Source\application\library\Zend\Stdlib\SplPriorityQueue.php	/^    public function unserialize($data)$/;"	f
unserialize	.\Source\application\library\Zend\Stdlib\SplQueue.php	/^    public function unserialize($data)$/;"	f
unserialize	.\Source\application\library\Zend\Stdlib\SplStack.php	/^    public function unserialize($data)$/;"	f
unsetConnectionResolver	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function unsetConnectionResolver()$/;"	f
unsetEventDispatcher	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function unsetEventDispatcher()$/;"	f
unsign	.\Source\application\library\vendor\lcobucci\jwt\src\Builder.php	/^    public function unsign()$/;"	f
unsignMustKeepAFluentInterface	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function unsignMustKeepAFluentInterface(Builder $builder)$/;"	f
unsignMustRemoveTheSignature	.\Source\application\library\vendor\lcobucci\jwt\test\unit\BuilderTest.php	/^    public function unsignMustRemoveTheSignature(Builder $builder)$/;"	f
unsignedBigInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function unsignedBigInteger($column, $autoIncrement = false)$/;"	f
unsignedInteger	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Blueprint.php	/^	public function unsignedInteger($column, $autoIncrement = false)$/;"	f
until	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	public function until($event, $payload = array())$/;"	f
update	.\Source\application\library\Alpaca\Db\Table\AbstractTable.php	/^    public function update($updateQuery,$insertIfNull=false)$/;"	f
update	.\Source\application\library\Zend\Db\Sql\Sql.php	/^    public function update($table = null)$/;"	f
update	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $update = $sql->update();$/;"	v
update	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function update($set, $where = null)$/;"	f
update	.\Source\application\library\Zend\Db\TableGateway\TableGatewayInterface.php	/^    public function update($set, $where = null);$/;"	f
update	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function update($query, $bindings = array())$/;"	f
update	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\ConnectionInterface.php	/^	public function update($query, $bindings = array());$/;"	f
update	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function update(array $values)$/;"	f
update	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function update(array $attributes = array())$/;"	f
update	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsTo.php	/^	public function update(array $attributes)$/;"	f
update	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^	public function update(array $attributes)$/;"	f
update	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function update(array $values)$/;"	f
updateExistingPivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function updateExistingPivot($id, array $attributes, $touch = true)$/;"	f
updateOrCreate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function updateOrCreate(array $attributes, array $values = array())$/;"	f
updateRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^        $this->updateRule = $updateRule;$/;"	v
updateRule	.\Source\application\library\Zend\Db\Metadata\Object\ConstraintObject.php	/^    protected $updateRule;$/;"	v
updateState	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^        $updateState = $update->getRawState();$/;"	v
updateTimestamps	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected function updateTimestamps()$/;"	f
updateWith	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function updateWith(Update $update)$/;"	f
updated	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function updated($callback)$/;"	f
updated	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$updated = $this->newPivotStatementForId($id)->update($attributes);$/;"	v
updatedAt	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function withTimestamps($createdAt = null, $updatedAt = null)$/;"	v
updatedAt	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function updatedAt()$/;"	f
updating	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function updating($callback)$/;"	f
upper	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function upper($value)$/;"	f
upper	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                    $upper = self::getData('upperCase');$/;"	v
upper	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^                static $upper = null;$/;"	v
uri	.\Source\application\library\Zend\Validator\Sitemap\Loc.php	/^        $uri = Uri\\UriFactory::factory($value);$/;"	v
uriHandler	.\Source\application\library\Zend\Validator\Uri.php	/^            $this->uriHandler = new $this->uriHandler;$/;"	v
uriHandler	.\Source\application\library\Zend\Validator\Uri.php	/^            $this->uriHandler = new UriHandler();$/;"	v
uriHandler	.\Source\application\library\Zend\Validator\Uri.php	/^        $this->uriHandler = $uriHandler;$/;"	v
uriHandler	.\Source\application\library\Zend\Validator\Uri.php	/^        $uriHandler = $this->getUriHandler();$/;"	v
uriHandler	.\Source\application\library\Zend\Validator\Uri.php	/^    protected $uriHandler;$/;"	v
url	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function url($path = null, $parameters = array(), $secure = null)$/;"	f
useByteString	.\Source\application\library\Zend\Validator\File\Size.php	/^    public function useByteString($byteString = true)$/;"	f
useChecksum	.\Source\application\library\Zend\Validator\Barcode.php	/^    public function useChecksum($checksum = null)$/;"	f
useChecksum	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^    public function useChecksum($check = null)$/;"	f
useChecksum	.\Source\application\library\Zend\Validator\Barcode\AdapterInterface.php	/^    public function useChecksum($check = null);$/;"	f
useCookies	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^            $this->useCookies = $this->getStorageOption('use_cookies');$/;"	v
useCookies	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $this->useCookies = (bool) $useCookies;$/;"	v
useCookies	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^    protected $useCookies;$/;"	v
useDeepMxCheck	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function useDeepMxCheck($deep)$/;"	f
useDefaultPostProcessor	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function useDefaultPostProcessor()$/;"	f
useDefaultQueryGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function useDefaultQueryGrammar()$/;"	f
useDefaultSchemaGrammar	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function useDefaultSchemaGrammar()$/;"	f
useDomainCheck	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function useDomainCheck($domain = true)$/;"	f
useIdnCheck	.\Source\application\library\Zend\Validator\Hostname.php	/^    public function useIdnCheck($useIdnCheck)$/;"	f
useIncludePath	.\Source\application\library\vendor\composer\ClassLoader.php	/^        $this->useIncludePath = $useIncludePath;$/;"	v
useIncludePath	.\Source\application\library\vendor\composer\ClassLoader.php	/^    private $useIncludePath = false;$/;"	v
useInternalXmlErrors	.\Source\application\library\vendor\zendframework\zendxml\library\ZendXml\Security.php	/^            $useInternalXmlErrors = libxml_use_internal_errors(true);$/;"	v
useMxCheck	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    public function useMxCheck($mx)$/;"	f
useProxy	.\Source\application\library\Zend\Session\Validator\RemoteAddr.php	/^    protected static $useProxy = false;$/;"	v
useStaticLoader	.\Source\application\library\vendor\composer\autoload_real.php	/^        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION');$/;"	v
useTldCheck	.\Source\application\library\Zend\Validator\Hostname.php	/^    public function useTldCheck($useTldCheck)$/;"	f
useWithTrashed	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	protected function useWithTrashed(Builder $query)$/;"	f
useWritePdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->useWritePdo = true;$/;"	v
useWritePdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected $useWritePdo = false;$/;"	v
useWritePdo	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function useWritePdo()$/;"	f
usecheck	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^        $usecheck   = $this->useChecksum(null);$/;"	v
used	.\Source\application\library\vendor\symfony\translation\Extractor\AbstractFileExtractor.php	/^ * Base class used by classes that extract translation messages from files.$/;"	c
user	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^        $user = (object) ['name' => 'testing', 'email' => 'testing@abc.com'];$/;"	v
user	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^        $user = (object) ['name' => 'testing', 'email' => 'testing@abc.com'];$/;"	v
user	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^        $user = (object) ['name' => 'testing', 'email' => 'testing@abc.com'];$/;"	v
user	.\Source\application\library\vendor\lcobucci\jwt\test\functional\UnsignedTokenTest.php	/^        $user = (object) ['name' => 'testing', 'email' => 'testing@abc.com'];$/;"	v
userAgent	.\Source\application\library\Zend\Session\Validator\HttpUserAgent.php	/^        $userAgent = isset($_SERVER['HTTP_USER_AGENT'])$/;"	v
user_data	.\Source\application\module\Index\Controller\PassportController.php	/^            $user_data = new User;$/;"	v
user_data	.\Source\application\module\Index\Controller\PassportController.php	/^        $user_data = User::where('user_name',$user_name);$/;"	v
user_name	.\Source\application\module\Index\Controller\PassportController.php	/^        $user_name = $this->params[0];$/;"	v
username	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Connection.php	/^        $username     = $findParameterValue(array('username', 'uid', 'UID'));$/;"	v
username	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Connection.php	/^        $username = $findParameterValue(array('username', 'user'));$/;"	v
username	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $username = $findParameterValue(array('username'));$/;"	v
username	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                    $username = (string) $value;$/;"	v
username	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\Connector.php	/^		$username = array_get($config, 'username');$/;"	v
usesTimestamps	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public function usesTimestamps()$/;"	f
utf8StrWrapper	.\Source\application\library\Zend\Validator\Hostname.php	/^        $utf8StrWrapper = StringUtils::getWrapper('UTF-8');$/;"	v
utf8StringWrapper	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^            $this->utf8StringWrapper = StringUtils::getWrapper('UTF-8');$/;"	v
utf8StringWrapper	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^        $this->utf8StringWrapper = $utf8StringWrapper;$/;"	v
utf8StringWrapper	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^    protected $utf8StringWrapper;$/;"	v
utf8ToCharset	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    private function utf8ToCharset($content, $encoding = null)$/;"	f
v	.\Source\application\library\Zend\Db\Sql\Select.php	/^                    $v = self::ORDER_ASCENDING;$/;"	v
v	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^            if (false === $v = Mbstring::mb_convert_encoding($v, $toEncoding, $fromEncoding)) {$/;"	v
vIndex	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            foreach ($values as $vIndex => $value) {$/;"	v
val	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^            $val = (int) $value;$/;"	v
valid	.\Source\application\library\Zend\Db\Adapter\Driver\IbmDb2\Result.php	/^    public function valid()$/;"	f
valid	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Result.php	/^    public function valid()$/;"	f
valid	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^            $valid = @oci_execute($ociStmt, OCI_COMMIT_ON_SUCCESS);$/;"	v
valid	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^            $valid = @oci_execute($ociStmt, OCI_NO_AUTO_COMMIT);$/;"	v
valid	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^            $valid = oci_commit($this->resource);$/;"	v
valid	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Connection.php	/^        $valid = oci_rollback($this->resource);$/;"	v
valid	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Result.php	/^    public function valid()$/;"	f
valid	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Result.php	/^    public function valid()$/;"	f
valid	.\Source\application\library\Zend\Db\Adapter\Driver\Pgsql\Result.php	/^    public function valid()$/;"	f
valid	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Result.php	/^    public function valid()$/;"	f
valid	.\Source\application\library\Zend\Db\Adapter\ParameterContainer.php	/^    public function valid()$/;"	f
valid	.\Source\application\library\Zend\Db\ResultSet\AbstractResultSet.php	/^    public function valid()$/;"	f
valid	.\Source\application\library\Zend\Stdlib\PriorityList.php	/^    public function valid()$/;"	f
valid	.\Source\application\library\Zend\Validator\Db\NoRecordExists.php	/^            $valid = false;$/;"	v
valid	.\Source\application\library\Zend\Validator\Db\NoRecordExists.php	/^        $valid = true;$/;"	v
valid	.\Source\application\library\Zend\Validator\Db\RecordExists.php	/^            $valid = false;$/;"	v
valid	.\Source\application\library\Zend\Validator\Db\RecordExists.php	/^        $valid = true;$/;"	v
validAddress	.\Source\application\library\Zend\Validator\EmailAddress.php	/^                $validAddress = true;$/;"	v
validAddress	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $validAddress = false;$/;"	v
validCacheLimiters	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    protected $validCacheLimiters = array($/;"	v
validHashBitsPerCharacters	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    protected $validHashBitsPerCharacters = array($/;"	v
validHashFunctions	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^            $this->validHashFunctions = array('0', '1') + hash_algos();$/;"	v
validHashFunctions	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^        $validHashFunctions = $this->getHashFunctions();$/;"	v
validHashFunctions	.\Source\application\library\Zend\Session\Config\SessionConfig.php	/^    protected $validHashFunctions;$/;"	v
validIdns	.\Source\application\library\Zend\Validator\Hostname.php	/^    protected $validIdns = array($/;"	v
validTlds	.\Source\application\library\Zend\Validator\Hostname.php	/^    protected $validTlds = array($/;"	v
validate	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\EqualsTo.php	/^    public function validate(ValidationData $data)$/;"	f
validate	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\GreaterOrEqualsTo.php	/^    public function validate(ValidationData $data)$/;"	f
validate	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\LesserOrEqualsTo.php	/^    public function validate(ValidationData $data)$/;"	f
validate	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Validatable.php	/^    public function validate(ValidationData $data);$/;"	f
validate	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function validate(ValidationData $data)$/;"	f
validateHostnamePart	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected function validateHostnamePart()$/;"	f
validateIPv4	.\Source\application\library\Zend\Validator\Ip.php	/^    protected function validateIPv4($value)$/;"	f
validateIPv6	.\Source\application\library\Zend\Validator\Ip.php	/^    protected function validateIPv6($value)$/;"	f
validateIPvFuture	.\Source\application\library\Zend\Validator\Ip.php	/^    protected function validateIPvFuture($value)$/;"	f
validateKey	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Rsa.php	/^    private function validateKey($key)$/;"	f
validateLocalPart	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected function validateLocalPart()$/;"	f
validateMXRecords	.\Source\application\library\Zend\Validator\EmailAddress.php	/^    protected function validateMXRecords()$/;"	f
validateMatrix	.\Source\application\library\vendor\symfony\translation\Tests\PluralizationRulesTest.php	/^    protected function validateMatrix($nplural, $matrix, $expectSuccess = true)$/;"	f
validatePlugin	.\Source\application\library\Zend\Stdlib\Hydrator\HydratorPluginManager.php	/^    public function validatePlugin($plugin)$/;"	f
validatePlugin	.\Source\application\library\Zend\Validator\ValidatorPluginManager.php	/^    public function validatePlugin($plugin)$/;"	f
validateSchema	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^    private function validateSchema($file, \\DOMDocument $dom, $schema)$/;"	f
validateShouldReturnFalseWhenThereIsAtLeastOneFailedValidatableClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function validateShouldReturnFalseWhenThereIsAtLeastOneFailedValidatableClaim()$/;"	f
validateShouldReturnFalseWhenValueIsGreaterThanValidationData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\LesserOrEqualsToTest.php	/^    public function validateShouldReturnFalseWhenValueIsGreaterThanValidationData()$/;"	f
validateShouldReturnFalseWhenValueIsLesserThanValidationData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\GreaterOrEqualsToTest.php	/^    public function validateShouldReturnFalseWhenValueIsLesserThanValidationData()$/;"	f
validateShouldReturnFalseWhenValueIsNotEqualsToValidationData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\EqualsToTest.php	/^    public function validateShouldReturnFalseWhenValueIsNotEqualsToValidationData()$/;"	f
validateShouldReturnTrueWhenClaimsAreEmpty	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function validateShouldReturnTrueWhenClaimsAreEmpty()$/;"	f
validateShouldReturnTrueWhenThereAreNoFailedValidatableClaims	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function validateShouldReturnTrueWhenThereAreNoFailedValidatableClaims()$/;"	f
validateShouldReturnTrueWhenThereAreNoValidatableClaims	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function validateShouldReturnTrueWhenThereAreNoValidatableClaims()$/;"	f
validateShouldReturnTrueWhenValidationDontHaveTheClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\EqualsToTest.php	/^    public function validateShouldReturnTrueWhenValidationDontHaveTheClaim()$/;"	f
validateShouldReturnTrueWhenValidationDontHaveTheClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\GreaterOrEqualsToTest.php	/^    public function validateShouldReturnTrueWhenValidationDontHaveTheClaim()$/;"	f
validateShouldReturnTrueWhenValidationDontHaveTheClaim	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\LesserOrEqualsToTest.php	/^    public function validateShouldReturnTrueWhenValidationDontHaveTheClaim()$/;"	f
validateShouldReturnTrueWhenValueIsEqualsToValidationData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\EqualsToTest.php	/^    public function validateShouldReturnTrueWhenValueIsEqualsToValidationData()$/;"	f
validateShouldReturnTrueWhenValueIsEqualsToValidationData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\GreaterOrEqualsToTest.php	/^    public function validateShouldReturnTrueWhenValueIsEqualsToValidationData()$/;"	f
validateShouldReturnTrueWhenValueIsEqualsToValidationData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\LesserOrEqualsToTest.php	/^    public function validateShouldReturnTrueWhenValueIsEqualsToValidationData()$/;"	f
validateShouldReturnTrueWhenValueIsGreaterThanValidationData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\GreaterOrEqualsToTest.php	/^    public function validateShouldReturnTrueWhenValueIsGreaterThanValidationData()$/;"	f
validateShouldReturnTrueWhenValueIsLesserThanValidationData	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Claim\LesserOrEqualsToTest.php	/^    public function validateShouldReturnTrueWhenValueIsLesserThanValidationData()$/;"	f
validateStringCallbackFor54	.\Source\application\library\Zend\Stdlib\CallbackHandler.php	/^    protected function validateStringCallbackFor54($callback)$/;"	f
validator	.\Source\application\library\Alpaca\Tools\Validate.php	/^	private $validator = array($/;"	v
validator	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $validator = new HostnameValidator(HostnameValidator::ALLOW_ALL);$/;"	v
validator	.\Source\application\library\Zend\Session\SessionManager.php	/^            $validator = new $validator(null);$/;"	v
validator	.\Source\application\library\Zend\Session\SessionManager.php	/^        $validator = $this->getValidatorChain();$/;"	v
validator	.\Source\application\library\Zend\Session\ValidatorChain.php	/^            foreach ($validators as $validator => $data) {$/;"	v
validator	.\Source\application\library\Zend\Validator\Explode.php	/^            $validator = $this->getValidatorPluginManager()->get($name, $options);$/;"	v
validator	.\Source\application\library\Zend\Validator\Explode.php	/^        $this->validator = $validator;$/;"	v
validator	.\Source\application\library\Zend\Validator\Explode.php	/^        $validator = $this->getValidator();$/;"	v
validator	.\Source\application\library\Zend\Validator\Explode.php	/^    protected $validator;$/;"	v
validator	.\Source\application\library\Zend\Validator\StaticValidator.php	/^        $validator = $plugins->get($classBaseName, $args);$/;"	v
validator	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^            $validator = $element['instance'];$/;"	v
validator	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^        $validator = $this->plugin($name, $options);$/;"	v
validatorChain	.\Source\application\library\Zend\Session\SessionManager.php	/^        $this->validatorChain = $chain;$/;"	v
validatorChain	.\Source\application\library\Zend\Session\SessionManager.php	/^        $validatorChain  = $this->getValidatorChain();$/;"	v
validatorChain	.\Source\application\library\Zend\Session\SessionManager.php	/^    protected $validatorChain;$/;"	v
validatorValues	.\Source\application\library\Zend\Session\SessionManager.php	/^        $validatorValues = $this->getStorage()->getMetadata('_VALID');$/;"	v
validators	.\Source\application\library\Zend\Session\AbstractManager.php	/^        $this->validators = $validators;$/;"	v
validators	.\Source\application\library\Zend\Session\AbstractManager.php	/^        array $validators = array()$/;"	v
validators	.\Source\application\library\Zend\Session\AbstractManager.php	/^    protected $validators;$/;"	v
validators	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^                $validators = $managerConfig['validators'];$/;"	v
validators	.\Source\application\library\Zend\Session\Service\SessionManagerFactory.php	/^        $validators    = array();$/;"	v
validators	.\Source\application\library\Zend\Session\SessionManager.php	/^        array $validators = array()$/;"	v
validators	.\Source\application\library\Zend\Session\ValidatorChain.php	/^        $validators = $storage->getMetadata('_VALID');$/;"	v
validators	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^        $this->validators = clone $this->validators;$/;"	v
validators	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^        $this->validators = new PriorityQueue();$/;"	v
validators	.\Source\application\library\Zend\Validator\ValidatorChain.php	/^    protected $validators;$/;"	v
vals	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $vals = array_filter(iterator_to_array($period), function (DateTime $date) use ($callback) {$/;"	v
value	.\Source\application\library\Zend\Db\Adapter\Driver\Mysqli\Statement.php	/^                        $value = null; \/\/ as per @see http:\/\/www.php.net\/manual\/en\/mysqli-stmt.bind-param.php#96148$/;"	v
value	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                            $value = (int) $value;$/;"	v
value	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                        $value = $clob;$/;"	v
value	.\Source\application\library\Zend\Db\Adapter\Driver\Oci8\Statement.php	/^                        $value = null;$/;"	v
value	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                    $value = (array) $value;$/;"	v
value	.\Source\application\library\Zend\Db\Adapter\Driver\Pdo\Connection.php	/^                    $value = strtolower((string) $value);$/;"	v
value	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^                $value = '(?:' . implode('\\\\s*+', $value) . '\\\\s*+)?';$/;"	v
value	.\Source\application\library\Zend\Db\Metadata\Source\SqliteMetadata.php	/^    protected function fetchPragma($name, $value = null, $schema = null)$/;"	v
value	.\Source\application\library\Zend\Db\Sql\AbstractExpression.php	/^            $value = current($argument);$/;"	v
value	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^            $value  = array_shift($args);$/;"	v
value	.\Source\application\library\Zend\Session\Config\StandardConfig.php	/^        $value = $this->getStorageOption($option);$/;"	v
value	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^            $value = $strategy->extract($value, $object);$/;"	v
value	.\Source\application\library\Zend\Stdlib\Hydrator\AbstractHydrator.php	/^            $value = $strategy->hydrate($value, $data);$/;"	v
value	.\Source\application\library\Zend\Stdlib\Hydrator\Reflection.php	/^            $value = $property->getValue($object);$/;"	v
value	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\BooleanStrategy.php	/^        return $value === true ? $this->trueValue : $this->falseValue;$/;"	v
value	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\DateTimeFormatterStrategy.php	/^        if ($value === '' || $value === null) {$/;"	v
value	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyChain.php	/^            $value = $strategy->extract($value);$/;"	v
value	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\StrategyChain.php	/^            $value = $strategy->hydrate($value);$/;"	v
value	.\Source\application\library\Zend\Stdlib\Message.php	/^    public function setMetadata($spec, $value = null)$/;"	v
value	.\Source\application\library\Zend\Stdlib\MessageInterface.php	/^    public function setMetadata($spec, $value = null);$/;"	v
value	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^                    $value = '[' . implode(', ', $value) . ']';$/;"	v
value	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^                $value = $this->$property;$/;"	v
value	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^                $value = $this->{key($property)}[current($property)];$/;"	v
value	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $value = $this->value;$/;"	v
value	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $value = (string) $value;$/;"	v
value	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $value = get_class($value) . ' object';$/;"	v
value	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $value = str_repeat('*', strlen($value));$/;"	v
value	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^            $value = var_export($value, 1);$/;"	v
value	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^        $this->value               = $value;$/;"	v
value	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    protected $value;$/;"	v
value	.\Source\application\library\Zend\Validator\AbstractValidator.php	/^    protected function error($messageKey, $value = null)$/;"	v
value	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^                $value = str_replace($char, '', $value);$/;"	v
value	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^                $value = str_replace(chr($x), '', $value);$/;"	v
value	.\Source\application\library\Zend\Validator\Barcode\Codabar.php	/^            $value = substr($value, 1, -1);$/;"	v
value	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^            $value = $strWrapper->substr($value, 1);$/;"	v
value	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^            $value = $strWrapper->substr($value, 1, null);$/;"	v
value	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^        $value = $strWrapper->substr($value, 1, null);$/;"	v
value	.\Source\application\library\Zend\Validator\Barcode\Code128.php	/^        $value = $this->getUtf8StringWrapper()->substr($value, 0, 1);$/;"	v
value	.\Source\application\library\Zend\Validator\Barcode\Code39.php	/^        $value    = str_split(substr($value, 0, -1));$/;"	v
value	.\Source\application\library\Zend\Validator\Barcode\Code93.php	/^        $value    = str_split(substr($value, 0, -2));$/;"	v
value	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^                $value = substr($value, 0, -1);$/;"	v
value	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^            $value = substr($value, 1);$/;"	v
value	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $value = is_string($value) ? $value : '';$/;"	v
value	.\Source\application\library\Zend\Validator\Explode.php	/^            $value = ArrayUtils::iteratorToArray($value);$/;"	v
value	.\Source\application\library\Zend\Validator\File\Count.php	/^                    $this->value = $file['name'];$/;"	v
value	.\Source\application\library\Zend\Validator\File\Count.php	/^                $this->value = $file;$/;"	v
value	.\Source\application\library\Zend\Validator\File\Count.php	/^            $value = $file['destination'] . DIRECTORY_SEPARATOR . $file['name'];$/;"	v
value	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^                    $this->value = $file['name'];$/;"	v
value	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^                $this->value = $file;$/;"	v
value	.\Source\application\library\Zend\Validator\File\FilesSize.php	/^            $value = array($value);$/;"	v
value	.\Source\application\library\Zend\Validator\File\Size.php	/^            $value = substr($value, 0, -1);$/;"	v
value	.\Source\application\library\Zend\Validator\File\Size.php	/^        $value = substr($size, 0, -1);$/;"	v
value	.\Source\application\library\Zend\Validator\File\Upload.php	/^                    $this->value = $file['name'];$/;"	v
value	.\Source\application\library\Zend\Validator\File\Upload.php	/^                $this->value = $file;$/;"	v
value	.\Source\application\library\Zend\Validator\File\Upload.php	/^            $this->value = $file;$/;"	v
value	.\Source\application\library\Zend\Validator\Hostname.php	/^                $value = substr($value, 0, -1);$/;"	v
value	.\Source\application\library\Zend\Validator\Iban.php	/^        $value = str_replace(' ', '', strtoupper($value));$/;"	v
value	.\Source\application\library\Zend\Validator\InArray.php	/^            $value = (string) $value;$/;"	v
value	.\Source\application\library\Zend\Validator\Ip.php	/^                    $value = $matches[1];$/;"	v
value	.\Source\application\library\Zend\Validator\Ip.php	/^            $value = (int) substr($value, 0, 3) . '.' . (int) substr($value, 4, 3) . '.'$/;"	v
value	.\Source\application\library\Zend\Validator\Ip.php	/^            $value = bindec(substr($value, 0, 8)) . '.' . bindec(substr($value, 9, 8)) . '.'$/;"	v
value	.\Source\application\library\Zend\Validator\Ip.php	/^            $value = hexdec(substr($value, 0, 2)) . '.' . hexdec(substr($value, 3, 2)) . '.'$/;"	v
value	.\Source\application\library\Zend\Validator\Ip.php	/^            $value = substr($value, 0, $lastcolon) . ':0:0';$/;"	v
value	.\Source\application\library\Zend\Validator\Ip.php	/^            return $value == '::';$/;"	v
value	.\Source\application\library\Zend\Validator\Isbn.php	/^        $value = (string) $value;$/;"	v
value	.\Source\application\library\Zend\Validator\Sitemap\Priority.php	/^        $value = (float) $value;$/;"	v
value	.\Source\application\library\vendor\illuminate\container\Illuminate\Container\Container.php	/^			$value = function() use ($value)$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^				$value = $this->model->newFromBuilder($fill)->$column;$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$value = $this->fromDateTime($value);$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$value = Carbon::createFromFormat($format, $value);$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$value = Carbon::createFromFormat('Y-m-d', $value)->startOfDay();$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			$value = Carbon::createFromTimestamp($value);$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$value = $this->getAttributeFromArray($key);$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$value = $this->mutateAttribute($key, $value);$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasManyThrough.php	/^				$value = $this->related->newCollection($dictionary[$key]);$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^				$value = $this->getRelationValue($dictionary, $key, $type);$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\HasOneOrMany.php	/^		$value = $dictionary[$key];$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Expression.php	/^		$this->value = $value;$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Expression.php	/^	protected $value;$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$value = $this->parameter($where['value']);$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$value = array_fill(0, count($values), "($parameters)");$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^		$value = $this->parameter($value);$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^		$value = str_pad($where['value'], 2, '0', STR_PAD_LEFT);$/;"	v
value	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^		if ($value instanceof Fluent) $value = $value->name;$/;"	v
value	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^				if (array_key_exists($segment, $value = (array) $value))$/;"	v
value	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^		$value = static::get($array, $key, $default);$/;"	v
value	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^			$value = strtolower(preg_replace('\/(.)([A-Z])\/', $replace, $value));$/;"	v
value	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^		$value = ucwords(str_replace(array('-', '_'), ' ', $value));$/;"	v
value	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function value($value)$/;"	f
value	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Basic.php	/^        $this->value = $value;$/;"	v
value	.\Source\application\library\vendor\lcobucci\jwt\src\Claim\Basic.php	/^    private $value;$/;"	v
value	.\Source\application\library\vendor\lcobucci\jwt\src\Parser.php	/^            $value = $this->claimFactory->create($name, $value);$/;"	v
value	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\Ecdsa.php	/^        $value = unpack('H*', $value)[1];$/;"	v
value	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $value = $dt->getTimestamp() - $this->getTimestamp();$/;"	v
valueDate	.\Source\application\library\Zend\Validator\DateStep.php	/^        $valueDate = $this->convertToDateTime($value, false); \/\/ avoid duplicate errors$/;"	v
valueDelimiter	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ExplodeStrategy.php	/^        $this->valueDelimiter = $delimiter;$/;"	v
valueDelimiter	.\Source\application\library\Zend\Stdlib\Hydrator\Strategy\ExplodeStrategy.php	/^    private $valueDelimiter;$/;"	v
valueDelimiter	.\Source\application\library\Zend\Validator\Explode.php	/^        $this->valueDelimiter = $delimiter;$/;"	v
valueDelimiter	.\Source\application\library\Zend\Validator\Explode.php	/^    protected $valueDelimiter = ',';$/;"	v
valueParameter	.\Source\application\library\Zend\Db\Sql\Predicate\Expression.php	/^    public function __construct($expression = null, $valueParameter = null \/*[, $valueParameter, ... ]*\/)$/;"	v
valueRetriever	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	protected function valueRetriever($value)$/;"	f
valueSet	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^        $this->valueSet = $valueSet;$/;"	v
valueSet	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^    protected $valueSet;$/;"	v
valueSet	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^    public function __construct($identifier = null, $valueSet = null)$/;"	v
valueSet	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function in($identifier, $valueSet = null)$/;"	v
valueSet	.\Source\application\library\Zend\Db\Sql\Predicate\Predicate.php	/^    public function notIn($identifier, $valueSet = null)$/;"	v
valueSpecSpecification	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^    protected $valueSpecSpecification = '%%s IN (%s)';$/;"	v
values	.\Source\application\library\Zend\Db\Adapter\Driver\Sqlsrv\Statement.php	/^        $values = $this->parameterContainer->getPositionalArray();$/;"	v
values	.\Source\application\library\Zend\Db\Sql\AbstractSql.php	/^            $values = $part[1];$/;"	v
values	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^            $values = array_merge($values, $this->columns);$/;"	v
values	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\AbstractConstraint.php	/^        $values = array();$/;"	v
values	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\Check.php	/^        $values       = array($this->expression);$/;"	v
values	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^            $values       = array_merge($values, $this->referenceColumn);$/;"	v
values	.\Source\application\library\Zend\Db\Sql\Ddl\Constraint\ForeignKey.php	/^        $values       = array($this->referenceTable);$/;"	v
values	.\Source\application\library\Zend\Db\Sql\Ddl\Index\Index.php	/^        $values       = array();$/;"	v
values	.\Source\application\library\Zend\Db\Sql\Insert.php	/^        $values  = array();$/;"	v
values	.\Source\application\library\Zend\Db\Sql\Insert.php	/^    public function values($values, $flag = self::VALUES_SET)$/;"	f
values	.\Source\application\library\Zend\Db\Sql\Predicate\In.php	/^        $values = $this->getValueSet();$/;"	v
values	.\Source\application\library\Zend\Db\TableGateway\Feature\SequenceFeature.php	/^        $values = $insert->getRawState('values');$/;"	v
values	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^            $values = $_SESSION;$/;"	v
values	.\Source\application\library\Zend\Session\Storage\AbstractSessionArrayStorage.php	/^            $values = array();$/;"	v
values	.\Source\application\library\Zend\Session\Storage\ArrayStorage.php	/^        $values = $this->getArrayCopy();$/;"	v
values	.\Source\application\library\Zend\Stdlib\Hydrator\ClassMethods.php	/^        $values = array();$/;"	v
values	.\Source\application\library\Zend\Stdlib\Parameters.php	/^            $values = array();$/;"	v
values	.\Source\application\library\Zend\Stdlib\Parameters.php	/^    public function __construct(array $values = null)$/;"	v
values	.\Source\application\library\Zend\Stdlib\ParametersInterface.php	/^    public function __construct(array $values = null);$/;"	v
values	.\Source\application\library\Zend\Validator\Barcode\AbstractAdapter.php	/^        $values   = str_split(substr($value, 0, -1));$/;"	v
values	.\Source\application\library\Zend\Validator\Barcode\Issn.php	/^        $values   = str_split(substr($value, 0, -1));$/;"	v
values	.\Source\application\library\Zend\Validator\Barcode\Royalmail.php	/^        $values   = str_split(substr($value, 0, -1));$/;"	v
values	.\Source\application\library\Zend\Validator\Explode.php	/^            $values = $value;$/;"	v
values	.\Source\application\library\Zend\Validator\Explode.php	/^            $values = (null !== $delimiter)$/;"	v
values	.\Source\application\library\Zend\Validator\Explode.php	/^            $values = array($value);$/;"	v
values	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function updateOrCreate(array $attributes, array $values = array())$/;"	v
values	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^		$values = array();$/;"	v
values	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^			$values = array($values);$/;"	v
values	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$values = $results->fetch($columns[0])->all();$/;"	v
values	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$values = $this->cleanBindings($values);$/;"	v
values	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^			$values = array($values);$/;"	v
values	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$values = $this->parameterize($where['values']);$/;"	v
values	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^			$values = array($values);$/;"	v
values	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^			if ($values instanceof Collection) $values = $values->all();$/;"	v
values	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^	public function values()$/;"	f
variables	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\SerializableClosure.php	/^	protected $variables;$/;"	v
vars	.\Source\application\library\Zend\Session\AbstractContainer.php	/^            $vars = (array) $vars;$/;"	v
vars	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function setExpirationHops($hops, $vars = null)$/;"	v
vars	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    public function setExpirationSeconds($ttl, $vars = null)$/;"	v
vars	.\Source\application\library\vendor\symfony\polyfill-mbstring\Mbstring.php	/^        $vars = array(&$a, &$b, &$c, &$d, &$e, &$f);$/;"	v
vendorDir	.\Source\application\library\vendor\composer\autoload_classmap.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
vendorDir	.\Source\application\library\vendor\composer\autoload_files.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
vendorDir	.\Source\application\library\vendor\composer\autoload_namespaces.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
vendorDir	.\Source\application\library\vendor\composer\autoload_psr4.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
verify	.\Source\application\library\Alpaca\Tools\Validate.php	/^	public static function verify($value,$reg)$/;"	f
verify	.\Source\application\library\vendor\lcobucci\jwt\src\Signature.php	/^    public function verify(Signer $signer, $payload, $key)$/;"	f
verify	.\Source\application\library\vendor\lcobucci\jwt\src\Signer.php	/^    public function verify($expected, $payload, $key);$/;"	f
verify	.\Source\application\library\vendor\lcobucci\jwt\src\Signer\BaseSigner.php	/^    public function verify($expected, $payload, $key)$/;"	f
verify	.\Source\application\library\vendor\lcobucci\jwt\src\Token.php	/^    public function verify(Signer $signer, $key)$/;"	f
verifyMustDelegateTheValidationToSignature	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function verifyMustDelegateTheValidationToSignature()$/;"	f
verifyMustRaiseExceptionWhenTokenIsUnsigned	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function verifyMustRaiseExceptionWhenTokenIsUnsigned()$/;"	f
verifyMustReturnWhatSignerSays	.\Source\application\library\vendor\lcobucci\jwt\test\unit\SignatureTest.php	/^    public function verifyMustReturnWhatSignerSays()$/;"	f
verifyNamespace	.\Source\application\library\Zend\Session\AbstractContainer.php	/^    protected function verifyNamespace($createContainer = true)$/;"	f
verifyShouldConvertKeyWhenItsNotAnObject	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\BaseSignerTest.php	/^    public function verifyShouldConvertKeyWhenItsNotAnObject()$/;"	f
verifyShouldDelegateTheCallToAbstractMethod	.\Source\application\library\vendor\lcobucci\jwt\test\unit\Signer\BaseSignerTest.php	/^    public function verifyShouldDelegateTheCallToAbstractMethod()$/;"	f
verifyShouldRaiseExceptionWhenKeyIsNotEcdsaCompatible	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^    public function verifyShouldRaiseExceptionWhenKeyIsNotEcdsaCompatible(Token $token)$/;"	f
verifyShouldRaiseExceptionWhenKeyIsNotRsaCompatible	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^    public function verifyShouldRaiseExceptionWhenKeyIsNotRsaCompatible(Token $token)$/;"	f
verifyShouldReturnFalseWhenAlgorithmIsDifferent	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^    public function verifyShouldReturnFalseWhenAlgorithmIsDifferent(Token $token)$/;"	f
verifyShouldReturnFalseWhenAlgorithmIsDifferent	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^    public function verifyShouldReturnFalseWhenAlgorithmIsDifferent(Token $token)$/;"	f
verifyShouldReturnFalseWhenAlgorithmIsDifferent	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^    public function verifyShouldReturnFalseWhenAlgorithmIsDifferent(Token $token)$/;"	f
verifyShouldReturnFalseWhenKeyIsNotRight	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^    public function verifyShouldReturnFalseWhenKeyIsNotRight(Token $token)$/;"	f
verifyShouldReturnFalseWhenKeyIsNotRight	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^    public function verifyShouldReturnFalseWhenKeyIsNotRight(Token $token)$/;"	f
verifyShouldReturnFalseWhenKeyIsNotRight	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^    public function verifyShouldReturnFalseWhenKeyIsNotRight(Token $token)$/;"	f
verifyShouldReturnFalseWhenTokenAlgorithmIsDifferent	.\Source\application\library\vendor\lcobucci\jwt\test\unit\TokenTest.php	/^    public function verifyShouldReturnFalseWhenTokenAlgorithmIsDifferent()$/;"	f
verifyShouldReturnTrueWhenKeyIsRight	.\Source\application\library\vendor\lcobucci\jwt\test\functional\EcdsaTokenTest.php	/^    public function verifyShouldReturnTrueWhenKeyIsRight(Token $token)$/;"	f
verifyShouldReturnTrueWhenKeyIsRight	.\Source\application\library\vendor\lcobucci\jwt\test\functional\HmacTokenTest.php	/^    public function verifyShouldReturnTrueWhenKeyIsRight(Token $token)$/;"	f
verifyShouldReturnTrueWhenKeyIsRight	.\Source\application\library\vendor\lcobucci\jwt\test\functional\RsaTokenTest.php	/^    public function verifyShouldReturnTrueWhenKeyIsRight(Token $token)$/;"	f
version	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $version = $xliff->attributes->getNamedItem('version');$/;"	v
view	.\Source\application\library\Alpaca\MVC\Controller\AbstractController.php	/^        $view = new View($variables);$/;"	v
view	.\Source\application\library\Alpaca\MVC\Controller\AbstractController.php	/^    protected function view($variables = null){$/;"	f
view	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^                $view = $controllerClass->$getDefaultView($view);$/;"	v
view	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^                $view = $moduleClass->$getDefaultView($view);$/;"	v
view	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $view = $controllerClass->$onDisplay($view);$/;"	v
view	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $view = $controllerClass->$onDisplay();$/;"	v
view	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $view = $initResult;$/;"	v
view	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^            $view = $this->dispatcher();$/;"	v
view	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $view = $controllerClass->$action();$/;"	v
view	.\Source\application\library\Alpaca\MVC\Router\Router.php	/^        $view = $this->forward($request_url);$/;"	v
view	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Facades\Response.php	/^	public static function view($view, $data = array(), $status = 200, array $headers = array())$/;"	f
view	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^		$view = $path.'\/views';$/;"	v
viewDefinition	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^        $this->viewDefinition = $viewDefinition;$/;"	v
viewDefinition	.\Source\application\library\Zend\Db\Metadata\Object\ViewObject.php	/^    protected $viewDefinition;$/;"	v
viewNames	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $viewNames = array();$/;"	v
views	.\Source\application\library\Zend\Db\Metadata\Source\AbstractSource.php	/^        $views = array();$/;"	v
visible	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^		$this->visible = $visible;$/;"	v
visible	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $visible = array();$/;"	v
wasCreatedFromDiff	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    private static function wasCreatedFromDiff(DateInterval $interval)$/;"	f
we	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^			\/\/ If the values implements the Arrayable interface we can just call this$/;"	i
weekEndsAt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    protected static $weekEndsAt = self::SUNDAY;$/;"	v
weekStartsAt	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    protected static $weekStartsAt = self::MONDAY;$/;"	v
weekendDays	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    protected static $weekendDays = array(self::SATURDAY, self::SUNDAY);$/;"	v
weeksAndDays	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^    public function weeksAndDays($weeks, $days)$/;"	f
weight	.\Source\application\library\Zend\Validator\CreditCard.php	/^            $weight = $weight % 2 + 1;$/;"	v
weight	.\Source\application\library\Zend\Validator\CreditCard.php	/^        $weight = 2;$/;"	v
weight	.\Source\application\library\Zend\Validator\EmailAddress.php	/^        $weight  = array();$/;"	v
when	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\ServiceProvider.php	/^	public function when()$/;"	f
where	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^            $where = array();$/;"	v
where	.\Source\application\library\Zend\Db\RowGateway\AbstractRowGateway.php	/^        $where = array();$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Delete.php	/^            $this->where = $predicate;$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Delete.php	/^        $this->where = new Where();$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    protected $where = null;$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Delete.php	/^    public function where($predicate, $combination = Predicate\\PredicateSet::OP_AND)$/;"	f
where	.\Source\application\library\Zend\Db\Sql\Select.php	/^                $this->where = new Where;$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Select.php	/^            $this->where = $predicate;$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $this->where  = clone $this->where;$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Select.php	/^        $this->where = new Where;$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Select.php	/^    protected $where = null;$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Select.php	/^    public function where($predicate, $combination = Predicate\\PredicateSet::OP_AND)$/;"	f
where	.\Source\application\library\Zend\Db\Sql\Update.php	/^            $this->where = $predicate;$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Update.php	/^        $this->where = clone $this->where;$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Update.php	/^        $this->where = new Where();$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Update.php	/^    protected $where = null;$/;"	v
where	.\Source\application\library\Zend\Db\Sql\Update.php	/^    public function where($predicate, $combination = Predicate\\PredicateSet::OP_AND)$/;"	f
where	.\Source\application\library\Zend\Db\TableGateway\AbstractTableGateway.php	/^    public function update($set, $where = null)$/;"	v
where	.\Source\application\library\Zend\Db\TableGateway\TableGatewayInterface.php	/^    public function update($set, $where = null);$/;"	v
where	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function where($column, $operator = null, $value = null, $boolean = 'and')$/;"	f
where	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function where($column, $operator = null, $value = null, $boolean = 'and')$/;"	f
where	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$where = $this->compileWheres($query);$/;"	v
where	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		$where = is_array($query->wheres) ? $this->compileWheres($query) : '';$/;"	v
where	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^		$where = is_array($query->wheres) ? $this->compileWheres($query) : '';$/;"	v
where	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\PostgresGrammar.php	/^		$where = $this->compileUpdateWheres($query);$/;"	v
where	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public function where($first, $operator, $second, $boolean = 'and')$/;"	f
where	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Arr.php	/^	public static function where($array, Closure $callback)$/;"	f
whereBasic	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereBasic(Builder $query, $where)$/;"	f
whereBetween	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereBetween($column, array $values, $boolean = 'and', $not = false)$/;"	f
whereBetween	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereBetween(Builder $query, $where)$/;"	f
whereDate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereDate($column, $operator, $value, $boolean = 'and')$/;"	f
whereDate	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereDate(Builder $query, $where)$/;"	f
whereDay	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereDay($column, $operator, $value, $boolean = 'and')$/;"	f
whereDay	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereDay(Builder $query, $where)$/;"	f
whereDay	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^	protected function whereDay(Builder $query, $where)$/;"	f
whereDoesntHave	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function whereDoesntHave($relation, Closure $callback = null)$/;"	f
whereExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereExists(Closure $callback, $boolean = 'and', $not = false)$/;"	f
whereExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereExists(Builder $query, $where)$/;"	f
whereHas	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function whereHas($relation, Closure $callback, $operator = '>=', $count = 1)$/;"	f
whereIn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereIn($column, $values, $boolean = 'and', $not = false)$/;"	f
whereIn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereIn(Builder $query, $where)$/;"	f
whereInSub	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function whereInSub($column, Closure $callback, $boolean, $not)$/;"	f
whereInSub	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereInSub(Builder $query, $where)$/;"	f
whereMonth	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereMonth($column, $operator, $value, $boolean = 'and')$/;"	f
whereMonth	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereMonth(Builder $query, $where)$/;"	f
whereMonth	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^	protected function whereMonth(Builder $query, $where)$/;"	f
whereNested	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereNested(Closure $callback, $boolean = 'and')$/;"	f
whereNested	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereNested(Builder $query, $where)$/;"	f
whereNotBetween	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereNotBetween($column, array $values, $boolean = 'and')$/;"	f
whereNotExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereNotExists(Closure $callback, $boolean = 'and')$/;"	f
whereNotExists	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereNotExists(Builder $query, $where)$/;"	f
whereNotIn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereNotIn($column, $values, $boolean = 'and')$/;"	f
whereNotIn	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereNotIn(Builder $query, $where)$/;"	f
whereNotInSub	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereNotInSub(Builder $query, $where)$/;"	f
whereNotNull	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereNotNull($column, $boolean = 'and')$/;"	f
whereNotNull	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereNotNull(Builder $query, $where)$/;"	f
whereNull	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereNull($column, $boolean = 'and', $not = false)$/;"	f
whereNull	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereNull(Builder $query, $where)$/;"	f
whereNull	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\JoinClause.php	/^	public function whereNull($column, $boolean = 'and')$/;"	f
wherePivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function wherePivot($column, $operator = null, $value = null, $boolean = 'and')$/;"	f
whereRaw	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereRaw($sql, array $bindings = array(), $boolean = 'and')$/;"	f
whereRaw	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereRaw(Builder $query, $where)$/;"	f
whereSub	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	protected function whereSub($column, $operator, Closure $callback, $boolean)$/;"	f
whereSub	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereSub(Builder $query, $where)$/;"	f
whereYear	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public function whereYear($column, $operator, $value, $boolean = 'and')$/;"	f
whereYear	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^	protected function whereYear(Builder $query, $where)$/;"	f
whereYear	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SQLiteGrammar.php	/^	protected function whereYear(Builder $query, $where)$/;"	f
wheres	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$this->wheres = array_merge((array) $this->wheres, (array) $wheres);$/;"	v
wheres	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^	public $wheres;$/;"	v
which	.\Source\application\library\Zend\Validator\Step.php	/^     * replaces the internal fmod function which give wrong results on many cases$/;"	f
which	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\DatabaseServiceProvider.php	/^		\/\/ interface which may be used by other components requiring connections.$/;"	i
which	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\Grammar.php	/^		\/\/ Each type of where clauses has its own compiler function which is responsible$/;"	f
which	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Collection.php	/^		\/\/ function which we were given. Then, we will sort the returned values and$/;"	f
width	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^        $width = (int) $width;$/;"	v
width	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    public function wordWrap($string, $width = 75, $break = "\\n", $cut = false)$/;"	v
width	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function wordWrap($str, $width = 75, $break = "\\n", $cut = false);$/;"	v
width	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^        $this->width  = $size[0];$/;"	v
width	.\Source\application\library\Zend\Validator\File\ImageSize.php	/^    protected $width;$/;"	v
wildcards	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^			if (str_is($key, $eventName)) $wildcards = array_merge($wildcards, $listeners);$/;"	v
wildcards	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^		$wildcards = $this->getWildcardListeners($eventName);$/;"	v
wildcards	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^		$wildcards = array();$/;"	v
wildcards	.\Source\application\library\vendor\illuminate\events\Illuminate\Events\Dispatcher.php	/^	protected $wildcards = array();$/;"	v
with	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Builder.php	/^	public function with($relations)$/;"	f
with	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	protected $with = array();$/;"	v
with	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Model.php	/^	public static function with($relations)$/;"	f
with	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\helpers.php	/^	function with($object)$/;"	f
withPivot	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function withPivot($columns)$/;"	f
withTablePrefix	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connection.php	/^	public function withTablePrefix(Grammar $grammar)$/;"	f
withTimestamps	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\BelongsToMany.php	/^	public function withTimestamps($createdAt = null, $updatedAt = null)$/;"	f
withTrashed	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^		$this->withTrashed = true;$/;"	v
withTrashed	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	protected $withTrashed = false;$/;"	v
withTrashed	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\MorphTo.php	/^	public function withTrashed()$/;"	f
withTrashed	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\SoftDeletingTrait.php	/^	public static function withTrashed()$/;"	f
wordWrap	.\Source\application\library\Zend\Stdlib\StringWrapper\AbstractStringWrapper.php	/^    public function wordWrap($string, $width = 75, $break = "\\n", $cut = false)$/;"	f
wordWrap	.\Source\application\library\Zend\Stdlib\StringWrapper\StringWrapperInterface.php	/^    public function wordWrap($str, $width = 75, $break = "\\n", $cut = false);$/;"	f
words	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function words($value, $words = 100, $end = '...')$/;"	f
words	.\Source\application\library\vendor\illuminate\support\Illuminate\Support\Str.php	/^	public static function words($value, $words = 100, $end = '...')$/;"	v
wrap	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Eloquent\Relations\Relation.php	/^	public function wrap($value)$/;"	f
wrap	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	public function wrap($value)$/;"	f
wrap	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	public function wrap($value)$/;"	f
wrapArray	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	public function wrapArray(array $values)$/;"	f
wrapTable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	public function wrapTable($table)$/;"	f
wrapTable	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\Grammar.php	/^	public function wrapTable($table)$/;"	f
wrapValue	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^	protected function wrapValue($value)$/;"	f
wrapValue	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\MySqlGrammar.php	/^	protected function wrapValue($value)$/;"	f
wrapValue	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Grammars\SqlServerGrammar.php	/^	protected function wrapValue($value)$/;"	f
wrapValue	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Schema\Grammars\MySqlGrammar.php	/^	protected function wrapValue($value)$/;"	f
wrapped	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Grammar.php	/^		$wrapped = array();$/;"	v
wrapped	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Query\Builder.php	/^		$wrapped = $this->grammar->wrap($column);$/;"	v
wrapper	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^                $wrapper = new $wrapperClass($encoding, $convertEncoding);$/;"	v
wrapper	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^        $wrapper = (string) $wrapper;$/;"	v
wrapperRegistry	.\Source\application\library\Zend\Stdlib\StringUtils.php	/^    protected static $wrapperRegistry = null;$/;"	v
write	.\Source\application\library\Zend\Session\SaveHandler\Cache.php	/^    public function write($id, $data)$/;"	f
write	.\Source\application\library\Zend\Session\SaveHandler\DbTableGateway.php	/^    public function write($id, $data)$/;"	f
write	.\Source\application\library\Zend\Session\SaveHandler\MongoDB.php	/^    public function write($id, $data)$/;"	f
write	.\Source\application\library\Zend\Session\SaveHandler\SaveHandlerInterface.php	/^    public function write($id, $data);$/;"	f
writeClose	.\Source\application\library\Zend\Session\ManagerInterface.php	/^    public function writeClose();$/;"	f
writeClose	.\Source\application\library\Zend\Session\SessionManager.php	/^    public function writeClose()$/;"	f
writeConfig	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Connectors\ConnectionFactory.php	/^		$writeConfig = $this->getReadWriteConfig($config, 'write');$/;"	v
writeLong	.\Source\application\library\vendor\symfony\translation\Dumper\MoFileDumper.php	/^    private function writeLong($str)$/;"	f
writeMigration	.\Source\application\library\vendor\illuminate\database\Illuminate\Database\Console\Migrations\MigrateMakeCommand.php	/^	protected function writeMigration($name, $table, $create)$/;"	f
writePadding	.\Source\application\library\vendor\symfony\translation\Dumper\IcuResFileDumper.php	/^    private function writePadding($data)$/;"	f
writeTranslations	.\Source\application\library\vendor\symfony\translation\Writer\TranslationWriter.php	/^    public function writeTranslations(MessageCatalogue $catalogue, $format, $options = array())$/;"	f
writer	.\Source\application\library\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php	/^        $writer = new TranslationWriter();$/;"	v
xFloatSegment	.\Source\application\library\Zend\Validator\Step.php	/^        $xFloatSegment = substr($x, strpos($x, '.') + 1) ?: '';$/;"	v
xliff	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^        $xliff = $dom->appendChild($dom->createElement('xliff'));$/;"	v
xliffBody	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^        $xliffBody = $xliffFile->appendChild($dom->createElement('body'));$/;"	v
xliffFile	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^        $xliffFile = $xliff->appendChild($dom->createElement('file'));$/;"	v
xliffHead	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^        $xliffHead = $xliffFile->appendChild($dom->createElement('header'));$/;"	v
xliffTool	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^        $xliffTool = $xliffHead->appendChild($dom->createElement('tool'));$/;"	v
xliffVersion	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^            $xliffVersion = $options['xliff_version'];$/;"	v
xliffVersion	.\Source\application\library\vendor\symfony\translation\Dumper\XliffFileDumper.php	/^        $xliffVersion = '1.2';$/;"	v
xliffVersion	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^        $xliffVersion = $this->getVersionNumber($dom);$/;"	v
xml	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^        $xml = simplexml_import_dom($dom);$/;"	v
xml	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^        $xml  = $bom . $orig;$/;"	v
xml	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^        $xml  = $this->getXmlWithXXE();$/;"	v
xml	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^        $xml  = str_replace('{ENCODING}', $encoding, $xml);$/;"	v
xml	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^        $xml = $bom . $xml;$/;"	v
xml	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^        $xml = $this->getXmlWithXXE();$/;"	v
xml	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^        $xml = $this->getXmlWithoutXXE();$/;"	v
xml	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^        $xml = iconv('UTF-8', $encoding, $xml);$/;"	v
xml	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^        $xml = str_replace('{ENCODING}', $encoding, $xml);$/;"	v
xml	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\MultibyteTest.php	/^        $xml = str_replace('{ENCODING}', 'UTF-8', $xml);$/;"	v
xml	.\Source\application\library\vendor\zendframework\zendxml\tests\ZendXmlTest\SecurityTest.php	/^        $xml = <<<XML$/;"	v
xmlUri	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $xmlUri = 'http:\/\/www.w3.org\/2001\/xml.xsd';$/;"	v
xmlUri	.\Source\application\library\vendor\symfony\translation\Loader\XliffFileLoader.php	/^            $xmlUri = 'informativeCopiesOf3rdPartySchemas\/w3c\/xml.xsd';$/;"	v
xpath	.\Source\application\library\vendor\symfony\translation\Loader\QtFileLoader.php	/^        $xpath = new \\DOMXPath($dom);$/;"	v
y	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->y = $val;$/;"	v
yFloatSegment	.\Source\application\library\Zend\Validator\Step.php	/^        $yFloatSegment = substr($y, strpos($y, '.') + 1) ?: '';$/;"	v
yamlParser	.\Source\application\library\vendor\symfony\translation\Loader\YamlFileLoader.php	/^            $this->yamlParser = new YamlParser();$/;"	v
yamlParser	.\Source\application\library\vendor\symfony\translation\Loader\YamlFileLoader.php	/^    private $yamlParser;$/;"	v
year	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $this->year = $value;$/;"	v
year	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $year = $dt->year;$/;"	v
year	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        $year = $year === null ? date('Y') : $year;$/;"	v
year	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^        return $this->year === $dt->year ? $this->modify($dt) : false;$/;"	v
year	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public function year($value)$/;"	f
years	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^                $this->years = $arg;$/;"	v
years	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php	/^            $this->years = $this->years + $interval->y * $sign;$/;"	v
yesterday	.\Source\application\library\vendor\nesbot\carbon\src\Carbon\Carbon.php	/^    public static function yesterday($tz = null)$/;"	f
